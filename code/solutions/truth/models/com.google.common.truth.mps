<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:49c2cd74-f9b4-4cdb-b285-6e535986f5c3(com.google.common.truth)">
  <persistence version="9" />
  <languages>
    <use id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage" version="9" />
    <use id="f2801650-65d5-424e-bb1b-463a8781b786" name="jetbrains.mps.baseLanguage.javadoc" version="2" />
  </languages>
  <imports>
    <import index="33ny" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util(JDK/)" />
    <import index="wyt6" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)" />
    <import index="ni5j" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util.regex(JDK/)" />
    <import index="xlxw" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.math(JDK/)" />
    <import index="guwi" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.io(JDK/)" />
    <import index="t6h5" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang.reflect(JDK/)" />
    <import index="mhfm" ref="3f233e7f-b8a6-46d2-a57f-795d56775243/java:org.jetbrains.annotations(Annotations/)" />
    <import index="kh1l" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.annotations(MPS.Core/)" />
    <import index="gyfg" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.base(MPS.Core/)" />
    <import index="wyx4" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.util.concurrent(MPS.Core/)" />
    <import index="3o3z" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.collect(MPS.Core/)" />
    <import index="gxwn" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.primitives(MPS.Core/)" />
    <import index="rjhg" ref="49808fad-9d41-4b96-83fa-9231640f6b2b/java:org.junit(JUnit/)" />
    <import index="a19p" ref="49808fad-9d41-4b96-83fa-9231640f6b2b/java:org.junit.rules(JUnit/)" />
    <import index="7cms" ref="49808fad-9d41-4b96-83fa-9231640f6b2b/java:org.junit.runners.model(JUnit/)" />
    <import index="cvlm" ref="49808fad-9d41-4b96-83fa-9231640f6b2b/java:org.junit.runner(JUnit/)" />
  </imports>
  <registry>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1080223426719" name="jetbrains.mps.baseLanguage.structure.OrExpression" flags="nn" index="22lmx$" />
      <concept id="1219920932475" name="jetbrains.mps.baseLanguage.structure.VariableArityType" flags="in" index="8X2XB">
        <child id="1219921048460" name="componentType" index="8Xvag" />
      </concept>
      <concept id="1082485599095" name="jetbrains.mps.baseLanguage.structure.BlockStatement" flags="nn" index="9aQIb">
        <child id="1082485599096" name="statements" index="9aQI4" />
      </concept>
      <concept id="1215693861676" name="jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression" flags="nn" index="d038R">
        <child id="1068498886297" name="rValue" index="37vLTx" />
        <child id="1068498886295" name="lValue" index="37vLTJ" />
      </concept>
      <concept id="1153417849900" name="jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression" flags="nn" index="2d3UOw" />
      <concept id="1215695189714" name="jetbrains.mps.baseLanguage.structure.PlusAssignmentExpression" flags="nn" index="d57v9" />
      <concept id="1153422105332" name="jetbrains.mps.baseLanguage.structure.RemExpression" flags="nn" index="2dk9JS" />
      <concept id="1153422305557" name="jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression" flags="nn" index="2dkUwp" />
      <concept id="1202948039474" name="jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation" flags="nn" index="liA8E" />
      <concept id="1179360813171" name="jetbrains.mps.baseLanguage.structure.HexIntegerLiteral" flags="nn" index="2nou5x">
        <property id="1179360856892" name="value" index="2noCCI" />
      </concept>
      <concept id="1224500764161" name="jetbrains.mps.baseLanguage.structure.BitwiseAndExpression" flags="nn" index="pVHWs" />
      <concept id="1465982738277781862" name="jetbrains.mps.baseLanguage.structure.PlaceholderMember" flags="ng" index="2tJIrI" />
      <concept id="28358707492436943" name="jetbrains.mps.baseLanguage.structure.JavaImport" flags="ng" index="u1fJn">
        <property id="28358707492436944" name="onDemand" index="u1fJ8" />
        <property id="5574384225470059890" name="static" index="1XWMmp" />
      </concept>
      <concept id="5279705229678483897" name="jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant" flags="nn" index="2$xPTn">
        <property id="5279705229678483899" name="value" index="2$xPTl" />
      </concept>
      <concept id="1076505808687" name="jetbrains.mps.baseLanguage.structure.WhileStatement" flags="nn" index="2$JKZl">
        <child id="1076505808688" name="condition" index="2$JKZa" />
      </concept>
      <concept id="1239714755177" name="jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation" flags="nn" index="2$Kvd9">
        <child id="1239714902950" name="expression" index="2$L3a6" />
      </concept>
      <concept id="1173175405605" name="jetbrains.mps.baseLanguage.structure.ArrayAccessExpression" flags="nn" index="AH0OO">
        <child id="1173175577737" name="index" index="AHEQo" />
        <child id="1173175590490" name="array" index="AHHXb" />
      </concept>
      <concept id="1188207840427" name="jetbrains.mps.baseLanguage.structure.AnnotationInstance" flags="nn" index="2AHcQZ">
        <reference id="1188208074048" name="annotation" index="2AI5Lk" />
        <child id="1188214630783" name="value" index="2B76xF" />
      </concept>
      <concept id="1188208481402" name="jetbrains.mps.baseLanguage.structure.HasAnnotation" flags="ng" index="2AJDlI">
        <child id="1188208488637" name="annotation" index="2AJF6D" />
      </concept>
      <concept id="1188214545140" name="jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue" flags="ng" index="2B6LJw">
        <reference id="1188214555875" name="key" index="2B6OnR" />
        <child id="1188214607812" name="value" index="2B70Vg" />
      </concept>
      <concept id="1188220165133" name="jetbrains.mps.baseLanguage.structure.ArrayLiteral" flags="nn" index="2BsdOp">
        <child id="1188220173759" name="item" index="2BsfMF" />
      </concept>
      <concept id="2820489544401957797" name="jetbrains.mps.baseLanguage.structure.DefaultClassCreator" flags="nn" index="HV5vD">
        <reference id="2820489544401957798" name="classifier" index="HV5vE" />
      </concept>
      <concept id="1154032098014" name="jetbrains.mps.baseLanguage.structure.AbstractLoopStatement" flags="nn" index="2LF5Ji">
        <child id="1154032183016" name="body" index="2LFqv$" />
      </concept>
      <concept id="1251851371723515367" name="jetbrains.mps.baseLanguage.structure.ArrayClassExpression" flags="nn" index="2MthRn">
        <child id="1251851371723515368" name="arrayType" index="2MthRo" />
      </concept>
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1197029447546" name="jetbrains.mps.baseLanguage.structure.FieldReferenceOperation" flags="nn" index="2OwXpG">
        <reference id="1197029500499" name="fieldDeclaration" index="2Oxat5" />
      </concept>
      <concept id="1164879751025" name="jetbrains.mps.baseLanguage.structure.TryCatchStatement" flags="nn" index="SfApY">
        <child id="1164879758292" name="body" index="SfCbr" />
        <child id="1164903496223" name="catchClause" index="TEbGg" />
      </concept>
      <concept id="1145552977093" name="jetbrains.mps.baseLanguage.structure.GenericNewExpression" flags="nn" index="2ShNRf">
        <child id="1145553007750" name="creator" index="2ShVmc" />
      </concept>
      <concept id="1164903280175" name="jetbrains.mps.baseLanguage.structure.CatchClause" flags="nn" index="TDmWw">
        <child id="1164903359218" name="catchBody" index="TDEfX" />
        <child id="1164903359217" name="throwable" index="TDEfY" />
      </concept>
      <concept id="1070462154015" name="jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration" flags="ig" index="Wx3nA" />
      <concept id="1070475354124" name="jetbrains.mps.baseLanguage.structure.ThisExpression" flags="nn" index="Xjq3P">
        <reference id="1182955020723" name="classConcept" index="1HBi2w" />
      </concept>
      <concept id="1070475587102" name="jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation" flags="nn" index="XkiVB" />
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1182160077978" name="jetbrains.mps.baseLanguage.structure.AnonymousClassCreator" flags="nn" index="YeOm9">
        <child id="1182160096073" name="cls" index="YeSDq" />
      </concept>
      <concept id="1081236700938" name="jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration" flags="ig" index="2YIFZL" />
      <concept id="1081236700937" name="jetbrains.mps.baseLanguage.structure.StaticMethodCall" flags="nn" index="2YIFZM">
        <reference id="1144433194310" name="classConcept" index="1Pybhc" />
      </concept>
      <concept id="1164991038168" name="jetbrains.mps.baseLanguage.structure.ThrowStatement" flags="nn" index="YS8fn">
        <child id="1164991057263" name="throwable" index="YScLw" />
      </concept>
      <concept id="1081256982272" name="jetbrains.mps.baseLanguage.structure.InstanceOfExpression" flags="nn" index="2ZW3vV">
        <child id="1081256993305" name="classType" index="2ZW6by" />
        <child id="1081256993304" name="leftExpression" index="2ZW6bz" />
      </concept>
      <concept id="1070533707846" name="jetbrains.mps.baseLanguage.structure.StaticFieldReference" flags="nn" index="10M0yZ">
        <reference id="1144433057691" name="classifier" index="1PxDUh" />
      </concept>
      <concept id="1070533982221" name="jetbrains.mps.baseLanguage.structure.ShortType" flags="in" index="10N3zO" />
      <concept id="1070534058343" name="jetbrains.mps.baseLanguage.structure.NullLiteral" flags="nn" index="10Nm6u" />
      <concept id="1070534370425" name="jetbrains.mps.baseLanguage.structure.IntegerType" flags="in" index="10Oyi0" />
      <concept id="1070534436861" name="jetbrains.mps.baseLanguage.structure.FloatType" flags="in" index="10OMs4" />
      <concept id="1070534513062" name="jetbrains.mps.baseLanguage.structure.DoubleType" flags="in" index="10P55v" />
      <concept id="1070534555686" name="jetbrains.mps.baseLanguage.structure.CharType" flags="in" index="10Pfzv" />
      <concept id="1070534604311" name="jetbrains.mps.baseLanguage.structure.ByteType" flags="in" index="10PrrI" />
      <concept id="1070534644030" name="jetbrains.mps.baseLanguage.structure.BooleanType" flags="in" index="10P_77" />
      <concept id="1070534760951" name="jetbrains.mps.baseLanguage.structure.ArrayType" flags="in" index="10Q1$e">
        <child id="1070534760952" name="componentType" index="10Q1$1" />
      </concept>
      <concept id="1070534934090" name="jetbrains.mps.baseLanguage.structure.CastExpression" flags="nn" index="10QFUN">
        <child id="1070534934091" name="type" index="10QFUM" />
        <child id="1070534934092" name="expression" index="10QFUP" />
      </concept>
      <concept id="1068390468200" name="jetbrains.mps.baseLanguage.structure.FieldDeclaration" flags="ig" index="312cEg">
        <property id="8606350594693632173" name="isTransient" index="eg7rD" />
        <property id="1240249534625" name="isVolatile" index="34CwA1" />
      </concept>
      <concept id="1068390468198" name="jetbrains.mps.baseLanguage.structure.ClassConcept" flags="ig" index="312cEu">
        <property id="1075300953594" name="abstractClass" index="1sVAO0" />
        <property id="1221565133444" name="isFinal" index="1EXbeo" />
        <child id="1095933932569" name="implementedInterface" index="EKbjA" />
        <child id="1165602531693" name="superclass" index="1zkMxy" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <property id="1176718929932" name="isFinal" index="3TUv4t" />
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1109279763828" name="jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration" flags="ng" index="16euLQ">
        <child id="1214996921760" name="bound" index="3ztrMU" />
      </concept>
      <concept id="1109279851642" name="jetbrains.mps.baseLanguage.structure.GenericDeclaration" flags="ng" index="16eOlS">
        <child id="1109279881614" name="typeVariableDeclaration" index="16eVyc" />
      </concept>
      <concept id="1109283449304" name="jetbrains.mps.baseLanguage.structure.TypeVariableReference" flags="in" index="16syzq">
        <reference id="1109283546497" name="typeVariableDeclaration" index="16sUi3" />
      </concept>
      <concept id="1092119917967" name="jetbrains.mps.baseLanguage.structure.MulExpression" flags="nn" index="17qRlL" />
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="1068498886292" name="jetbrains.mps.baseLanguage.structure.ParameterDeclaration" flags="ir" index="37vLTG" />
      <concept id="1068498886294" name="jetbrains.mps.baseLanguage.structure.AssignmentExpression" flags="nn" index="37vLTI" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="4269842503726207156" name="jetbrains.mps.baseLanguage.structure.LongLiteral" flags="nn" index="1adDum">
        <property id="4269842503726207157" name="value" index="1adDun" />
      </concept>
      <concept id="1111509017652" name="jetbrains.mps.baseLanguage.structure.FloatingPointConstant" flags="nn" index="3b6qkQ">
        <property id="1113006610751" name="value" index="$nhwW" />
      </concept>
      <concept id="1068580123132" name="jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration" flags="ng" index="3clF44">
        <property id="4276006055363816570" name="isSynchronized" index="od$2w" />
        <property id="1181808852946" name="isFinal" index="DiZV1" />
        <child id="1164879685961" name="throwsItem" index="Sfmx6" />
        <child id="1068580123133" name="returnType" index="3clF45" />
        <child id="1068580123134" name="parameter" index="3clF46" />
        <child id="1068580123135" name="body" index="3clF47" />
      </concept>
      <concept id="1068580123165" name="jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration" flags="ig" index="3clFb_">
        <property id="1178608670077" name="isAbstract" index="1EzhhJ" />
      </concept>
      <concept id="1068580123152" name="jetbrains.mps.baseLanguage.structure.EqualsExpression" flags="nn" index="3clFbC" />
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1082485599094" name="ifFalseStatement" index="9aQIa" />
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068580123137" name="jetbrains.mps.baseLanguage.structure.BooleanConstant" flags="nn" index="3clFbT">
        <property id="1068580123138" name="value" index="3clFbU" />
      </concept>
      <concept id="1068580123140" name="jetbrains.mps.baseLanguage.structure.ConstructorDeclaration" flags="ig" index="3clFbW" />
      <concept id="1068580320020" name="jetbrains.mps.baseLanguage.structure.IntegerConstant" flags="nn" index="3cmrfG">
        <property id="1068580320021" name="value" index="3cmrfH" />
      </concept>
      <concept id="1068581242875" name="jetbrains.mps.baseLanguage.structure.PlusExpression" flags="nn" index="3cpWs3" />
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6">
        <child id="1068581517676" name="expression" index="3cqZAk" />
      </concept>
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242867" name="jetbrains.mps.baseLanguage.structure.LongType" flags="in" index="3cpWsb" />
      <concept id="1068581242869" name="jetbrains.mps.baseLanguage.structure.MinusExpression" flags="nn" index="3cpWsd" />
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1068581517677" name="jetbrains.mps.baseLanguage.structure.VoidType" flags="in" index="3cqZAl" />
      <concept id="1079359253375" name="jetbrains.mps.baseLanguage.structure.ParenthesizedExpression" flags="nn" index="1eOMI4">
        <child id="1079359253376" name="expression" index="1eOMHV" />
      </concept>
      <concept id="1081506762703" name="jetbrains.mps.baseLanguage.structure.GreaterThanExpression" flags="nn" index="3eOSWO" />
      <concept id="1081506773034" name="jetbrains.mps.baseLanguage.structure.LessThanExpression" flags="nn" index="3eOVzh" />
      <concept id="1081516740877" name="jetbrains.mps.baseLanguage.structure.NotExpression" flags="nn" index="3fqX7Q">
        <child id="1081516765348" name="expression" index="3fr31v" />
      </concept>
      <concept id="1154542696413" name="jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer" flags="nn" index="3g6Rrh">
        <child id="1154542793668" name="componentType" index="3g7fb8" />
        <child id="1154542803372" name="initValue" index="3g7hyw" />
      </concept>
      <concept id="6050519299856556786" name="jetbrains.mps.baseLanguage.structure.JavaImports" flags="ng" index="1lrU7d">
        <child id="28358707492429991" name="entries" index="u1e2Z" />
      </concept>
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
        <child id="1068499141038" name="actualArgument" index="37wK5m" />
        <child id="4972241301747169160" name="typeArgument" index="3PaCim" />
      </concept>
      <concept id="1073063089578" name="jetbrains.mps.baseLanguage.structure.SuperMethodCall" flags="nn" index="3nyPlj" />
      <concept id="1212685548494" name="jetbrains.mps.baseLanguage.structure.ClassCreator" flags="nn" index="1pGfFk">
        <child id="1212687122400" name="typeParameter" index="1pMfVU" />
      </concept>
      <concept id="1107461130800" name="jetbrains.mps.baseLanguage.structure.Classifier" flags="ng" index="3pOWGL">
        <property id="521412098689998745" name="nonStatic" index="2bfB8j" />
        <child id="5375687026011219971" name="member" index="jymVt" unordered="true" />
      </concept>
      <concept id="1171903607971" name="jetbrains.mps.baseLanguage.structure.WildCardType" flags="in" index="3qTvmN" />
      <concept id="1171903862077" name="jetbrains.mps.baseLanguage.structure.LowerBoundType" flags="in" index="3qUtgH">
        <child id="1171903869531" name="bound" index="3qUvdb" />
      </concept>
      <concept id="1171903916106" name="jetbrains.mps.baseLanguage.structure.UpperBoundType" flags="in" index="3qUE_q">
        <child id="1171903916107" name="bound" index="3qUE_r" />
      </concept>
      <concept id="7812454656619025412" name="jetbrains.mps.baseLanguage.structure.LocalMethodCall" flags="nn" index="1rXfSq" />
      <concept id="1107535904670" name="jetbrains.mps.baseLanguage.structure.ClassifierType" flags="in" index="3uibUv">
        <reference id="1107535924139" name="classifier" index="3uigEE" />
        <child id="1109201940907" name="parameter" index="11_B2D" />
      </concept>
      <concept id="6528213125912070246" name="jetbrains.mps.baseLanguage.structure.Tokens" flags="ng" index="1u$dsA">
        <property id="1843920760191311250" name="tokens" index="1CJj6V" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="1214918800624" name="jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression" flags="nn" index="3uNrnE" />
      <concept id="1073239437375" name="jetbrains.mps.baseLanguage.structure.NotEqualsExpression" flags="nn" index="3y3z36" />
      <concept id="1081855346303" name="jetbrains.mps.baseLanguage.structure.BreakStatement" flags="nn" index="3zACq4" />
      <concept id="1184950988562" name="jetbrains.mps.baseLanguage.structure.ArrayCreator" flags="nn" index="3$_iS1">
        <child id="1184951007469" name="componentType" index="3$_nBY" />
        <child id="1184952969026" name="dimensionExpression" index="3$GQph" />
      </concept>
      <concept id="1184952934362" name="jetbrains.mps.baseLanguage.structure.DimensionExpression" flags="nn" index="3$GHV9">
        <child id="1184953288404" name="expression" index="3$I4v7" />
      </concept>
      <concept id="1178549954367" name="jetbrains.mps.baseLanguage.structure.IVisible" flags="ng" index="1B3ioH">
        <child id="1178549979242" name="visibility" index="1B3o_S" />
      </concept>
      <concept id="1144226303539" name="jetbrains.mps.baseLanguage.structure.ForeachStatement" flags="nn" index="1DcWWT">
        <child id="1144226360166" name="iterable" index="1DdaDG" />
      </concept>
      <concept id="1144230876926" name="jetbrains.mps.baseLanguage.structure.AbstractForStatement" flags="nn" index="1DupvO">
        <child id="1144230900587" name="variable" index="1Duv9x" />
      </concept>
      <concept id="1144231330558" name="jetbrains.mps.baseLanguage.structure.ForStatement" flags="nn" index="1Dw8fO">
        <child id="1144231399730" name="condition" index="1Dwp0S" />
        <child id="1144231408325" name="iteration" index="1Dwrff" />
      </concept>
      <concept id="1225892208569" name="jetbrains.mps.baseLanguage.structure.ShiftLeftExpression" flags="nn" index="1GRDU$" />
      <concept id="1225892319711" name="jetbrains.mps.baseLanguage.structure.ShiftRightExpression" flags="nn" index="1GS532" />
      <concept id="1107796713796" name="jetbrains.mps.baseLanguage.structure.Interface" flags="ig" index="3HP615" />
      <concept id="1163668896201" name="jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression" flags="nn" index="3K4zz7">
        <child id="1163668914799" name="condition" index="3K4Cdx" />
        <child id="1163668922816" name="ifTrue" index="3K4E3e" />
        <child id="1163668934364" name="ifFalse" index="3K4GZi" />
      </concept>
      <concept id="1082113931046" name="jetbrains.mps.baseLanguage.structure.ContinueStatement" flags="nn" index="3N13vt" />
      <concept id="1208890769693" name="jetbrains.mps.baseLanguage.structure.ArrayLengthOperation" flags="nn" index="1Rwk04" />
      <concept id="6329021646629104954" name="jetbrains.mps.baseLanguage.structure.SingleLineComment" flags="nn" index="3SKdUt">
        <child id="1350122676458893092" name="text" index="3ndbpf" />
      </concept>
      <concept id="1146644602865" name="jetbrains.mps.baseLanguage.structure.PublicVisibility" flags="nn" index="3Tm1VV" />
      <concept id="1146644623116" name="jetbrains.mps.baseLanguage.structure.PrivateVisibility" flags="nn" index="3Tm6S6" />
      <concept id="1146644641414" name="jetbrains.mps.baseLanguage.structure.ProtectedVisibility" flags="nn" index="3Tmbuc" />
      <concept id="1116615150612" name="jetbrains.mps.baseLanguage.structure.ClassifierClassExpression" flags="nn" index="3VsKOn">
        <reference id="1116615189566" name="classifier" index="3VsUkX" />
      </concept>
      <concept id="1178893518978" name="jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation" flags="nn" index="1VxSAg" />
      <concept id="1080120340718" name="jetbrains.mps.baseLanguage.structure.AndExpression" flags="nn" index="1Wc70l" />
      <concept id="1200397529627" name="jetbrains.mps.baseLanguage.structure.CharConstant" flags="nn" index="1Xhbcc">
        <property id="1200397540847" name="charConstant" index="1XhdNS" />
      </concept>
      <concept id="1170345865475" name="jetbrains.mps.baseLanguage.structure.AnonymousClass" flags="ig" index="1Y3b0j">
        <reference id="1170346070688" name="classifier" index="1Y3XeK" />
        <child id="1201186121363" name="typeParameter" index="2Ghqu4" />
      </concept>
      <concept id="8064396509828172209" name="jetbrains.mps.baseLanguage.structure.UnaryMinus" flags="nn" index="1ZRNhn" />
    </language>
    <language id="f2801650-65d5-424e-bb1b-463a8781b786" name="jetbrains.mps.baseLanguage.javadoc">
      <concept id="6832197706140896242" name="jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment" flags="ng" index="z59LJ" />
      <concept id="5349172909345501395" name="jetbrains.mps.baseLanguage.javadoc.structure.BaseDocComment" flags="ng" index="P$AiS">
        <child id="8465538089690331502" name="body" index="TZ5H$" />
      </concept>
      <concept id="5349172909345532724" name="jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment" flags="ng" index="P$JXv" />
      <concept id="8465538089690331500" name="jetbrains.mps.baseLanguage.javadoc.structure.CommentLine" flags="ng" index="TZ5HA">
        <child id="8970989240999019149" name="part" index="1dT_Ay" />
      </concept>
      <concept id="8970989240999019143" name="jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart" flags="ng" index="1dT_AC">
        <property id="8970989240999019144" name="text" index="1dT_AB" />
      </concept>
      <concept id="2068944020170241612" name="jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment" flags="ng" index="3UR2Jj" />
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <child id="5169995583184591170" name="smodelAttribute" index="lGtFl" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
    <language id="c7fb639f-be78-4307-89b0-b5959c3fa8c8" name="jetbrains.mps.lang.text">
      <concept id="155656958578482948" name="jetbrains.mps.lang.text.structure.Word" flags="ng" index="3oM_SD">
        <property id="155656958578482949" name="value" index="3oM_SC" />
      </concept>
      <concept id="2535923850359271782" name="jetbrains.mps.lang.text.structure.Line" flags="ng" index="1PaTwC">
        <child id="2535923850359271783" name="elements" index="1PaTwD" />
      </concept>
    </language>
  </registry>
  <node concept="312cEu" id="5JQC2dmPwE$">
    <property role="TrG5h" value="PrimitiveShortArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwE_" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwEA" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPwEB" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwE$" resolve="PrimitiveShortArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPwED" role="11_B2D">
        <node concept="10N3zO" id="5JQC2dmPwEC" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwGW" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwH3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwH4" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code short[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwH5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwH6" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwH7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwH8" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwEE" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwEF" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwEG" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwEH" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwEI" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwEJ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPwEL" role="1tU5fm">
          <node concept="10N3zO" id="5JQC2dmPwEK" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwEM" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP$LR" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmP$LS" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwEG" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP$LT" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwEI" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwEQ" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwER" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwES" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwET" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPwEU" role="3cqZAk">
            <property role="Xl_RC" value="short" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwEV" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwEW" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwEX" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwEY" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwEZ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwF0" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq3ap7e" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Shorts" resolve="Shorts" />
            <ref role="37wK5l" to="gxwn:~Shorts.asList(short...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="wYVAq3ap7f" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwF3" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwF4" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPwF5" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Short" resolve="Short" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwF6" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwF7" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwF8" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwF9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3apUe" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwFa" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwFc" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwFb" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPwFe" role="1tU5fm">
              <node concept="10N3zO" id="5JQC2dmPwFd" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwFf" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwFg" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwFh" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwFi" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwFb" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwFj" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwF8" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwFl" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwFm" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPwHg" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tbc" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tbd" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPwFP" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPwFQ" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPwFL" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPwFM" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPwFN" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPwFO" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwF8" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPwFH" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPwFJ" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwFo" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPwFq" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwFp" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPwFs" role="1tU5fm">
                  <node concept="10N3zO" id="5JQC2dmPwFr" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPwFt" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPwFu" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPwF8" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPwFw" role="10QFUM">
                    <node concept="10N3zO" id="5JQC2dmPwFv" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPwFx" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPwFy" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmP$MD" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(short[],short[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmP$ME" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwFb" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP$MF" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwFp" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwFB" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwFC" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwFD" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPwFE" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3ao_m" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Shorts" resolve="Shorts" />
                      <ref role="37wK5l" to="gxwn:~Shorts.asList(short...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3ao_n" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwFp" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwFR" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwFS" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwFT" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwH9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHa" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwHb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHc" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwHd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHe" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwFU" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwFV" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwFW" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwFX" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3ar73" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwFY" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwG0" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwFZ" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPwG2" role="1tU5fm">
              <node concept="10N3zO" id="5JQC2dmPwG1" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwG3" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPwGz" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPwG$" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPwGy" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPwHo" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tbe" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tbf" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbg" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbh" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbi" role="1PaTwD">
                    <property role="3oM_SC" value="short[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbj" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbk" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbl" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbm" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbn" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbo" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbp" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tbq" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPwGu" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPwGw" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwG5" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPwG7" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwG6" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPwG9" role="1tU5fm">
                  <node concept="10N3zO" id="5JQC2dmPwG8" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPwGa" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPwGb" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPwFW" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPwGd" role="10QFUM">
                    <node concept="10N3zO" id="5JQC2dmPwGc" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPwGe" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPwGf" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPwGg" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPwGh" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPwFZ" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwGi" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPwFW" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmP$MI" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(short[],short[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmP$MJ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwFZ" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP$MK" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwG6" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwGn" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwGo" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwGp" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPwGq" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPwGr" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3ayfr" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Shorts" resolve="Shorts" />
                      <ref role="37wK5l" to="gxwn:~Shorts.asList(short...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3ayfs" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwG6" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwG_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwGA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwGB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwHh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHi" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwHj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHk" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwHl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwHm" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwGC" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwGD" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwGE" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPwGT" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPwGF" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPwGG" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwGH" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwGI" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPwGJ" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPwGK" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPwGL" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPwGM" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwEX" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwGN" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPwGO" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwGP" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPwGQ" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPwGR" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPwGS" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwEX" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwGU" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwGV" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
    <node concept="1lrU7d" id="5JQC2dmPwGX" role="lGtFl">
      <node concept="u1fJn" id="5JQC2dmPwGY" role="u1e2Z">
        <property role="u1fJ8" value="true" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.truth" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwGZ" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.primitives.Shorts" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwH0" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="java.util.Arrays" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwH1" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="java.util.List" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwH2" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="javax.annotation.Nullable" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$1O">
    <property role="TrG5h" value="AbstractVerb" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmP$1P" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmP$1Q" role="16eVyc">
      <property role="TrG5h" value="T" />
      <node concept="3uibUv" id="5JQC2dmP$1R" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmP$1O" resolve="AbstractVerb" />
        <node concept="16syzq" id="5JQC2dmP$1S" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$1Q" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="3uibUv" id="5JQC2dmP$5d" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzG8" resolve="FailureContext" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$7g" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$7m" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$7n" role="1dT_Ay">
          <property role="1dT_AB" value="A parent type for some infrastructure used in the Verb. " />
        </node>
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmP$5e" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="failureStrategy" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmP$5g" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$5h" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmP$5i" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$5j" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$5k" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$5l" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$5m" role="3clF47">
        <node concept="1VxSAg" id="5JQC2dmP$MM" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmP$5r" resolve="AbstractVerb" />
          <node concept="37vLTw" id="5JQC2dmP$MN" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$5k" resolve="failureStrategy" />
          </node>
          <node concept="10Nm6u" id="5JQC2dmP$MO" role="37wK5m" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$5q" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmP$5r" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$5s" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$5t" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$5u" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$5v" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$5w" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$5x" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$5y" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmP$5$" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmP$5z" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$5_" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP$MP" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzGn" resolve="FailureContext" />
          <node concept="37vLTw" id="5JQC2dmP$MQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$5v" resolve="format" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP$MR" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$5y" resolve="args" />
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$5A" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmP$5B" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmP$5C" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmP$5D" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmP$5E" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmP$5e" resolve="failureStrategy" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmTIkV" role="37vLTx">
              <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
              <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
              <node concept="37vLTw" id="5JQC2dmTIkW" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$5t" resolve="failureStrategy" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$5K" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$5L" role="jymVt">
      <property role="TrG5h" value="getFailureStrategy" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$5M" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$5N" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmP$5T" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmP$5O" role="3K4Cdx">
              <ref role="37wK5l" node="5JQC2dmPzH8" resolve="hasFailureMessage" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmP$MS" role="3K4E3e">
              <node concept="1pGfFk" id="5JQC2dmP$Nn" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmP$3C" resolve="AbstractVerb.MessagePrependingFailureStrategy" />
                <node concept="37vLTw" id="5JQC2dmP$No" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$5e" resolve="failureStrategy" />
                </node>
                <node concept="Xjq3P" id="5JQC2dmP$Nr" role="37wK5m" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmP$5S" role="3K4GZi">
              <ref role="3cqZAo" node="5JQC2dmP$5e" resolve="failureStrategy" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmP$5U" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$5V" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$5W" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$5X" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$5Y" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$5Z" role="3clFbG">
            <node concept="1rXfSq" id="5JQC2dmP$60" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$61" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="Xl_RD" id="5JQC2dmP$62" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$63" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$64" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$65" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$7o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7p" role="1dT_Ay">
            <property role="1dT_AB" value="Triggers the failure strategy with an empty failure message " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$66" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$67" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$68" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$69" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$6a" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmP$6c" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmP$6b" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$6d" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$6e" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$6f" role="3clFbG">
            <node concept="1rXfSq" id="5JQC2dmP$6g" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$6h" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="2YIFZM" id="5JQC2dmQaBX" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="37vLTw" id="5JQC2dmQaBY" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$67" resolve="format" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaBZ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$6a" resolve="args" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$6l" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$6m" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$6n" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$7q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7r" role="1dT_Ay">
            <property role="1dT_AB" value="Triggers the failure strategy with the given failure message " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$6o" role="jymVt">
      <property role="TrG5h" value="withMessage" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$6p" role="3clF46">
        <property role="TrG5h" value="messageToPrepend" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$6q" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$6r" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$6s" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmP$6t" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmP$6u" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmP$1Q" resolve="T" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$6v" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$7s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7t" role="1dT_Ay">
            <property role="1dT_AB" value=" Overrides the failure message of the subsequent subject's propositions." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7v" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7x" role="1dT_Ay">
            <property role="1dT_AB" value=" @see com.google.common.truth.delegation.DelegationTest" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7z" role="1dT_Ay">
            <property role="1dT_AB" value=" @param messageToPrepend a descriptive message." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7_" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb which will show the descriptive message along with the normal failure" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7B" role="1dT_Ay">
            <property role="1dT_AB" value="     text." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$6w" role="jymVt">
      <property role="TrG5h" value="withMessage" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$6x" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$6y" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$6z" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$6$" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmP$6A" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmP$6_" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$6B" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmP$6C" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmP$6D" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmP$1Q" resolve="T" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$6E" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$7C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7D" role="1dT_Ay">
            <property role="1dT_AB" value=" Overrides the failure message of the subsequent subject's propositions." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7F" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7H" role="1dT_Ay">
            <property role="1dT_AB" value=" @see com.google.common.truth.delegation.DelegationTest" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7J" role="1dT_Ay">
            <property role="1dT_AB" value=" @param format a descriptive message with formatting template content." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7L" role="1dT_Ay">
            <property role="1dT_AB" value=" @param args object parameters to be substituted into the message template." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7M" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7N" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb which will show the descriptive message along with the normal failure" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7O" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7P" role="1dT_Ay">
            <property role="1dT_AB" value="     text." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$6F" role="jymVt">
      <property role="TrG5h" value="about" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmP$6G" role="16eVyc">
        <property role="TrG5h" value="S" />
        <node concept="3uibUv" id="5JQC2dmP$6H" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
          <node concept="16syzq" id="5JQC2dmP$6I" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$6G" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$6J" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$6K" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmP$6K" role="16eVyc">
        <property role="TrG5h" value="D" />
      </node>
      <node concept="16euLQ" id="5JQC2dmP$6L" role="16eVyc">
        <property role="TrG5h" value="SF" />
        <node concept="3uibUv" id="5JQC2dmP$6M" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
          <node concept="16syzq" id="5JQC2dmP$6N" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$6G" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$6O" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$6K" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$6P" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmP$6Q" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmP$6L" resolve="SF" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$6R" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$6S" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Ns" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$NN" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$2T" resolve="AbstractVerb.DelegatedVerb" />
              <node concept="1rXfSq" id="5JQC2dmP$NO" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$NT" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$6P" resolve="factory" />
              </node>
              <node concept="16syzq" id="5JQC2dmP$NU" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmP$6G" resolve="S" />
              </node>
              <node concept="16syzq" id="5JQC2dmP$NV" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmP$6K" resolve="D" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$6Y" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$6Z" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$1T" resolve="AbstractVerb.DelegatedVerb" />
        <node concept="16syzq" id="5JQC2dmP$70" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$6G" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmP$71" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$6K" resolve="D" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmP$72" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$7Q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7R" role="1dT_Ay">
            <property role="1dT_AB" value=" The recommended method of extension of Truth to new types, which is documented in {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7S" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7T" role="1dT_Ay">
            <property role="1dT_AB" value=" com.google.common.truth.delegation.DelegationTest}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7U" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7V" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7X" role="1dT_Ay">
            <property role="1dT_AB" value=" @see com.google.common.truth.delegation.DelegationTest" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$7Y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$7Z" role="1dT_Ay">
            <property role="1dT_AB" value=" @param factory a {@code SubjectFactory&lt;S, D&gt;} implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$80" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$81" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb for the type returned by the SubjectFactory" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$73" role="jymVt">
      <property role="TrG5h" value="about" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmP$74" role="16eVyc">
        <property role="TrG5h" value="V" />
        <node concept="3uibUv" id="5JQC2dmP$75" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPvSf" resolve="AbstractDelegatedVerb" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$76" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$77" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPy2W" resolve="DelegatedVerbFactory" />
          <node concept="16syzq" id="5JQC2dmP$78" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$74" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$79" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$7a" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$NZ" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmP$NY" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmP$76" resolve="factory" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$O0" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPy30" resolve="createVerb" />
              <node concept="1rXfSq" id="5JQC2dmP$O1" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$7d" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmP$7e" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmP$74" resolve="V" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$7f" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$82" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$83" role="1dT_Ay">
            <property role="1dT_AB" value=" A generic, advanced method of extension of Truth to new types, which is documented on {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$84" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$85" role="1dT_Ay">
            <property role="1dT_AB" value=" DelegatedVerbFactory}. Extension creators should prefer {@link SubjectFactory} if possible." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$86" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$87" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$88" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$89" role="1dT_Ay">
            <property role="1dT_AB" value=" @param &lt;V&gt; the type of {@link AbstractDelegatedVerb} to return" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$8a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$8b" role="1dT_Ay">
            <property role="1dT_AB" value=" @param factory a {@code DelegatedVerbFactory&lt;V&gt;} implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$8c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$8d" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb of type {@code &lt;V&gt;}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmP$1T" role="jymVt">
      <property role="TrG5h" value="DelegatedVerb" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tm1VV" id="5JQC2dmP$1U" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmP$1V" role="16eVyc">
        <property role="TrG5h" value="S" />
        <node concept="3uibUv" id="5JQC2dmP$1W" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
          <node concept="16syzq" id="5JQC2dmP$1X" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$1V" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$1Y" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$1Z" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmP$1Z" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="3uibUv" id="5JQC2dmP$2I" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPvSf" resolve="AbstractDelegatedVerb" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmP$3s" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$8e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$8f" role="1dT_Ay">
            <property role="1dT_AB" value="A special Verb implementation which wraps a SubjectFactory " />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmP$2J" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$2L" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$2M" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmP$2N" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="subjectFactory" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$2P" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
          <node concept="16syzq" id="5JQC2dmP$2Q" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$1V" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$2R" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$1Z" resolve="T" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$2S" role="1B3o_S" />
      </node>
      <node concept="312cEu" id="5JQC2dmP$20" role="jymVt">
        <property role="TrG5h" value="Factory" />
        <property role="2bfB8j" value="false" />
        <property role="1sVAO0" value="false" />
        <property role="1EXbeo" value="false" />
        <node concept="3Tm6S6" id="5JQC2dmP$21" role="1B3o_S" />
        <node concept="16euLQ" id="5JQC2dmP$22" role="16eVyc">
          <property role="TrG5h" value="S" />
          <node concept="3uibUv" id="5JQC2dmP$23" role="3ztrMU">
            <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
            <node concept="16syzq" id="5JQC2dmP$24" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$25" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
            </node>
          </node>
        </node>
        <node concept="16euLQ" id="5JQC2dmP$26" role="16eVyc">
          <property role="TrG5h" value="T" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$27" role="EKbjA">
          <ref role="3uigEE" node="5JQC2dmPy2W" resolve="DelegatedVerbFactory" />
          <node concept="3uibUv" id="5JQC2dmP$28" role="11_B2D">
            <ref role="3uigEE" node="5JQC2dmP$1T" resolve="AbstractVerb.DelegatedVerb" />
            <node concept="16syzq" id="5JQC2dmP$29" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$2a" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
            </node>
          </node>
        </node>
        <node concept="312cEg" id="5JQC2dmP$2b" role="jymVt">
          <property role="34CwA1" value="false" />
          <property role="eg7rD" value="false" />
          <property role="TrG5h" value="subjectFactory" />
          <property role="3TUv4t" value="true" />
          <node concept="3uibUv" id="5JQC2dmP$2d" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
            <node concept="16syzq" id="5JQC2dmP$2e" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$2f" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
            </node>
          </node>
          <node concept="3Tm6S6" id="5JQC2dmP$2g" role="1B3o_S" />
        </node>
        <node concept="3clFbW" id="5JQC2dmP$2h" role="jymVt">
          <property role="DiZV1" value="false" />
          <property role="od$2w" value="false" />
          <node concept="3cqZAl" id="5JQC2dmP$2i" role="3clF45" />
          <node concept="37vLTG" id="5JQC2dmP$2j" role="3clF46">
            <property role="TrG5h" value="subjectFactory" />
            <property role="3TUv4t" value="false" />
            <node concept="3uibUv" id="5JQC2dmP$2k" role="1tU5fm">
              <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
              <node concept="16syzq" id="5JQC2dmP$2l" role="11_B2D">
                <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
              </node>
              <node concept="16syzq" id="5JQC2dmP$2m" role="11_B2D">
                <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$2n" role="3clF47">
            <node concept="3clFbF" id="5JQC2dmP$2o" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmP$2p" role="3clFbG">
                <node concept="2OqwBi" id="5JQC2dmP$2q" role="37vLTJ">
                  <node concept="Xjq3P" id="5JQC2dmP$2r" role="2Oq$k0" />
                  <node concept="2OwXpG" id="5JQC2dmP$2s" role="2OqNvi">
                    <ref role="2Oxat5" node="5JQC2dmP$2b" resolve="subjectFactory" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP$2t" role="37vLTx">
                  <ref role="3cqZAo" node="5JQC2dmP$2j" resolve="subjectFactory" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3Tm6S6" id="5JQC2dmP$2u" role="1B3o_S" />
        </node>
        <node concept="3clFb_" id="5JQC2dmP$2v" role="jymVt">
          <property role="TrG5h" value="createVerb" />
          <property role="DiZV1" value="false" />
          <property role="od$2w" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$2w" role="2AJF6D">
            <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
          </node>
          <node concept="37vLTG" id="5JQC2dmP$2x" role="3clF46">
            <property role="TrG5h" value="failureStrategy" />
            <property role="3TUv4t" value="false" />
            <node concept="3uibUv" id="5JQC2dmP$2y" role="1tU5fm">
              <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$2z" role="3clF47">
            <node concept="3cpWs6" id="5JQC2dmP$2$" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmP$O6" role="3cqZAk">
                <node concept="1pGfFk" id="5JQC2dmP$Og" role="2ShVmc">
                  <ref role="37wK5l" node="5JQC2dmP$2T" resolve="AbstractVerb.DelegatedVerb" />
                  <node concept="37vLTw" id="5JQC2dmP$Oh" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$2x" resolve="failureStrategy" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP$Oi" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$2b" resolve="subjectFactory" />
                  </node>
                  <node concept="16syzq" id="5JQC2dmP$Oq" role="1pMfVU">
                    <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
                  </node>
                  <node concept="16syzq" id="5JQC2dmP$Or" role="1pMfVU">
                    <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3Tm1VV" id="5JQC2dmP$2E" role="1B3o_S" />
          <node concept="3uibUv" id="5JQC2dmP$2F" role="3clF45">
            <ref role="3uigEE" node="5JQC2dmP$1T" resolve="AbstractVerb.DelegatedVerb" />
            <node concept="16syzq" id="5JQC2dmP$2G" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$22" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$2H" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$26" resolve="T" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmP$2T" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$2U" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmP$2V" role="3clF46">
          <property role="TrG5h" value="failureStrategy" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$2W" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$2X" role="3clF46">
          <property role="TrG5h" value="subjectFactory" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$2Y" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
            <node concept="16syzq" id="5JQC2dmP$2Z" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$1V" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$30" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$1Z" resolve="T" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$31" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$32" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$33" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$34" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$35" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$36" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$2J" resolve="failureStrategy" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmTEYw" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dmTEYx" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$2V" resolve="failureStrategy" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmP$39" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$3a" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$3b" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$3c" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$3d" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$2N" resolve="subjectFactory" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmTGFv" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dmTGFw" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$2X" resolve="subjectFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$3g" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$3h" role="jymVt">
        <property role="TrG5h" value="that" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmP$3i" role="3clF46">
          <property role="TrG5h" value="target" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$3j" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$3k" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$1Z" resolve="T" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$3l" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$3m" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP$O_" role="3cqZAk">
              <node concept="37vLTw" id="5JQC2dmP$O$" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$2N" resolve="subjectFactory" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$OA" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPw91" resolve="getSubject" />
                <node concept="37vLTw" id="5JQC2dmP$OB" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$2J" resolve="failureStrategy" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$OF" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$3i" resolve="target" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$3q" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmP$3r" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmP$1V" resolve="S" />
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmP$3t" role="jymVt">
      <property role="TrG5h" value="MessagePrependingFailureStrategy" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tmbuc" id="5JQC2dmP$3u" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$3v" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="312cEg" id="5JQC2dmP$3w" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$3y" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$3z" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmP$3$" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="messageHolder" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$3A" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPzG8" resolve="FailureContext" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$3B" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmP$3C" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$3D" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmP$3E" role="3clF46">
          <property role="TrG5h" value="delegate" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$3F" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$3G" role="3clF46">
          <property role="TrG5h" value="messageHolder" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$3H" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPzG8" resolve="FailureContext" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$3I" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$3J" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$3K" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$3L" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$3M" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$3N" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$3w" resolve="delegate" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmTGfn" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dmTGfo" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$3E" resolve="delegate" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmP$3Q" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$3R" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$3S" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$3T" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$3U" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$3$" resolve="messageHolder" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmTHp_" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dmTHpA" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$3G" resolve="messageHolder" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$3X" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$3Y" role="jymVt">
        <property role="TrG5h" value="fail" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$3Z" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$40" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$41" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$42" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$43" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP$OM" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmP$OL" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$3w" resolve="delegate" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$ON" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
                <node concept="1rXfSq" id="5JQC2dmP$OO" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$4W" resolve="prependFailureMessageIfAny" />
                  <node concept="37vLTw" id="5JQC2dmP$OP" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$40" resolve="message" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$47" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$48" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$49" role="jymVt">
        <property role="TrG5h" value="fail" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$4a" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4b" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4c" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4d" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4e" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$4f" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$4g" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP$OW" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmP$OV" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$3w" resolve="delegate" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$OX" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                <node concept="1rXfSq" id="5JQC2dmP$OY" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$4W" resolve="prependFailureMessageIfAny" />
                  <node concept="37vLTw" id="5JQC2dmP$OZ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$4b" resolve="message" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP$P2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4d" resolve="cause" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$4l" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$4m" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$4n" role="jymVt">
        <property role="TrG5h" value="failComparing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$4o" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4p" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4q" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4r" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4s" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4t" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4u" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$4v" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$4w" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP$P7" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmP$P6" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$3w" resolve="delegate" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$P8" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                <node concept="1rXfSq" id="5JQC2dmP$P9" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$4W" resolve="prependFailureMessageIfAny" />
                  <node concept="37vLTw" id="5JQC2dmP$Pa" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$4p" resolve="message" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Pd" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4r" resolve="expected" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Pe" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4t" resolve="actual" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$4A" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$4B" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$4C" role="jymVt">
        <property role="TrG5h" value="failComparing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$4D" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4E" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4F" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4G" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4H" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4I" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4J" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$4K" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4L" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$4M" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$4N" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP$Pj" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmP$Pi" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$3w" resolve="delegate" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$Pk" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                <node concept="1rXfSq" id="5JQC2dmP$Pl" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$4W" resolve="prependFailureMessageIfAny" />
                  <node concept="37vLTw" id="5JQC2dmP$Pm" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$4E" resolve="message" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Pp" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4G" resolve="expected" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Pq" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4I" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Pr" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$4K" resolve="cause" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$4U" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$4V" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$4W" role="jymVt">
        <property role="TrG5h" value="prependFailureMessageIfAny" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmP$4X" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$4Y" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$4Z" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$50" role="3cqZAp">
            <node concept="3K4zz7" id="5JQC2dmP$5a" role="3cqZAk">
              <node concept="3clFbC" id="5JQC2dmP$51" role="3K4Cdx">
                <node concept="2OqwBi" id="5JQC2dmP$Pw" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmP$Pv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$3$" resolve="messageHolder" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$Px" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPzGW" resolve="getFailureMessage" />
                  </node>
                </node>
                <node concept="10Nm6u" id="5JQC2dmP$53" role="3uHU7w" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$54" role="3K4E3e">
                <ref role="3cqZAo" node="5JQC2dmP$4X" resolve="message" />
              </node>
              <node concept="3cpWs3" id="5JQC2dmP$55" role="3K4GZi">
                <node concept="3cpWs3" id="5JQC2dmP$56" role="3uHU7B">
                  <node concept="2OqwBi" id="5JQC2dmP$PA" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP$P_" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$3$" resolve="messageHolder" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP$PB" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPzGW" resolve="getFailureMessage" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmP$58" role="3uHU7w">
                    <property role="Xl_RC" value=": " />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP$59" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmP$4X" resolve="message" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$5b" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$5c" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzQS">
    <property role="TrG5h" value="TestVerb" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPzQT" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzQU" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmP$1O" resolve="AbstractVerb" />
      <node concept="3uibUv" id="5JQC2dmPzQV" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzQW" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzQX" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzQY" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzQZ" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzR0" role="3clF47">
        <node concept="1VxSAg" id="5JQC2dmP$PC" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzR5" resolve="TestVerb" />
          <node concept="37vLTw" id="5JQC2dmP$PD" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzQY" resolve="failureStrategy" />
          </node>
          <node concept="10Nm6u" id="5JQC2dmP$PE" role="37wK5m" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzR4" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPzR5" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzR6" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzR7" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzR8" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzR9" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzRa" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzRb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzRc" role="3clF47">
        <node concept="1VxSAg" id="5JQC2dmP$PF" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzRz" resolve="TestVerb" />
          <node concept="37vLTw" id="5JQC2dmP$PG" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzR7" resolve="failureStrategy" />
          </node>
          <node concept="3K4zz7" id="5JQC2dmP$PH" role="37wK5m">
            <node concept="3clFbC" id="5JQC2dmP$PI" role="3K4Cdx">
              <node concept="37vLTw" id="5JQC2dmP$PJ" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzR9" resolve="message" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$PK" role="3uHU7w" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmP$PL" role="3K4E3e" />
            <node concept="Xl_RD" id="5JQC2dmP$PM" role="3K4GZi">
              <property role="Xl_RC" value="%s" />
            </node>
          </node>
          <node concept="3K4zz7" id="5JQC2dmP$PN" role="37wK5m">
            <node concept="3clFbC" id="5JQC2dmP$PO" role="3K4Cdx">
              <node concept="37vLTw" id="5JQC2dmP$PP" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzR9" resolve="message" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$PQ" role="3uHU7w" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmP$PR" role="3K4E3e">
              <node concept="3$_iS1" id="5JQC2dmP$PS" role="2ShVmc">
                <node concept="3$GHV9" id="5JQC2dmP$PT" role="3$GQph">
                  <node concept="3cmrfG" id="5JQC2dmP$PU" role="3$I4v7">
                    <property role="3cmrfH" value="0" />
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dmP$PV" role="3$_nBY">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmP$PW" role="3K4GZi">
              <node concept="3g6Rrh" id="5JQC2dmP$PX" role="2ShVmc">
                <node concept="37vLTw" id="5JQC2dmP$PY" role="3g7hyw">
                  <ref role="3cqZAo" node="5JQC2dmPzR9" resolve="message" />
                </node>
                <node concept="3uibUv" id="5JQC2dmP$PZ" role="3g7fb8">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzRy" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPzRz" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzR$" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzR_" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzRA" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzRB" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzRC" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzRD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzRE" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPzRG" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPzRF" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzRH" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP$Q0" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmP$5r" resolve="AbstractVerb" />
          <node concept="2YIFZM" id="5JQC2dnU2FV" role="37wK5m">
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <node concept="37vLTw" id="5JQC2dnU8zd" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzR_" resolve="failureStrategy" />
            </node>
          </node>
          <node concept="37vLTw" id="5JQC2dmP$Qn" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzRB" resolve="format" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP$Qo" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzRE" resolve="args" />
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPzYC" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tbr" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tbs" role="1PaTwD">
              <property role="3oM_SC" value="@NullableType" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzRN" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPzRO" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzRP" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
        <node concept="2B6LJw" id="5JQC2dmPzRQ" role="2B76xF">
          <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
          <node concept="2BsdOp" id="5JQC2dmPzRT" role="2B70Vg">
            <node concept="Xl_RD" id="5JQC2dmPzRR" role="2BsfMF">
              <property role="Xl_RC" value="unchecked" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmPzRS" role="2BsfMF">
              <property role="Xl_RC" value="rawtypes" />
            </node>
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmPzRU" role="16eVyc">
        <property role="TrG5h" value="T" />
        <node concept="3uibUv" id="5JQC2dmPzRV" role="3ztrMU">
          <ref role="3uigEE" to="wyt6:~Comparable" resolve="Comparable" />
          <node concept="3qTvmN" id="5JQC2dmPzRW" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzRX" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzRY" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPzRZ" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzRU" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzS0" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzS1" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPzS2" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPzS3" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPzS4" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPzvD" resolve="ComparableSubject" />
                <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
                <node concept="1rXfSq" id="5JQC2dmPzS5" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzS6" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzRX" resolve="target" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzS7" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzS8" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
        <node concept="3qTvmN" id="5JQC2dmPzS9" role="11_B2D" />
        <node concept="16syzq" id="5JQC2dmPzSa" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzRU" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzSb" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzSc" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzSd" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzSe" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzSf" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzSg" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Qp" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$QF" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwCd" resolve="BigDecimalSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$QG" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$QJ" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzSc" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzSk" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzSl" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwC8" resolve="BigDecimalSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzSm" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzSn" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzSo" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzSp" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzSq" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzSr" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$QK" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$R2" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPw8F" resolve="DefaultSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$R3" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$R6" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzSn" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzSv" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzSw" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
        <node concept="3uibUv" id="5JQC2dmPzSx" role="11_B2D">
          <ref role="3uigEE" node="5JQC2dmPw8A" resolve="DefaultSubject" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzSy" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzSz" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzS$" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPzS_" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPzSA" role="2B70Vg">
            <property role="Xl_RC" value="ClassSubject.java" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzSB" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzSC" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzSD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPzSE" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzSF" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzSG" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$R7" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Rp" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPvBI" resolve="ClassSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Rq" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Rt" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzSB" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzSK" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzSL" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvB_" resolve="ClassSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzSM" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzSN" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzSO" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzSP" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzSQ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzSR" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmP$Rv" role="3cqZAk">
            <ref role="1Pybhc" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
            <ref role="37wK5l" node="5JQC2dmPwHu" resolve="create" />
            <node concept="1rXfSq" id="5JQC2dmP$Rw" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$Rz" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzSN" resolve="target" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzSV" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzSW" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzSX" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzSY" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzSZ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzT0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzT1" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzT2" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$R$" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$RQ" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$8l" resolve="LongSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$RR" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$RU" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzSY" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzT6" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzT7" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$8g" resolve="LongSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzT8" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzT9" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzTa" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzTb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzTc" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzTd" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$RV" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Sd" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzIX" resolve="DoubleSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Se" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Sh" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzT9" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzTh" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzTi" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzId" resolve="DoubleSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzTj" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzTk" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzTl" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzTm" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzTn" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzTo" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Si" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$S$" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPvDb" resolve="FloatSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$S_" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$SC" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzTk" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzTs" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzTt" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvCr" resolve="FloatSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzTu" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzTv" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzTw" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzTx" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzTy" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzTz" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$SD" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$SV" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzQg" resolve="IntegerSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$SW" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$SZ" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzTv" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzTB" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzTC" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQb" resolve="IntegerSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzTD" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzTE" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzTF" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzTG" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzTH" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzTI" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$T0" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Ti" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwQk" resolve="BooleanSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Tj" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Tm" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzTE" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzTM" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzTN" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwQf" resolve="BooleanSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzTO" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzTP" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzTQ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzTR" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzTS" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzTT" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Tn" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$TD" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyK6" resolve="StringSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$TE" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$TH" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzTP" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzTX" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzTY" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyK1" resolve="StringSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzTZ" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzU0" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzU1" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzU2" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPzU3" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzU4" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzU5" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$TI" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$U0" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPykk" resolve="IterableSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$U1" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$U4" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzU0" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzU9" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzUa" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzUb" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzUc" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzUd" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzUe" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
          <node concept="3qTvmN" id="5JQC2dmPzUf" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzUg" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzUh" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$U5" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Un" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzkK" resolve="SortedSetSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Uo" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Ur" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzUc" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzUl" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzUm" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzi5" resolve="SortedSetSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzUn" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPzUo" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzUp" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzUq" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzUs" role="1tU5fm">
          <node concept="16syzq" id="5JQC2dmPzUr" role="10Q1$1">
            <ref role="16sUi3" node="5JQC2dmPzUo" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzUt" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzUu" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Us" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$UI" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPx$z" resolve="ObjectArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$UJ" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$UM" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzUp" resolve="target" />
              </node>
              <node concept="16syzq" id="5JQC2dnVh_z" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPzUo" resolve="T" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzUz" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzU$" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxxz" resolve="ObjectArraySubject" />
        <node concept="16syzq" id="5JQC2dmPzU_" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzUo" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzUA" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzUB" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzUC" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzUE" role="1tU5fm">
          <node concept="10P_77" id="5JQC2dmPzUD" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzUF" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzUG" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$UO" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$V6" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPw4u" resolve="PrimitiveBooleanArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$V7" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Va" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzUB" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzUK" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzUL" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPw4o" resolve="PrimitiveBooleanArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzUM" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzUN" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzUO" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzUQ" role="1tU5fm">
          <node concept="10N3zO" id="5JQC2dmPzUP" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzUR" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzUS" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Vb" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Vt" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwEE" resolve="PrimitiveShortArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Vu" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Vx" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzUN" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzUW" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzUX" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwE$" resolve="PrimitiveShortArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzUY" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzUZ" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzV0" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzV2" role="1tU5fm">
          <node concept="10Oyi0" id="5JQC2dmPzV1" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzV3" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzV4" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Vy" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$VO" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyGb" resolve="PrimitiveIntArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$VP" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$VS" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzUZ" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzV8" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzV9" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyG5" resolve="PrimitiveIntArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzVa" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzVb" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzVc" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzVe" role="1tU5fm">
          <node concept="3cpWsb" id="5JQC2dmPzVd" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzVf" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzVg" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$VT" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Wb" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwVa" resolve="PrimitiveLongArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Wc" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Wf" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzVb" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzVk" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzVl" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwV4" resolve="PrimitiveLongArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzVm" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzVn" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzVo" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzVq" role="1tU5fm">
          <node concept="10Pfzv" id="5JQC2dmPzVp" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzVr" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzVs" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Wg" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Wy" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzZ5" resolve="PrimitiveCharArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Wz" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$WA" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzVn" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzVw" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzVx" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzYZ" resolve="PrimitiveCharArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzVy" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzVz" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzV$" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzVA" role="1tU5fm">
          <node concept="10PrrI" id="5JQC2dmPzV_" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzVB" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzVC" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$WB" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$WT" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzCA" resolve="PrimitiveByteArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$WU" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$WX" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzVz" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzVG" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzVH" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCp" resolve="PrimitiveByteArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzVI" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzVJ" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzVK" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzVM" role="1tU5fm">
          <node concept="10OMs4" id="5JQC2dmPzVL" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzVN" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzVO" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$WY" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Xg" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPxNw" resolve="PrimitiveFloatArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Xh" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Xk" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzVJ" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzVS" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzVT" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxL5" resolve="PrimitiveFloatArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzVU" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzVV" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzVW" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzVY" role="1tU5fm">
          <node concept="10P55v" id="5JQC2dmPzVX" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzVZ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzW0" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Xl" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$XB" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$cq" resolve="PrimitiveDoubleArraySubject" />
              <node concept="1rXfSq" id="5JQC2dmP$XC" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$XF" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzVV" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzW4" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzW5" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$9Z" resolve="PrimitiveDoubleArraySubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzW6" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzW7" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzW8" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzW9" role="1tU5fm">
          <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
          <node concept="3qTvmN" id="5JQC2dmPzWa" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzWb" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzWc" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$XG" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$XY" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwj9" resolve="GuavaOptionalSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$XZ" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Y2" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzW7" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzWg" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzWh" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwj3" resolve="GuavaOptionalSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzWi" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzWj" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzWk" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzWl" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
          <node concept="3qTvmN" id="5JQC2dmPzWm" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzWn" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzWo" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzWp" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Y3" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Yl" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPxdJ" resolve="MapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Ym" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Yp" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzWj" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzWt" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzWu" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPx92" resolve="MapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzWv" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzWw" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzWx" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzWy" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
          <node concept="3qTvmN" id="5JQC2dmPzWz" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzW$" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzW_" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzWA" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Yq" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$YG" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$DV" resolve="SortedMapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$YH" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$YK" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzWw" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzWE" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzWF" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$_h" resolve="SortedMapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzWG" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzWH" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzWI" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzWJ" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPzWK" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzWL" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzWM" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzWN" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$YL" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Z3" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPz1A" resolve="MultimapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Z4" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Z7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzWH" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzWR" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzWS" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzWT" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzWU" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzWV" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzWW" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPzWX" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzWY" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzWZ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzX0" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Z8" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$Zq" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyIX" resolve="ListMultimapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$Zr" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$Zu" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzWU" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzX4" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzX5" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyIU" resolve="ListMultimapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzX6" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzX7" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzX8" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzX9" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPzXa" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzXb" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzXc" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzXd" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$Zv" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP$ZL" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwRE" resolve="SetMultimapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP$ZM" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP$ZP" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzX7" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzXh" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzXi" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwRB" resolve="SetMultimapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzXj" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzXk" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzXl" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzXm" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multiset" resolve="Multiset" />
          <node concept="3qTvmN" id="5JQC2dmPzXn" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzXo" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzXp" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$ZQ" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_08" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPw7g" resolve="MultisetSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_09" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_0c" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzXk" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzXt" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzXu" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPw7d" resolve="MultisetSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzXv" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzXw" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzXx" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzXy" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Table" resolve="Table" />
          <node concept="3qTvmN" id="5JQC2dmPzXz" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzX$" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzX_" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzXA" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzXB" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_0d" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_0v" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzza" resolve="TableSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_0w" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_0z" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzXw" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzXF" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzXG" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzz2" resolve="TableSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzXH" role="jymVt">
      <property role="TrG5h" value="that" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzXI" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzXJ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzXK" role="1tU5fm">
          <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
          <node concept="3qTvmN" id="5JQC2dmPzXL" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzXM" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzXN" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_0$" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_0Q" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPxt5" resolve="AtomicLongMapSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_0R" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_0U" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzXI" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzXR" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzXS" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxsZ" resolve="AtomicLongMapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzXT" role="jymVt">
      <property role="TrG5h" value="withMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzXU" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzXV" role="3clF46">
        <property role="TrG5h" value="messageToPrepend" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzXW" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzXX" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzXY" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzXZ" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_0V" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_1K" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzRz" resolve="TestVerb" />
              <node concept="1rXfSq" id="5JQC2dmP_1L" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmP_1O" role="37wK5m">
                <property role="Xl_RC" value="%s" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_1P" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzXV" resolve="messageToPrepend" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPzYE" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tbt" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tbu" role="1PaTwD">
              <property role="3oM_SC" value="Must" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tbv" role="1PaTwD">
              <property role="3oM_SC" value="be" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tbw" role="1PaTwD">
              <property role="3oM_SC" value="a" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tbx" role="1PaTwD">
              <property role="3oM_SC" value="new" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tby" role="1PaTwD">
              <property role="3oM_SC" value="instance." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzY4" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzY5" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzY6" role="jymVt">
      <property role="TrG5h" value="withMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzY7" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzY8" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzY9" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzYa" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzYb" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPzYd" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPzYc" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzYe" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmPzYW" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tbz" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tb$" role="1PaTwD">
              <property role="3oM_SC" value="@NullableType" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzYf" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_1Q" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_3y" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzRz" resolve="TestVerb" />
              <node concept="1rXfSq" id="5JQC2dmP_3z" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_3A" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzY8" resolve="format" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_3B" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzYb" resolve="args" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPzYY" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tb_" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8TbA" role="1PaTwD">
              <property role="3oM_SC" value="Must" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbB" role="1PaTwD">
              <property role="3oM_SC" value="be" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbC" role="1PaTwD">
              <property role="3oM_SC" value="a" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbD" role="1PaTwD">
              <property role="3oM_SC" value="new" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbE" role="1PaTwD">
              <property role="3oM_SC" value="instance." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzYk" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzYl" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzYm" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzYF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYG" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a {@link TestVerb} that will prepend the formatted message using the specified" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYI" role="1dT_Ay">
            <property role="1dT_AB" value=" arguments to the failure message in the event of a test failure." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYK" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYM" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The failure message template string only supports the {@code &quot;%s&quot;} specifier," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYO" role="1dT_Ay">
            <property role="1dT_AB" value=" not the full range of {@link java.util.Formatter} specifiers." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYQ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYS" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws IllegalArgumentException if the number of placeholders in the format string does not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzYT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzYU" role="1dT_Ay">
            <property role="1dT_AB" value="     equal the number of given arguments" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPznH">
    <property role="TrG5h" value="GraphMatching" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3UR2Jj" id="5JQC2dmPzsQ" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzt3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzt4" role="1dT_Ay">
          <property role="1dT_AB" value=" Helper routines related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Matching_(graph_theory)&quot;&gt;graph" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzt5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzt6" role="1dT_Ay">
          <property role="1dT_AB" value=" matchings&lt;/a&gt;." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzt7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzt8" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzt9" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzta" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Pete Gillin" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzsx" role="jymVt">
      <property role="TrG5h" value="maximumCardinalityBipartiteMatching" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPzsy" role="16eVyc">
        <property role="TrG5h" value="U" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPzsz" role="16eVyc">
        <property role="TrG5h" value="V" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzs$" role="3clF46">
        <property role="TrG5h" value="graph" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzs_" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="16syzq" id="5JQC2dmPzsA" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzsy" resolve="U" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzsB" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzsz" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzsC" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzsD" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzsE" role="3cqZAk">
            <node concept="2YIFZM" id="5JQC2dmP_3E" role="2Oq$k0">
              <ref role="1Pybhc" node="5JQC2dmPznI" resolve="GraphMatching.HopcroftKarp" />
              <ref role="37wK5l" node="5JQC2dmPznS" resolve="overBipartiteGraph" />
              <node concept="37vLTw" id="5JQC2dmP_3F" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzs$" resolve="graph" />
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPzsH" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzon" resolve="perform" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPzsI" role="3clF45">
        <ref role="3uigEE" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
        <node concept="16syzq" id="5JQC2dmPzsJ" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzsy" resolve="U" />
        </node>
        <node concept="16syzq" id="5JQC2dmPzsK" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzsz" resolve="V" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPzsL" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPztb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztc" role="1dT_Ay">
            <property role="1dT_AB" value=" Finds a &lt;a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzte" role="1dT_Ay">
            <property role="1dT_AB" value=" href=&quot;https://en.wikipedia.org/wiki/Matching_(graph_theory)#In_unweighted_bipartite_graphs&quot;&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztg" role="1dT_Ay">
            <property role="1dT_AB" value=" maximum cardinality matching of a bipartite graph&lt;/a&gt;. The vertices of one part of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzth" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzti" role="1dT_Ay">
            <property role="1dT_AB" value=" bipartite graph are identified by objects of type {@code U} using object equality. The vertices" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztk" role="1dT_Ay">
            <property role="1dT_AB" value=" of the other part are similarly identified by objects of type {@code V}. The input bipartite" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztm" role="1dT_Ay">
            <property role="1dT_AB" value=" graph is represented as a {@code Multimap&lt;U, V&gt;}: each entry represents an edge, with the key" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzto" role="1dT_Ay">
            <property role="1dT_AB" value=" representing the vertex in the first part and the value representing the value in the second" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztq" role="1dT_Ay">
            <property role="1dT_AB" value=" part. (Note that, even if {@code U} and {@code V} are the same type, equality between a key and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzts" role="1dT_Ay">
            <property role="1dT_AB" value=" a value has no special significance: effectively, they are in different domains.) Fails if any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztu" role="1dT_Ay">
            <property role="1dT_AB" value=" of the vertices (keys or values) are null. The output matching is similarly represented as a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztw" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code BiMap&lt;U, V&gt;} (the property that a matching has no common vertices translates into the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzty" role="1dT_Ay">
            <property role="1dT_AB" value=" bidirectional uniqueness property of the {@link BiMap})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzt$" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzt_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztA" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;If there are multiple matchings which share the maximum cardinality, an arbitrary one is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztC" role="1dT_Ay">
            <property role="1dT_AB" value=" returned." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzsM" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzsN" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPzsO" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPzsP" role="1B3o_S" />
    </node>
    <node concept="312cEu" id="5JQC2dmPznI" role="jymVt">
      <property role="TrG5h" value="HopcroftKarp" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPznJ" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPznK" role="16eVyc">
        <property role="TrG5h" value="U" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPznL" role="16eVyc">
        <property role="TrG5h" value="V" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPzsw" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPztD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztE" role="1dT_Ay">
            <property role="1dT_AB" value=" Helper which implements the &lt;a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztG" role="1dT_Ay">
            <property role="1dT_AB" value=" href=&quot;https://en.wikipedia.org/wiki/Hopcroft%E2%80%93Karp_algorithm&quot;&gt;Hopcroft–Karp&lt;/a&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztI" role="1dT_Ay">
            <property role="1dT_AB" value=" algorithm." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztK" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztM" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The worst-case complexity is {@code O(E V^0.5)} where the graph contains {@code E} edges and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztO" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code V} vertices. For dense graphs, where {@code E} is {@code O(V^2)}, this is {@code V^2.5}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPztP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPztQ" role="1dT_Ay">
            <property role="1dT_AB" value=" (and non-dense graphs perform better than dense graphs with the same number of vertices)." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPznM" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="graph" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPznO" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="16syzq" id="5JQC2dmPznP" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
          </node>
          <node concept="16syzq" id="5JQC2dmPznQ" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPznR" role="1B3o_S" />
      </node>
      <node concept="2YIFZL" id="5JQC2dmPznS" role="jymVt">
        <property role="TrG5h" value="overBipartiteGraph" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPznT" role="16eVyc">
          <property role="TrG5h" value="U" />
        </node>
        <node concept="16euLQ" id="5JQC2dmPznU" role="16eVyc">
          <property role="TrG5h" value="V" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPznV" role="3clF46">
          <property role="TrG5h" value="graph" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPznW" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
            <node concept="16syzq" id="5JQC2dmPznX" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznT" resolve="U" />
            </node>
            <node concept="16syzq" id="5JQC2dmPznY" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznU" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPznZ" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPzo0" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmP_3G" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmP_4A" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmPzo9" resolve="GraphMatching.HopcroftKarp" />
                <node concept="37vLTw" id="5JQC2dmP_4B" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPznV" resolve="graph" />
                </node>
                <node concept="16syzq" id="5JQC2dmP_4C" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmPznT" resolve="U" />
                </node>
                <node concept="16syzq" id="5JQC2dmP_4D" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmPznU" resolve="V" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmPzo5" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPznI" resolve="GraphMatching.HopcroftKarp" />
          <node concept="16syzq" id="5JQC2dmPzo6" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznT" resolve="U" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzo7" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznU" resolve="V" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPzo8" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPztR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPztS" role="1dT_Ay">
              <property role="1dT_AB" value="Factory method which returns an instance ready to perform the algorithm over the bipartite" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPztT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPztU" role="1dT_Ay">
              <property role="1dT_AB" value="graph described by the given multimap." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmPzo9" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPzoa" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPzob" role="3clF46">
          <property role="TrG5h" value="graph" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzoc" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
            <node concept="16syzq" id="5JQC2dmPzod" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
            </node>
            <node concept="16syzq" id="5JQC2dmPzoe" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzof" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPzog" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPzoh" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPzoi" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPzoj" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPzok" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPznM" resolve="graph" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPzol" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPzob" resolve="graph" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPzom" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPzon" role="jymVt">
        <property role="TrG5h" value="perform" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3clFbS" id="5JQC2dmPzoo" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPzoq" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPzop" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="matching" />
              <node concept="3uibUv" id="5JQC2dmPzor" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~BiMap" resolve="BiMap" />
                <node concept="16syzq" id="5JQC2dmPzos" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                </node>
                <node concept="16syzq" id="5JQC2dmPzot" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dn8Y4o" role="33vP2m">
                <ref role="1Pybhc" to="3o3z:~HashBiMap" resolve="HashBiMap" />
                <ref role="37wK5l" to="3o3z:~HashBiMap.create():com.google.common.collect.HashBiMap" resolve="create" />
              </node>
            </node>
          </node>
          <node concept="2$JKZl" id="5JQC2dmPzpa" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPzov" role="2$JKZa">
              <property role="3clFbU" value="true" />
            </node>
            <node concept="3clFbS" id="5JQC2dmPzox" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPzoz" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPzoy" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="layers" />
                  <node concept="3uibUv" id="5JQC2dmPzo$" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                    <node concept="16syzq" id="5JQC2dmPzo_" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPzoA" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                  <node concept="2ShNRf" id="5JQC2dmP_53" role="33vP2m">
                    <node concept="1pGfFk" id="5JQC2dmP_57" role="2ShVmc">
                      <ref role="37wK5l" to="33ny:~HashMap.&lt;init&gt;()" resolve="HashMap" />
                      <node concept="16syzq" id="5JQC2dmP_58" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmP_59" role="1pMfVU">
                        <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPzoF" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPzoE" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="freeRhsVertexLayer" />
                  <node concept="3uibUv" id="5JQC2dmPzoG" role="1tU5fm">
                    <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
                    <node concept="3uibUv" id="5JQC2dmPzoH" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPzoI" role="33vP2m">
                    <ref role="37wK5l" node="5JQC2dmPzpi" resolve="breadthFirstSearch" />
                    <node concept="37vLTw" id="5JQC2dmPzoJ" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzop" resolve="matching" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPzoK" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzoy" resolve="layers" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPzoL" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPzoM" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_5f" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_5e" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzoE" resolve="freeRhsVertexLayer" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_5g" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzoP" role="3clFbx">
                  <node concept="3zACq4" id="5JQC2dmPzoQ" role="3cqZAp" />
                </node>
              </node>
              <node concept="1DcWWT" id="5JQC2dmPzoR" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_5m" role="1DdaDG">
                  <node concept="37vLTw" id="5JQC2dmP_5l" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPznM" resolve="graph" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_5n" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
                <node concept="3cpWsn" id="5JQC2dmPzp6" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="lhs" />
                  <node concept="16syzq" id="5JQC2dmPzp8" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzoT" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPzoU" role="3cqZAp">
                    <node concept="3fqX7Q" id="5JQC2dmPzoV" role="3clFbw">
                      <node concept="2OqwBi" id="5JQC2dmP_5t" role="3fr31v">
                        <node concept="37vLTw" id="5JQC2dmP_5s" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPzop" resolve="matching" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_5u" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                          <node concept="37vLTw" id="5JQC2dmP_5v" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzp6" resolve="lhs" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPzoZ" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPzp0" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPzp1" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPzr8" resolve="depthFirstSearch" />
                          <node concept="37vLTw" id="5JQC2dmPzp2" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzop" resolve="matching" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPzp3" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzoy" resolve="layers" />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_5_" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmP_5$" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzoE" resolve="freeRhsVertexLayer" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_5A" role="2OqNvi">
                              <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPzp5" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzp6" resolve="lhs" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPzpb" role="3cqZAp">
            <node concept="2YIFZM" id="wYVAq37pf6" role="3cqZAk">
              <ref role="37wK5l" to="3o3z:~ImmutableBiMap.copyOf(java.util.Map):com.google.common.collect.ImmutableBiMap" resolve="copyOf" />
              <ref role="1Pybhc" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
              <node concept="37vLTw" id="wYVAq37pf7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzop" resolve="matching" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmPzpe" role="3clF45">
          <ref role="3uigEE" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
          <node concept="16syzq" id="5JQC2dmPzpf" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzpg" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPzph" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPztV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPztW" role="1dT_Ay">
              <property role="1dT_AB" value="Performs the algorithm, and returns a bimap describing the matching found. " />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzpi" role="jymVt">
        <property role="TrG5h" value="breadthFirstSearch" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPzpj" role="3clF46">
          <property role="TrG5h" value="matching" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzpk" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~BiMap" resolve="BiMap" />
            <node concept="16syzq" id="5JQC2dmPzpl" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
            </node>
            <node concept="16syzq" id="5JQC2dmPzpm" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzpn" role="3clF46">
          <property role="TrG5h" value="layers" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzpo" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
            <node concept="16syzq" id="5JQC2dmPzpp" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPzpq" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzpr" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPzpt" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPzps" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="queue" />
              <node concept="3uibUv" id="5JQC2dmPzpu" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Queue" resolve="Queue" />
                <node concept="16syzq" id="5JQC2dmPzpv" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                </node>
              </node>
              <node concept="2ShNRf" id="5JQC2dmP_5F" role="33vP2m">
                <node concept="1pGfFk" id="5JQC2dmP_5J" role="2ShVmc">
                  <ref role="37wK5l" to="33ny:~ArrayDeque.&lt;init&gt;()" resolve="ArrayDeque" />
                  <node concept="16syzq" id="5JQC2dn9Oqu" role="1pMfVU">
                    <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPzpz" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPzpy" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="freeRhsVertexLayer" />
              <node concept="3uibUv" id="5JQC2dmPzp$" role="1tU5fm">
                <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
                <node concept="3uibUv" id="5JQC2dmPzp_" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dna9S0" role="33vP2m">
                <ref role="37wK5l" to="gyfg:~Optional.absent():com.google.common.base.Optional" resolve="absent" />
                <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPzpB" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_5U" role="1DdaDG">
              <node concept="37vLTw" id="5JQC2dmP_5T" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPznM" resolve="graph" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_5V" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPzpR" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="lhs" />
              <node concept="16syzq" id="5JQC2dmPzpT" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPzpD" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmPzpE" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPzpF" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_61" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_60" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzpj" resolve="matching" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_62" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                      <node concept="37vLTw" id="5JQC2dmP_63" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzpR" resolve="lhs" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzpJ" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPzpK" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_69" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP_68" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPzpn" resolve="layers" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_6a" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.put(java.lang.Object,java.lang.Object):java.lang.Object" resolve="put" />
                        <node concept="37vLTw" id="5JQC2dmP_6b" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzpR" resolve="lhs" />
                        </node>
                        <node concept="3cmrfG" id="5JQC2dmP_6c" role="37wK5m">
                          <property role="3cmrfH" value="1" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmPzpO" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_6i" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP_6h" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPzps" resolve="queue" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_6j" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Queue.add(java.lang.Object):boolean" resolve="add" />
                        <node concept="37vLTw" id="5JQC2dmP_6k" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzpR" resolve="lhs" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="2$JKZl" id="5JQC2dmPzr1" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPzpV" role="2$JKZa">
              <node concept="2OqwBi" id="5JQC2dmP_6q" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_6p" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzps" resolve="queue" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_6r" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPzpY" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPzq0" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPzpZ" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="lhs" />
                  <node concept="16syzq" id="5JQC2dmPzq1" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_6x" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_6w" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzps" resolve="queue" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_6y" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Queue.remove():java.lang.Object" resolve="remove" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPzq4" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPzq3" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="layer" />
                  <node concept="10Oyi0" id="5JQC2dmPzq5" role="1tU5fm" />
                  <node concept="2OqwBi" id="5JQC2dmP_6C" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_6B" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzpn" resolve="layers" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_6D" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dmP_6E" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzpZ" resolve="lhs" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPzq8" role="3cqZAp">
                <node concept="1Wc70l" id="5JQC2dmPzq9" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_6K" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP_6J" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzpy" resolve="freeRhsVertexLayer" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_6L" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                    </node>
                  </node>
                  <node concept="3eOSWO" id="5JQC2dmPzqb" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmPzqc" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPzq3" resolve="layer" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmP_6R" role="3uHU7w">
                      <node concept="37vLTw" id="5JQC2dmP_6Q" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPzpy" resolve="freeRhsVertexLayer" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_6S" role="2OqNvi">
                        <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzqf" role="3clFbx">
                  <node concept="3zACq4" id="5JQC2dmPzqg" role="3cqZAp" />
                </node>
              </node>
              <node concept="1DcWWT" id="5JQC2dmPzqh" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_6Y" role="1DdaDG">
                  <node concept="37vLTw" id="5JQC2dmP_6X" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPznM" resolve="graph" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_6Z" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.get(java.lang.Object):java.util.Collection" resolve="get" />
                    <node concept="37vLTw" id="5JQC2dmP_70" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzpZ" resolve="lhs" />
                    </node>
                  </node>
                </node>
                <node concept="3cpWsn" id="5JQC2dmPzqW" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="rhs" />
                  <node concept="16syzq" id="5JQC2dmPzqY" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzqj" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPzqk" role="3cqZAp">
                    <node concept="3fqX7Q" id="5JQC2dmPzql" role="3clFbw">
                      <node concept="2OqwBi" id="5JQC2dmP_76" role="3fr31v">
                        <node concept="37vLTw" id="5JQC2dmP_75" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPzpj" resolve="matching" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_77" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                          <node concept="37vLTw" id="5JQC2dmP_78" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzqW" resolve="rhs" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="9aQIb" id="5JQC2dmPzq$" role="9aQIa">
                      <node concept="3clFbS" id="5JQC2dmPzq_" role="9aQI4">
                        <node concept="3cpWs8" id="5JQC2dmPzqB" role="3cqZAp">
                          <node concept="3cpWsn" id="5JQC2dmPzqA" role="3cpWs9">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="nextLhs" />
                            <node concept="16syzq" id="5JQC2dmPzqC" role="1tU5fm">
                              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                            </node>
                            <node concept="2OqwBi" id="5JQC2dmPzqD" role="33vP2m">
                              <node concept="2OqwBi" id="5JQC2dmP_7e" role="2Oq$k0">
                                <node concept="37vLTw" id="5JQC2dmP_7d" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPzpj" resolve="matching" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmP_7f" role="2OqNvi">
                                  <ref role="37wK5l" to="3o3z:~BiMap.inverse():com.google.common.collect.BiMap" resolve="inverse" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5JQC2dmPzqF" role="2OqNvi">
                                <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                                <node concept="37vLTw" id="5JQC2dmPzqG" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPzqW" resolve="rhs" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmPzqH" role="3cqZAp">
                          <node concept="3fqX7Q" id="5JQC2dmPzqI" role="3clFbw">
                            <node concept="2OqwBi" id="5JQC2dmP_7l" role="3fr31v">
                              <node concept="37vLTw" id="5JQC2dmP_7k" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPzpn" resolve="layers" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmP_7m" role="2OqNvi">
                                <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                                <node concept="37vLTw" id="5JQC2dmP_7n" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPzqA" resolve="nextLhs" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPzqM" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmPzqN" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmP_7t" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmP_7s" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPzpn" resolve="layers" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmP_7u" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Map.put(java.lang.Object,java.lang.Object):java.lang.Object" resolve="put" />
                                  <node concept="37vLTw" id="5JQC2dmP_7v" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPzqA" resolve="nextLhs" />
                                  </node>
                                  <node concept="3cpWs3" id="5JQC2dmP_7w" role="37wK5m">
                                    <node concept="37vLTw" id="5JQC2dmP_7x" role="3uHU7B">
                                      <ref role="3cqZAo" node="5JQC2dmPzq3" resolve="layer" />
                                    </node>
                                    <node concept="3cmrfG" id="5JQC2dmP_7y" role="3uHU7w">
                                      <property role="3cmrfH" value="1" />
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3clFbF" id="5JQC2dmPzqT" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmP_7C" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmP_7B" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPzps" resolve="queue" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmP_7D" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Queue.add(java.lang.Object):boolean" resolve="add" />
                                  <node concept="37vLTw" id="5JQC2dmP_7E" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPzqA" resolve="nextLhs" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPzqp" role="3clFbx">
                      <node concept="3clFbJ" id="5JQC2dmPzqq" role="3cqZAp">
                        <node concept="3fqX7Q" id="5JQC2dmPzqr" role="3clFbw">
                          <node concept="2OqwBi" id="5JQC2dmP_7K" role="3fr31v">
                            <node concept="37vLTw" id="5JQC2dmP_7J" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzpy" resolve="freeRhsVertexLayer" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_7L" role="2OqNvi">
                              <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPzqu" role="3clFbx">
                          <node concept="3clFbF" id="5JQC2dmPzqv" role="3cqZAp">
                            <node concept="37vLTI" id="5JQC2dmPzqw" role="3clFbG">
                              <node concept="37vLTw" id="5JQC2dmPzqx" role="37vLTJ">
                                <ref role="3cqZAo" node="5JQC2dmPzpy" resolve="freeRhsVertexLayer" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2dnaete" role="37vLTx">
                                <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                                <ref role="37wK5l" to="gyfg:~Optional.of(java.lang.Object):com.google.common.base.Optional" resolve="of" />
                                <node concept="37vLTw" id="5JQC2dnaetf" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPzq3" resolve="layer" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPzr2" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPzr3" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmPzpy" resolve="freeRhsVertexLayer" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPzr4" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzr5" role="3clF45">
          <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
          <node concept="3uibUv" id="5JQC2dmPzr6" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPzr7" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPztX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPztY" role="1dT_Ay">
              <property role="1dT_AB" value=" Performs the Breadth-First Search phase of the algorithm. Specifically, treats the bipartite" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPztZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu0" role="1dT_Ay">
              <property role="1dT_AB" value=" graph as a directed graph where every unmatched edge (i.e. every edge not in the current" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu2" role="1dT_Ay">
              <property role="1dT_AB" value=" matching) is directed from the LHS vertex to the RHS vertex and every matched edge is" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu4" role="1dT_Ay">
              <property role="1dT_AB" value=" directed from the RHS vertex to the LHS vertex, and performs a BFS which starts from all of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu5" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu6" role="1dT_Ay">
              <property role="1dT_AB" value=" the free LHS vertices (i.e. the LHS vertices which are not in the current matching) and stops" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu7" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu8" role="1dT_Ay">
              <property role="1dT_AB" value=" either at the end of a layer where a free RHS vertex is found or when the search is exhausted" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu9" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzua" role="1dT_Ay">
              <property role="1dT_AB" value=" if no free RHS vertex is found. Keeps track of which layer of the BFS each LHS vertex was" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzub" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuc" role="1dT_Ay">
              <property role="1dT_AB" value=" found in (for those LHS vertices visited during the BFS), so the free LHS vertices are in" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzud" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzue" role="1dT_Ay">
              <property role="1dT_AB" value=" layer 1, those reachable by following an unmatched edge from any free LHS vertex to any" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuf" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzug" role="1dT_Ay">
              <property role="1dT_AB" value=" non-free RHS vertex and then the matched edge back to a LHS vertex are in layer 2, etc. Note" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuh" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzui" role="1dT_Ay">
              <property role="1dT_AB" value=" that every path in a successful search starts with a free LHS vertex and ends with a free RHS" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuj" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuk" role="1dT_Ay">
              <property role="1dT_AB" value=" vertex, with every intermediate vertex being non-free." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzul" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzum" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzun" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuo" role="1dT_Ay">
              <property role="1dT_AB" value=" @param matching A bimap describing the matching to be used for the BFS, which is not modified" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzup" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuq" role="1dT_Ay">
              <property role="1dT_AB" value="     by this method" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzur" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzus" role="1dT_Ay">
              <property role="1dT_AB" value=" @param layers A map to be filled with the layer of each LHS vertex visited during the BFS," />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzut" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuu" role="1dT_Ay">
              <property role="1dT_AB" value="     which should be empty when passed into this method and will be modified by this method" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuv" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuw" role="1dT_Ay">
              <property role="1dT_AB" value=" @return The number of the layer in which the first free RHS vertex was found, if any, and the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzux" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuy" role="1dT_Ay">
              <property role="1dT_AB" value="     absent value if the BFS was exhausted without finding any free RHS vertex" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzr8" role="jymVt">
        <property role="TrG5h" value="depthFirstSearch" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPzra" role="3clF46">
          <property role="TrG5h" value="matching" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzrb" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~BiMap" resolve="BiMap" />
            <node concept="16syzq" id="5JQC2dmPzrc" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
            </node>
            <node concept="16syzq" id="5JQC2dmPzrd" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzre" role="3clF46">
          <property role="TrG5h" value="layers" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzrf" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
            <node concept="16syzq" id="5JQC2dmPzrg" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPzrh" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzri" role="3clF46">
          <property role="TrG5h" value="freeRhsVertexLayer" />
          <property role="3TUv4t" value="false" />
          <node concept="10Oyi0" id="5JQC2dmPzrj" role="1tU5fm" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzrk" role="3clF46">
          <property role="TrG5h" value="lhs" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzrl" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzrm" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPzro" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPzrn" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="layer" />
              <node concept="10Oyi0" id="5JQC2dmPzrp" role="1tU5fm" />
              <node concept="2OqwBi" id="5JQC2dmP_7V" role="33vP2m">
                <node concept="37vLTw" id="5JQC2dmP_7U" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzre" resolve="layers" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_7W" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                  <node concept="37vLTw" id="5JQC2dmP_7X" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzrk" resolve="lhs" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPzrs" role="3cqZAp">
            <node concept="3eOSWO" id="5JQC2dmPzrt" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPzru" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzrn" resolve="layer" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPzrv" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPzri" resolve="freeRhsVertexLayer" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPzrx" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPzry" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPzrz" role="3cqZAk">
                  <property role="3clFbU" value="false" />
                </node>
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPzr$" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_83" role="1DdaDG">
              <node concept="37vLTw" id="5JQC2dmP_82" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPznM" resolve="graph" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_84" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.get(java.lang.Object):java.util.Collection" resolve="get" />
                <node concept="37vLTw" id="5JQC2dmP_85" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzrk" resolve="lhs" />
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPzsm" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="rhs" />
              <node concept="16syzq" id="5JQC2dmPzso" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPznL" resolve="V" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPzrA" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmPzrB" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPzrC" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_8b" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_8a" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzra" resolve="matching" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_8c" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                      <node concept="37vLTw" id="5JQC2dmP_8d" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzsm" resolve="rhs" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="9aQIb" id="5JQC2dmPzrN" role="9aQIa">
                  <node concept="3clFbS" id="5JQC2dmPzrO" role="9aQI4">
                    <node concept="3cpWs8" id="5JQC2dmPzrQ" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPzrP" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="nextLhs" />
                        <node concept="16syzq" id="5JQC2dmPzrR" role="1tU5fm">
                          <ref role="16sUi3" node="5JQC2dmPznK" resolve="U" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPzrS" role="33vP2m">
                          <node concept="2OqwBi" id="5JQC2dmP_8j" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmP_8i" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzra" resolve="matching" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_8k" role="2OqNvi">
                              <ref role="37wK5l" to="3o3z:~BiMap.inverse():com.google.common.collect.BiMap" resolve="inverse" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPzrU" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                            <node concept="37vLTw" id="5JQC2dmPzrV" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzsm" resolve="rhs" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPzrW" role="3cqZAp">
                      <node concept="1Wc70l" id="5JQC2dmPzrX" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmP_8q" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmP_8p" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPzre" resolve="layers" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_8r" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                            <node concept="37vLTw" id="5JQC2dmP_8s" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzrP" resolve="nextLhs" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbC" id="5JQC2dmPzs0" role="3uHU7w">
                          <node concept="2OqwBi" id="5JQC2dmP_8y" role="3uHU7B">
                            <node concept="37vLTw" id="5JQC2dmP_8x" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzre" resolve="layers" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_8z" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                              <node concept="37vLTw" id="5JQC2dmP_8$" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPzrP" resolve="nextLhs" />
                              </node>
                            </node>
                          </node>
                          <node concept="3cpWs3" id="5JQC2dmPzs3" role="3uHU7w">
                            <node concept="37vLTw" id="5JQC2dmPzs4" role="3uHU7B">
                              <ref role="3cqZAo" node="5JQC2dmPzrn" resolve="layer" />
                            </node>
                            <node concept="3cmrfG" id="5JQC2dmPzs5" role="3uHU7w">
                              <property role="3cmrfH" value="1" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPzs7" role="3clFbx">
                        <node concept="3clFbJ" id="5JQC2dmPzs8" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPzs9" role="3clFbw">
                            <ref role="37wK5l" node="5JQC2dmPzr8" resolve="depthFirstSearch" />
                            <node concept="37vLTw" id="5JQC2dmPzsa" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzra" resolve="matching" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzsb" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzre" resolve="layers" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzsc" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzri" resolve="freeRhsVertexLayer" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzsd" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzrP" resolve="nextLhs" />
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPzsf" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmPzsg" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmP_8E" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmP_8D" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPzra" resolve="matching" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmP_8F" role="2OqNvi">
                                  <ref role="37wK5l" to="3o3z:~BiMap.forcePut(java.lang.Object,java.lang.Object):java.lang.Object" resolve="forcePut" />
                                  <node concept="37vLTw" id="5JQC2dmP_8G" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPzrk" resolve="lhs" />
                                  </node>
                                  <node concept="37vLTw" id="5JQC2dmP_8H" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPzsm" resolve="rhs" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3cpWs6" id="5JQC2dmPzsk" role="3cqZAp">
                              <node concept="3clFbT" id="5JQC2dmPzsl" role="3cqZAk">
                                <property role="3clFbU" value="true" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPzrG" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPzrH" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_8N" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP_8M" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPzra" resolve="matching" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_8O" role="2OqNvi">
                        <ref role="37wK5l" to="3o3z:~BiMap.forcePut(java.lang.Object,java.lang.Object):java.lang.Object" resolve="forcePut" />
                        <node concept="37vLTw" id="5JQC2dmP_8P" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzrk" resolve="lhs" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP_8Q" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzsm" resolve="rhs" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3cpWs6" id="5JQC2dmPzrL" role="3cqZAp">
                    <node concept="3clFbT" id="5JQC2dmPzrM" role="3cqZAk">
                      <property role="3clFbU" value="true" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPzsr" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPzss" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPzst" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPzsu" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPzsv" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzuz" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzu$" role="1dT_Ay">
              <property role="1dT_AB" value=" Performs the Depth-First Search phase of the algorithm. The DFS is guided by the BFS phase," />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzu_" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuA" role="1dT_Ay">
              <property role="1dT_AB" value=" i.e. it only uses paths which were used in the BFS. That means the steps in the DFS proceed" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuC" role="1dT_Ay">
              <property role="1dT_AB" value=" from an LHS vertex via an unmatched edge to an RHS vertex and from an RHS vertex via a" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuD" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuE" role="1dT_Ay">
              <property role="1dT_AB" value=" matched edge to an LHS vertex only if that LHS vertex is one layer deeper in the BFS than the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuF" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuG" role="1dT_Ay">
              <property role="1dT_AB" value=" previous one. It starts from the specified LHS vertex and stops either when it finds one of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuI" role="1dT_Ay">
              <property role="1dT_AB" value=" the free RHS vertices located by the BFS or when the search is exhausted. If a free RHS" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuK" role="1dT_Ay">
              <property role="1dT_AB" value=" vertex is found then all the unmatched edges in the search path and added to the matching and" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuM" role="1dT_Ay">
              <property role="1dT_AB" value=" all the matched edges in the search path are removed from the matching; in other words, the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuO" role="1dT_Ay">
              <property role="1dT_AB" value=" direction (which is determined by the matched/unmatched status) of every edge in the search" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuQ" role="1dT_Ay">
              <property role="1dT_AB" value=" path is flipped. Note several properties of this update to the matching:" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuS" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuU" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;ul&gt;" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuW" role="1dT_Ay">
              <property role="1dT_AB" value="   &lt;li&gt;Because the search path must contain one more unmatched than matched edges, the effect" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzuY" role="1dT_Ay">
              <property role="1dT_AB" value="       of this modification is to increase the size of the matching by one." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzuZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv0" role="1dT_Ay">
              <property role="1dT_AB" value="   &lt;li&gt;This modification results in the free LHS vertex at the start of the path and the free" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv2" role="1dT_Ay">
              <property role="1dT_AB" value="       RHS vertex at the end of the path becoming non-free, while the intermediate non-free" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv4" role="1dT_Ay">
              <property role="1dT_AB" value="       vertices stay non-free." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv5" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv6" role="1dT_Ay">
              <property role="1dT_AB" value="   &lt;li&gt;None of the edges used in this search path may be used in any further DFS. They cannot" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv7" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv8" role="1dT_Ay">
              <property role="1dT_AB" value="       be used in the same direction as they were in this DFS because their directions are" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv9" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzva" role="1dT_Ay">
              <property role="1dT_AB" value="       flipped; and they cannot be used in their new directions because we only use edges" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvb" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvc" role="1dT_Ay">
              <property role="1dT_AB" value="       leading to the next layer of the BFS and, after flipping the directions, these edges" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvd" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzve" role="1dT_Ay">
              <property role="1dT_AB" value="       now lead to the previous layer." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvf" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvg" role="1dT_Ay">
              <property role="1dT_AB" value="   &lt;li&gt;As a consequence of the previous property, repeated invocations of this method will" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvh" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvi" role="1dT_Ay">
              <property role="1dT_AB" value="       find only paths which were used in the BFS and which were not used in any previous DFS" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvj" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvk" role="1dT_Ay">
              <property role="1dT_AB" value="       (i.e. the set of edges used in the paths found by repeated DFSes are disjoint)." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvl" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvm" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;/ul&gt;" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvn" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvo" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvp" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvq" role="1dT_Ay">
              <property role="1dT_AB" value=" @param matching A bimap describing the matching to be used for the BFS, which will be" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvr" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvs" role="1dT_Ay">
              <property role="1dT_AB" value="     modified by this method as described above" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvt" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvu" role="1dT_Ay">
              <property role="1dT_AB" value=" @param layers A map giving the layer of each LHS vertex visited during the BFS, which will" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvv" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvw" role="1dT_Ay">
              <property role="1dT_AB" value="     not be modified by this method" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvx" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvy" role="1dT_Ay">
              <property role="1dT_AB" value=" @param freeRhsVertexLayer The number of the layer in which the first free RHS vertex was" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvz" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzv$" role="1dT_Ay">
              <property role="1dT_AB" value="     found" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzv_" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvA" role="1dT_Ay">
              <property role="1dT_AB" value=" @param lhs The LHS vertex from which to start the DFS" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzvB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzvC" role="1dT_Ay">
              <property role="1dT_AB" value=" @return Whether or not the DFS was successful" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwHp">
    <property role="TrG5h" value="ThrowableSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwHq" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwHr" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPwHs" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPwHt" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwN_" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwND" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwNE" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Throwable} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwNF" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwNG" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwNH" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwNI" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwHu" role="jymVt">
      <property role="TrG5h" value="create" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwHv" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwHw" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwHx" role="3clF46">
        <property role="TrG5h" value="throwable" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwHy" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwHz" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwH$" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwH_" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_8R" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_9X" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwHG" resolve="ThrowableSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_9Y" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwIP" resolve="causeInsertingStrategy" />
                <node concept="37vLTw" id="5JQC2dmP_9Z" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwHv" resolve="failureStrategy" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP_a0" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwHx" resolve="throwable" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmP_a3" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwHx" resolve="throwable" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwHF" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwHG" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwHH" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwHI" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwHJ" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwHK" role="3clF46">
        <property role="TrG5h" value="throwable" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwHL" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwHM" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwHN" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_a4" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmP_a5" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwHI" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_a6" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwHK" resolve="throwable" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwHR" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPwHS" role="jymVt">
      <property role="TrG5h" value="hasMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwHT" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwHU" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwHV" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwHW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwHX" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwHY" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPwHZ" role="3clFbG">
            <node concept="1rXfSq" id="5JQC2dmPwI0" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwI6" resolve="hasMessageThat" />
            </node>
            <node concept="liA8E" id="5JQC2dmPwI1" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPyKq" resolve="isEqualTo" />
              <node concept="37vLTw" id="5JQC2dmPwI2" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwHU" resolve="expected" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwI3" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwI4" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwI5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwNJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNK" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject does not have the given message." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNM" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNO" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Use {@code hasMessageThat().isEqualTo(expected)} instead. You may also consider" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNQ" role="1dT_Ay">
            <property role="1dT_AB" value="     using inexact matching of the message (e.g. {@code hasMessageThat().contains(substring)})" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNS" role="1dT_Ay">
            <property role="1dT_AB" value="     for less brittle tests." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwI6" role="jymVt">
      <property role="TrG5h" value="hasMessageThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwI7" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwI8" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_a7" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_ax" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyK6" resolve="StringSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_ay" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwJX" resolve="badMessageStrategy" />
                <node concept="37vLTw" id="5JQC2dmP_az" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_aB" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2dmP_aC" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_aD" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwIf" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwIg" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyK1" resolve="StringSubject" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwIh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwNT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNU" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a {@code StringSubject} to make assertions about the throwable's message. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwIi" role="jymVt">
      <property role="TrG5h" value="hasCauseThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwIj" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmPwO2" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TbF" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8TbG" role="1PaTwD">
              <property role="3oM_SC" value="provides" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbH" role="1PaTwD">
              <property role="3oM_SC" value="a" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbI" role="1PaTwD">
              <property role="3oM_SC" value="more" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbJ" role="1PaTwD">
              <property role="3oM_SC" value="helpful" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbK" role="1PaTwD">
              <property role="3oM_SC" value="error" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbL" role="1PaTwD">
              <property role="3oM_SC" value="message" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbM" role="1PaTwD">
              <property role="3oM_SC" value="if" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbN" role="1PaTwD">
              <property role="3oM_SC" value="hasCauseThat()" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbO" role="1PaTwD">
              <property role="3oM_SC" value="methods" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbP" role="1PaTwD">
              <property role="3oM_SC" value="are" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbQ" role="1PaTwD">
              <property role="3oM_SC" value="chained" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbR" role="1PaTwD">
              <property role="3oM_SC" value="too" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbS" role="1PaTwD">
              <property role="3oM_SC" value="deep" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPwO4" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TbT" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8TbU" role="1PaTwD">
              <property role="3oM_SC" value="e.g." />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbV" role="1PaTwD">
              <property role="3oM_SC" value="assertThat(new" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbW" role="1PaTwD">
              <property role="3oM_SC" value="Exception()).hCT().hCT()...." />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPwO6" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TbX" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8TbY" role="1PaTwD">
              <property role="3oM_SC" value="TODO(diamondm)" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TbZ" role="1PaTwD">
              <property role="3oM_SC" value="in" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc0" role="1PaTwD">
              <property role="3oM_SC" value="keeping" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc1" role="1PaTwD">
              <property role="3oM_SC" value="with" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc2" role="1PaTwD">
              <property role="3oM_SC" value="other" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc3" role="1PaTwD">
              <property role="3oM_SC" value="subjects'" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc4" role="1PaTwD">
              <property role="3oM_SC" value="behavior" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc5" role="1PaTwD">
              <property role="3oM_SC" value="this" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc6" role="1PaTwD">
              <property role="3oM_SC" value="should" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc7" role="1PaTwD">
              <property role="3oM_SC" value="still" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc8" role="1PaTwD">
              <property role="3oM_SC" value="NPE" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tc9" role="1PaTwD">
              <property role="3oM_SC" value="if" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tca" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcb" role="1PaTwD">
              <property role="3oM_SC" value="subject" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPwO8" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tcc" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tcd" role="1PaTwD">
              <property role="3oM_SC" value="itself*" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tce" role="1PaTwD">
              <property role="3oM_SC" value="is" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcf" role="1PaTwD">
              <property role="3oM_SC" value="null," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcg" role="1PaTwD">
              <property role="3oM_SC" value="since" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tch" role="1PaTwD">
              <property role="3oM_SC" value="there's" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tci" role="1PaTwD">
              <property role="3oM_SC" value="no" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcj" role="1PaTwD">
              <property role="3oM_SC" value="context" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tck" role="1PaTwD">
              <property role="3oM_SC" value="to" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcl" role="1PaTwD">
              <property role="3oM_SC" value="lose." />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcm" role="1PaTwD">
              <property role="3oM_SC" value="See" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tcn" role="1PaTwD">
              <property role="3oM_SC" value="also" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tco" role="1PaTwD">
              <property role="3oM_SC" value="b/37645583" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwIk" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwIl" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwIm" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwIn" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwIp" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwIq" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwIr" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPwIs" role="37wK5m">
                  <property role="Xl_RC" value="Causal chain is not deep enough - add a .isNotNull() check?" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPwIt" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPwIu" role="3cqZAk">
                <node concept="1rXfSq" id="5JQC2dmPwIv" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuQ" resolve="ignoreCheck" />
                </node>
                <node concept="liA8E" id="5JQC2dmPwIw" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzSM" resolve="that" />
                  <node concept="2ShNRf" id="5JQC2dmPwIx" role="37wK5m">
                    <node concept="YeOm9" id="5JQC2dmPwIy" role="2ShVmc">
                      <node concept="1Y3b0j" id="5JQC2dmPwIz" role="YeSDq">
                        <property role="1sVAO0" value="false" />
                        <property role="1EXbeo" value="false" />
                        <ref role="1Y3XeK" to="wyt6:~Throwable" resolve="Throwable" />
                        <ref role="37wK5l" to="wyt6:~Throwable.&lt;init&gt;()" resolve="Throwable" />
                        <node concept="3clFb_" id="5JQC2dmPwI$" role="jymVt">
                          <property role="TrG5h" value="fillInStackTrace" />
                          <property role="DiZV1" value="false" />
                          <property role="od$2w" value="false" />
                          <node concept="2AHcQZ" id="5JQC2dmPwI_" role="2AJF6D">
                            <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPwIA" role="3clF47">
                            <node concept="3cpWs6" id="5JQC2dmPwIB" role="3cqZAp">
                              <node concept="Xjq3P" id="5JQC2dmPwIC" role="3cqZAk" />
                            </node>
                          </node>
                          <node concept="3Tm1VV" id="5JQC2dmPwID" role="1B3o_S" />
                          <node concept="3uibUv" id="5JQC2dmPwIE" role="3clF45">
                            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwIF" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_aW" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_bm" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPwHG" resolve="ThrowableSubject" />
              <node concept="1rXfSq" id="5JQC2dmP_bn" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwLL" resolve="badCauseStrategy" />
                <node concept="37vLTw" id="5JQC2dmP_bo" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_bs" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2dmP_bt" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_bu" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Throwable.getCause():java.lang.Throwable" resolve="getCause" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwIM" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwIN" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwIO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwNV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNW" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a new {@code ThrowableSubject} that supports assertions on this throwable's direct" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwNY" role="1dT_Ay">
            <property role="1dT_AB" value="cause. This method can be invoked repeatedly (e.g. {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwNZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwO0" role="1dT_Ay">
            <property role="1dT_AB" value="assertThat(e).hasCauseThat().hasCauseThat()....} to assert on a particular indirect cause." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwIP" role="jymVt">
      <property role="TrG5h" value="causeInsertingStrategy" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwIQ" role="3clF46">
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPwIR" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwIS" role="3clF46">
        <property role="TrG5h" value="defaultCause" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPwIT" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwIU" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwIV" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPwIW" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPwIX" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPwIY" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPwSH" resolve="FailureStrategy" />
                <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                <node concept="3clFb_" id="5JQC2dmPwIZ" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwJ0" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJ1" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJ2" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwJ3" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwJ4" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_bQ" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_bP" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwIQ" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_bR" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                          <node concept="37vLTw" id="5JQC2dmP_bS" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJ1" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_bT" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwIS" resolve="defaultCause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwJ8" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwJ9" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwJa" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwJb" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJc" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJd" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJe" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJf" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwJg" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwJh" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_bY" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_bX" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwIQ" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_bZ" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                          <node concept="37vLTw" id="5JQC2dmP_c0" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJc" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_c1" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJe" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmPwOa" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tcp" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tcq" role="1PaTwD">
                          <property role="3oM_SC" value="TODO(cpovirk):" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcr" role="1PaTwD">
                          <property role="3oM_SC" value="add" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcs" role="1PaTwD">
                          <property role="3oM_SC" value="defaultCause" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tct" role="1PaTwD">
                          <property role="3oM_SC" value="as" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcu" role="1PaTwD">
                          <property role="3oM_SC" value="a" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcv" role="1PaTwD">
                          <property role="3oM_SC" value="suppressed" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcw" role="1PaTwD">
                          <property role="3oM_SC" value="exception?" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcx" role="1PaTwD">
                          <property role="3oM_SC" value="If" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcy" role="1PaTwD">
                          <property role="3oM_SC" value="fail()" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tcz" role="1PaTwD">
                          <property role="3oM_SC" value="throws..." />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwJl" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwJm" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwJn" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwJo" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJp" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJq" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJr" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJs" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJt" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJu" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwJv" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwJw" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_c5" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_c4" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwIQ" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_c6" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                          <node concept="37vLTw" id="5JQC2dmP_c7" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJp" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_c8" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJr" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_c9" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJt" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_ca" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwIS" resolve="defaultCause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwJA" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwJB" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwJC" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwJD" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJE" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJF" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJG" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJH" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJI" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJJ" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwJK" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwJL" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwJM" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwJN" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_cf" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_ce" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwIQ" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_cg" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                          <node concept="37vLTw" id="5JQC2dmP_ch" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJE" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_ci" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJG" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_cj" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJI" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_ck" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwJK" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmPwOc" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tc$" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tc_" role="1PaTwD">
                          <property role="3oM_SC" value="TODO(cpovirk):" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcA" role="1PaTwD">
                          <property role="3oM_SC" value="add" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcB" role="1PaTwD">
                          <property role="3oM_SC" value="defaultCause" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcC" role="1PaTwD">
                          <property role="3oM_SC" value="as" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcD" role="1PaTwD">
                          <property role="3oM_SC" value="a" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcE" role="1PaTwD">
                          <property role="3oM_SC" value="suppressed" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcF" role="1PaTwD">
                          <property role="3oM_SC" value="exception?" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcG" role="1PaTwD">
                          <property role="3oM_SC" value="If" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcH" role="1PaTwD">
                          <property role="3oM_SC" value="failComparing()" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TcI" role="1PaTwD">
                          <property role="3oM_SC" value="throws..." />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwJT" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwJU" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwJV" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwJW" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwJX" role="jymVt">
      <property role="TrG5h" value="badMessageStrategy" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwJY" role="3clF46">
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPwJZ" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwK0" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwK1" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPwK2" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPwK3" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPwK4" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPwSH" resolve="FailureStrategy" />
                <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                <node concept="3clFb_" id="5JQC2dmPwK5" role="jymVt">
                  <property role="TrG5h" value="prependMessage" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="37vLTG" id="5JQC2dmPwK6" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwK7" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwK8" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPwKa" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPwK9" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="name" />
                        <node concept="3uibUv" id="5JQC2dmPwKb" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPwKc" role="33vP2m">
                          <node concept="2OqwBi" id="5JQC2dmPwKd" role="2Oq$k0">
                            <node concept="1rXfSq" id="5JQC2dmPwKe" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPwKf" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPwKg" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPwKh" role="3cqZAp">
                      <node concept="3y3z36" id="5JQC2dmPwKi" role="3clFbw">
                        <node concept="1rXfSq" id="5JQC2dmPwKj" role="3uHU7B">
                          <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                        </node>
                        <node concept="10Nm6u" id="5JQC2dmPwKk" role="3uHU7w" />
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPwKm" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPwKn" role="3cqZAp">
                          <node concept="37vLTI" id="5JQC2dmPwKo" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPwKp" role="37vLTJ">
                              <ref role="3cqZAo" node="5JQC2dmPwK9" resolve="name" />
                            </node>
                            <node concept="3cpWs3" id="5JQC2dmPwKq" role="37vLTx">
                              <node concept="3cpWs3" id="5JQC2dmPwKr" role="3uHU7B">
                                <node concept="3cpWs3" id="5JQC2dmPwKs" role="3uHU7B">
                                  <node concept="1rXfSq" id="5JQC2dmPwKt" role="3uHU7B">
                                    <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                                  </node>
                                  <node concept="Xl_RD" id="5JQC2dmPwKu" role="3uHU7w">
                                    <property role="Xl_RC" value="(" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2dmPwKv" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmPwK9" resolve="name" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmPwKw" role="3uHU7w">
                                <property role="Xl_RC" value=")" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs6" id="5JQC2dmPwKx" role="3cqZAp">
                      <node concept="3cpWs3" id="5JQC2dmPwKy" role="3cqZAk">
                        <node concept="3cpWs3" id="5JQC2dmPwKz" role="3uHU7B">
                          <node concept="3cpWs3" id="5JQC2dmPwK$" role="3uHU7B">
                            <node concept="Xl_RD" id="5JQC2dmPwK_" role="3uHU7B">
                              <property role="Xl_RC" value="Unexpected message for " />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPwKA" role="3uHU7w">
                              <ref role="3cqZAo" node="5JQC2dmPwK9" resolve="name" />
                            </node>
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPwKB" role="3uHU7w">
                            <property role="Xl_RC" value=":" />
                          </node>
                        </node>
                        <node concept="1eOMI4" id="5JQC2dmPwKI" role="3uHU7w">
                          <node concept="3K4zz7" id="5JQC2dmPwKH" role="1eOMHV">
                            <node concept="2OqwBi" id="5JQC2dmP_cr" role="3K4Cdx">
                              <node concept="37vLTw" id="5JQC2dmP_cq" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPwK6" resolve="message" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmP_cs" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~String.isEmpty():boolean" resolve="isEmpty" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPwKD" role="3K4E3e">
                              <property role="Xl_RC" value="" />
                            </node>
                            <node concept="3cpWs3" id="5JQC2dmPwKE" role="3K4GZi">
                              <node concept="Xl_RD" id="5JQC2dmPwKF" role="3uHU7B">
                                <property role="Xl_RC" value=" " />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPwKG" role="3uHU7w">
                                <ref role="3cqZAo" node="5JQC2dmPwK6" resolve="message" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm6S6" id="5JQC2dmPwKJ" role="1B3o_S" />
                  <node concept="3uibUv" id="5JQC2dmPwKK" role="3clF45">
                    <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="3clFb_" id="5JQC2dmPwKL" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwKM" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwKN" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwKO" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwKP" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwKQ" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_cw" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_cv" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwJY" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_cx" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
                          <node concept="1rXfSq" id="5JQC2dmP_cy" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwK5" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_cz" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwKN" resolve="message" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwKU" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwKV" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwKW" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwKX" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwKY" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwKZ" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwL0" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwL1" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwL2" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwL3" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_cF" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_cE" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwJY" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_cG" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                          <node concept="1rXfSq" id="5JQC2dmP_cH" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwK5" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_cI" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwKY" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_cL" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwL0" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwL8" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwL9" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwLa" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwLb" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLc" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLd" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLe" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLf" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLg" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLh" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwLi" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwLj" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_cP" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_cO" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwJY" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_cQ" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                          <node concept="1rXfSq" id="5JQC2dmP_cR" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwK5" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_cS" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwLc" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_cV" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwLe" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_cW" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwLg" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwLp" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwLq" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwLr" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwLs" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLt" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLu" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLv" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLw" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLx" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLy" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwLz" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwL$" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwL_" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwLA" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_d0" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_cZ" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwJY" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_d1" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                          <node concept="1rXfSq" id="5JQC2dmP_d2" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwK5" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_d3" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwLt" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_d6" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwLv" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_d7" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwLx" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_d8" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwLz" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwLH" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwLI" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwLJ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwLK" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwLL" role="jymVt">
      <property role="TrG5h" value="badCauseStrategy" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwLM" role="3clF46">
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPwLN" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwLO" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwLP" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPwLQ" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPwLR" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPwLS" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPwSH" resolve="FailureStrategy" />
                <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                <node concept="3clFb_" id="5JQC2dmPwLT" role="jymVt">
                  <property role="TrG5h" value="prependMessage" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="37vLTG" id="5JQC2dmPwLU" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwLV" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwLW" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPwLY" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPwLX" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="name" />
                        <node concept="3uibUv" id="5JQC2dmPwLZ" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPwM0" role="33vP2m">
                          <node concept="2OqwBi" id="5JQC2dmPwM1" role="2Oq$k0">
                            <node concept="1rXfSq" id="5JQC2dmPwM2" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPwM3" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPwM4" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPwM5" role="3cqZAp">
                      <node concept="3y3z36" id="5JQC2dmPwM6" role="3clFbw">
                        <node concept="1rXfSq" id="5JQC2dmPwM7" role="3uHU7B">
                          <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                        </node>
                        <node concept="10Nm6u" id="5JQC2dmPwM8" role="3uHU7w" />
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPwMa" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPwMb" role="3cqZAp">
                          <node concept="37vLTI" id="5JQC2dmPwMc" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPwMd" role="37vLTJ">
                              <ref role="3cqZAo" node="5JQC2dmPwLX" resolve="name" />
                            </node>
                            <node concept="3cpWs3" id="5JQC2dmPwMe" role="37vLTx">
                              <node concept="3cpWs3" id="5JQC2dmPwMf" role="3uHU7B">
                                <node concept="3cpWs3" id="5JQC2dmPwMg" role="3uHU7B">
                                  <node concept="1rXfSq" id="5JQC2dmPwMh" role="3uHU7B">
                                    <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                                  </node>
                                  <node concept="Xl_RD" id="5JQC2dmPwMi" role="3uHU7w">
                                    <property role="Xl_RC" value="(" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2dmPwMj" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmPwLX" resolve="name" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmPwMk" role="3uHU7w">
                                <property role="Xl_RC" value=")" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs6" id="5JQC2dmPwMl" role="3cqZAp">
                      <node concept="3cpWs3" id="5JQC2dmPwMm" role="3cqZAk">
                        <node concept="3cpWs3" id="5JQC2dmPwMn" role="3uHU7B">
                          <node concept="3cpWs3" id="5JQC2dmPwMo" role="3uHU7B">
                            <node concept="Xl_RD" id="5JQC2dmPwMp" role="3uHU7B">
                              <property role="Xl_RC" value="Unexpected cause for " />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPwMq" role="3uHU7w">
                              <ref role="3cqZAo" node="5JQC2dmPwLX" resolve="name" />
                            </node>
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPwMr" role="3uHU7w">
                            <property role="Xl_RC" value=":" />
                          </node>
                        </node>
                        <node concept="1eOMI4" id="5JQC2dmPwMy" role="3uHU7w">
                          <node concept="3K4zz7" id="5JQC2dmPwMx" role="1eOMHV">
                            <node concept="2OqwBi" id="5JQC2dmP_df" role="3K4Cdx">
                              <node concept="37vLTw" id="5JQC2dmP_de" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPwLU" resolve="message" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmP_dg" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~String.isEmpty():boolean" resolve="isEmpty" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPwMt" role="3K4E3e">
                              <property role="Xl_RC" value="" />
                            </node>
                            <node concept="3cpWs3" id="5JQC2dmPwMu" role="3K4GZi">
                              <node concept="Xl_RD" id="5JQC2dmPwMv" role="3uHU7B">
                                <property role="Xl_RC" value=" " />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPwMw" role="3uHU7w">
                                <ref role="3cqZAo" node="5JQC2dmPwLU" resolve="message" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm6S6" id="5JQC2dmPwMz" role="1B3o_S" />
                  <node concept="3uibUv" id="5JQC2dmPwM$" role="3clF45">
                    <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="3clFb_" id="5JQC2dmPwM_" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwMA" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwMB" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwMC" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwMD" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwME" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_dk" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_dj" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwLM" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_dl" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
                          <node concept="1rXfSq" id="5JQC2dmP_dm" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwLT" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_dn" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwMB" resolve="message" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwMI" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwMJ" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwMK" role="jymVt">
                  <property role="TrG5h" value="fail" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwML" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwMM" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwMN" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwMO" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwMP" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwMQ" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwMR" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_dv" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_du" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwLM" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_dw" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                          <node concept="1rXfSq" id="5JQC2dmP_dx" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwLT" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_dy" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwMM" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_d_" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwMO" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwMW" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwMX" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwMY" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwMZ" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwN0" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwN1" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwN2" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwN3" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwN4" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwN5" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwN6" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwN7" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_dD" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_dC" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwLM" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_dE" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                          <node concept="1rXfSq" id="5JQC2dmP_dF" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwLT" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_dG" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwN0" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_dJ" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwN2" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_dK" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwN4" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwNd" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwNe" role="3clF45" />
                </node>
                <node concept="3clFb_" id="5JQC2dmPwNf" role="jymVt">
                  <property role="TrG5h" value="failComparing" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPwNg" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwNh" role="3clF46">
                    <property role="TrG5h" value="message" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwNi" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwNj" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwNk" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwNl" role="3clF46">
                    <property role="TrG5h" value="actual" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwNm" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                    </node>
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPwNn" role="3clF46">
                    <property role="TrG5h" value="cause" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPwNo" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwNp" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPwNq" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_dO" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_dN" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwLM" resolve="delegate" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_dP" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                          <node concept="1rXfSq" id="5JQC2dmP_dQ" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwLT" resolve="prependMessage" />
                            <node concept="37vLTw" id="5JQC2dmP_dR" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwNh" resolve="message" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_dU" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwNj" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_dV" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwNl" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_dW" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwNn" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPwNx" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPwNy" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwNz" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwN$" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPxFx">
    <property role="TrG5h" value="Platform" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3UR2Jj" id="5JQC2dmPxKx" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxKF" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxKG" role="1dT_Ay">
          <property role="1dT_AB" value=" Extracted routines that need to be swapped in for GWT, to allow for minimal deltas between the" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxKH" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxKI" role="1dT_Ay">
          <property role="1dT_AB" value=" GWT and non-GWT version." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxKJ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxKK" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxKL" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxKM" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@google.com)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPxFB" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPxFC" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPxFD" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPxFE" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxFF" role="jymVt">
      <property role="TrG5h" value="isInstanceOfType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxFG" role="3clF46">
        <property role="TrG5h" value="instance" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxFH" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxFI" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxFJ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPxFK" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxFL" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxFM" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPxFN" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPxFS" resolve="isInstanceOfTypeJava" />
            <node concept="37vLTw" id="5JQC2dmPxFO" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxFG" resolve="instance" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxFP" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxFI" resolve="clazz" />
            </node>
          </node>
        </node>
      </node>
      <node concept="10P_77" id="5JQC2dmPxFQ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxFR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxKN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxKO" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true if the instance is assignable to the type Clazz. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxFS" role="jymVt">
      <property role="TrG5h" value="isInstanceOfTypeJava" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxFT" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPxFU" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPxFV" role="2B70Vg">
            <property role="Xl_RC" value="Reflection" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxFW" role="3clF46">
        <property role="TrG5h" value="instance" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxFX" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxFY" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxFZ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPxG0" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxG1" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxG2" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_e0" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmP_dZ" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxFY" resolve="clazz" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_e1" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Class.isInstance(java.lang.Object):boolean" resolve="isInstance" />
              <node concept="37vLTw" id="5JQC2dmP_e2" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxFW" resolve="instance" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="10P_77" id="5JQC2dmPxG5" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxG6" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxKP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxKQ" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true if the instance is assignable to the type Clazz (suitable for a JVM environment)." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxG7" role="jymVt">
      <property role="TrG5h" value="isInstanceOfTypeGWT" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxG8" role="3clF46">
        <property role="TrG5h" value="instance" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxG9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxGa" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxGb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPxGc" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxGd" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxGf" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxGe" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="className" />
            <node concept="3uibUv" id="5JQC2dmPxGg" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_e5" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmP_e4" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxGa" resolve="clazz" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_e6" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxGj" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxGi" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="types" />
            <node concept="3uibUv" id="5JQC2dmPxGk" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
              <node concept="3uibUv" id="5JQC2dmPxGl" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_e7" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmP_eb" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                <node concept="3uibUv" id="5JQC2dmTw2E" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxGo" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_ef" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP_ee" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxGi" resolve="types" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_eg" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
              <node concept="2OqwBi" id="5JQC2dmP_eh" role="37wK5m">
                <node concept="2OqwBi" id="5JQC2dmPCJF" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPCJE" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxG8" resolve="instance" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCJG" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmP_ej" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Class.getCanonicalName():java.lang.String" resolve="getCanonicalName" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxGt" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPxGu" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPxH0" resolve="addTypeNames" />
            <node concept="2OqwBi" id="5JQC2dmP_eu" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmP_et" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxG8" resolve="instance" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_ev" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPxGw" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxGi" resolve="types" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxGx" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_ey" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmP_ex" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxGi" resolve="types" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_ez" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
              <node concept="37vLTw" id="5JQC2dmP_e$" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxGe" resolve="className" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="10P_77" id="5JQC2dmPxG$" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxG_" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxKR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxKS" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true if the instance is assignable to the type Clazz (suitable for a GWT environment)." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxGA" role="jymVt">
      <property role="TrG5h" value="addInterfaceNames" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxGB" role="3clF46">
        <property role="TrG5h" value="interfaces" />
        <property role="3TUv4t" value="false" />
        <node concept="10Q1$e" id="5JQC2dmPxGE" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPxGC" role="10Q1$1">
            <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
            <node concept="3qTvmN" id="5JQC2dmPxGD" role="11_B2D" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxGF" role="3clF46">
        <property role="TrG5h" value="types" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxGG" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
          <node concept="3uibUv" id="5JQC2dmPxGH" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxGI" role="3clF47">
        <node concept="1DcWWT" id="5JQC2dmPxGJ" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPxGX" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPxGB" resolve="interfaces" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPxGT" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="interfaze" />
            <node concept="3uibUv" id="5JQC2dmPxGV" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
              <node concept="3qTvmN" id="5JQC2dmPxGW" role="11_B2D" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxGL" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPxGM" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_eB" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_eA" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxGF" resolve="types" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_eC" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="2OqwBi" id="5JQC2dmPCHM" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCHL" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxGT" resolve="interfaze" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCHN" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxGP" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxGQ" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPxGA" resolve="addInterfaceNames" />
                <node concept="2OqwBi" id="5JQC2dmP_eG" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_eF" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxGT" resolve="interfaze" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_eH" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getInterfaces():java.lang.Class[]" resolve="getInterfaces" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPxGS" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxGF" resolve="types" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxGY" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxGZ" role="3clF45" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxH0" role="jymVt">
      <property role="TrG5h" value="addTypeNames" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxH1" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxH2" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPxH3" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxH4" role="3clF46">
        <property role="TrG5h" value="types" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxH5" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
          <node concept="3uibUv" id="5JQC2dmPxH6" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxH7" role="3clF47">
        <node concept="1Dw8fO" id="5JQC2dmPxH8" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxH9" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="current" />
            <node concept="3uibUv" id="5JQC2dmPxHb" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
              <node concept="3qTvmN" id="5JQC2dmPxHc" role="11_B2D" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxHd" role="33vP2m">
              <ref role="3cqZAo" node="5JQC2dmPxH1" resolve="clazz" />
            </node>
          </node>
          <node concept="3y3z36" id="5JQC2dmPxHe" role="1Dwp0S">
            <node concept="37vLTw" id="5JQC2dmPxHf" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxH9" resolve="current" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPxHg" role="3uHU7w" />
          </node>
          <node concept="37vLTI" id="5JQC2dmPxHi" role="1Dwrff">
            <node concept="37vLTw" id="5JQC2dmPxHj" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxH9" resolve="current" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_eK" role="37vLTx">
              <node concept="37vLTw" id="5JQC2dmP_eJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxH9" resolve="current" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_eL" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Class.getSuperclass():java.lang.Class" resolve="getSuperclass" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxHm" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPxHn" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_eO" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_eN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxH4" resolve="types" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_eP" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="2OqwBi" id="5JQC2dmPCyi" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCyh" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxH9" resolve="current" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCyj" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxHq" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxHr" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPxGA" resolve="addInterfaceNames" />
                <node concept="2OqwBi" id="5JQC2dmP_eT" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_eS" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxH9" resolve="current" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_eU" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getInterfaces():java.lang.Class[]" resolve="getInterfaces" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPxHt" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxH4" resolve="types" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxHu" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxHv" role="3clF45" />
    </node>
    <node concept="Wx3nA" id="5JQC2dmPxFy" role="jymVt">
      <property role="TrG5h" value="TYPE_PATTERN" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPxFz" role="1tU5fm">
        <ref role="3uigEE" to="ni5j:~Pattern" resolve="Pattern" />
      </node>
      <node concept="2YIFZM" id="5JQC2dmP_eW" role="33vP2m">
        <ref role="1Pybhc" to="ni5j:~Pattern" resolve="Pattern" />
        <ref role="37wK5l" to="ni5j:~Pattern.compile(java.lang.String):java.util.regex.Pattern" resolve="compile" />
        <node concept="Xl_RD" id="5JQC2dmP_eX" role="37wK5m">
          <property role="Xl_RC" value="(?:[\\w$]+\\.)*([\\w\\.*$]+)" />
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxFA" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxHw" role="jymVt">
      <property role="TrG5h" value="compressType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxHx" role="3clF46">
        <property role="TrG5h" value="type" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxHy" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxHz" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxH$" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPxH_" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPxHA" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxHx" resolve="type" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxHB" role="37vLTx">
              <ref role="37wK5l" node="5JQC2dmPxIH" resolve="typeOnly" />
              <node concept="37vLTw" id="5JQC2dmPxHC" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxHx" resolve="type" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxHE" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxHD" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="sb" />
            <node concept="3uibUv" id="5JQC2dmPxHF" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_eY" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmP_f2" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;()" resolve="StringBuilder" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxHI" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxHH" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="m" />
            <node concept="3uibUv" id="5JQC2dmPxHJ" role="1tU5fm">
              <ref role="3uigEE" to="ni5j:~Matcher" resolve="Matcher" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_f5" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmP_f4" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxFy" resolve="TYPE_PATTERN" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_f6" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                <node concept="37vLTw" id="5JQC2dmP_f7" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxHx" resolve="type" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxHN" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxHM" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="pos" />
            <node concept="10Oyi0" id="5JQC2dmPxHO" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPxHP" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPxIC" role="3cqZAp">
          <node concept="3clFbT" id="5JQC2dmPxHQ" role="2$JKZa">
            <property role="3clFbU" value="true" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPxHS" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPxHU" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxHT" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="found" />
                <node concept="10P_77" id="5JQC2dmPxHV" role="1tU5fm" />
                <node concept="2OqwBi" id="5JQC2dmP_fa" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_f9" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxHH" resolve="m" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_fb" role="2OqNvi">
                    <ref role="37wK5l" to="ni5j:~Matcher.find(int):boolean" resolve="find" />
                    <node concept="37vLTw" id="5JQC2dmP_fc" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxHM" resolve="pos" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPxKW" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TcJ" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TcK" role="1PaTwD">
                  <property role="3oM_SC" value="Copy" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcL" role="1PaTwD">
                  <property role="3oM_SC" value="non-matching" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcM" role="1PaTwD">
                  <property role="3oM_SC" value="characters" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcN" role="1PaTwD">
                  <property role="3oM_SC" value="like" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcO" role="1PaTwD">
                  <property role="3oM_SC" value="&quot;&lt;&quot;." />
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPxHZ" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxHY" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="typeStart" />
                <node concept="10Oyi0" id="5JQC2dmPxI0" role="1tU5fm" />
                <node concept="3K4zz7" id="5JQC2dmPxI4" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxI1" role="3K4Cdx">
                    <ref role="3cqZAo" node="5JQC2dmPxHT" resolve="found" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_ff" role="3K4E3e">
                    <node concept="37vLTw" id="5JQC2dmP_fe" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxHH" resolve="m" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_fg" role="2OqNvi">
                      <ref role="37wK5l" to="ni5j:~Matcher.start():int" resolve="start" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_fj" role="3K4GZi">
                    <node concept="37vLTw" id="5JQC2dmP_fi" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxHx" resolve="type" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_fk" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxI5" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_fn" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_fm" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxHD" resolve="sb" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_fo" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.CharSequence,int,int):java.lang.StringBuilder" resolve="append" />
                  <node concept="37vLTw" id="5JQC2dmP_fp" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxHx" resolve="type" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP_fq" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxHM" resolve="pos" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP_fr" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxHY" resolve="typeStart" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxIa" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPxIb" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPxIc" role="3fr31v">
                  <ref role="3cqZAo" node="5JQC2dmPxHT" resolve="found" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxIe" role="3clFbx">
                <node concept="3zACq4" id="5JQC2dmPxIf" role="3cqZAp" />
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPxKY" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TcP" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TcQ" role="1PaTwD">
                  <property role="3oM_SC" value="Copy" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcR" role="1PaTwD">
                  <property role="3oM_SC" value="a" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcS" role="1PaTwD">
                  <property role="3oM_SC" value="single" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcT" role="1PaTwD">
                  <property role="3oM_SC" value="class" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcU" role="1PaTwD">
                  <property role="3oM_SC" value="name," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcV" role="1PaTwD">
                  <property role="3oM_SC" value="shortening" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcW" role="1PaTwD">
                  <property role="3oM_SC" value="it" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcX" role="1PaTwD">
                  <property role="3oM_SC" value="if" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TcY" role="1PaTwD">
                  <property role="3oM_SC" value="possible." />
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPxIh" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxIg" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="name" />
                <node concept="3uibUv" id="5JQC2dmPxIi" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_fu" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_ft" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxHH" resolve="m" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_fv" role="2OqNvi">
                    <ref role="37wK5l" to="ni5j:~Matcher.group(int):java.lang.String" resolve="group" />
                    <node concept="3cmrfG" id="5JQC2dmP_fw" role="37wK5m">
                      <property role="3cmrfH" value="0" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxIl" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPxIm" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPxIn" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPxIg" resolve="name" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPxIo" role="37vLTx">
                  <ref role="37wK5l" node="5JQC2dmPxJg" resolve="stripIfInPackage" />
                  <node concept="37vLTw" id="5JQC2dmPxIp" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxIg" resolve="name" />
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPxIq" role="37wK5m">
                    <property role="Xl_RC" value="java.lang." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxIr" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPxIs" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPxIt" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPxIg" resolve="name" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPxIu" role="37vLTx">
                  <ref role="37wK5l" node="5JQC2dmPxJg" resolve="stripIfInPackage" />
                  <node concept="37vLTw" id="5JQC2dmPxIv" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxIg" resolve="name" />
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPxIw" role="37wK5m">
                    <property role="Xl_RC" value="java.util." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxIx" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_fz" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_fy" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxHD" resolve="sb" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_f$" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="37vLTw" id="5JQC2dmP_f_" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxIg" resolve="name" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxI$" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPxI_" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPxIA" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPxHM" resolve="pos" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_fC" role="37vLTx">
                  <node concept="37vLTw" id="5JQC2dmP_fB" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxHH" resolve="m" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_fD" role="2OqNvi">
                    <ref role="37wK5l" to="ni5j:~Matcher.end():int" resolve="end" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxID" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_fG" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmP_fF" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxHD" resolve="sb" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_fH" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPxIF" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxIG" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxKT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxKU" role="1dT_Ay">
            <property role="1dT_AB" value="Inspired by JavaWriter. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxIH" role="jymVt">
      <property role="TrG5h" value="typeOnly" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxII" role="3clF46">
        <property role="TrG5h" value="type" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxIJ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxIK" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxIL" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPxIM" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPxIN" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxII" resolve="type" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxIO" role="37vLTx">
              <ref role="37wK5l" node="5JQC2dmPxJ1" resolve="stripIfPrefixed" />
              <node concept="37vLTw" id="5JQC2dmPxIP" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxII" resolve="type" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmPxIQ" role="37wK5m">
                <property role="Xl_RC" value="class " />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxIR" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPxIS" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPxIT" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxII" resolve="type" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxIU" role="37vLTx">
              <ref role="37wK5l" node="5JQC2dmPxJ1" resolve="stripIfPrefixed" />
              <node concept="37vLTw" id="5JQC2dmPxIV" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxII" resolve="type" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmPxIW" role="37wK5m">
                <property role="Xl_RC" value="interface " />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxIX" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPxIY" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPxII" resolve="type" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxIZ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxJ0" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxJ1" role="jymVt">
      <property role="TrG5h" value="stripIfPrefixed" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxJ2" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJ3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxJ4" role="3clF46">
        <property role="TrG5h" value="prefix" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJ5" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxJ6" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxJ7" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPxJd" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmP_fK" role="3K4Cdx">
              <node concept="37vLTw" id="5JQC2dmP_fJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxJ2" resolve="string" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_fL" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.startsWith(java.lang.String):boolean" resolve="startsWith" />
                <node concept="37vLTw" id="5JQC2dmP_fM" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxJ4" resolve="prefix" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_fP" role="3K4E3e">
              <node concept="37vLTw" id="5JQC2dmP_fO" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxJ2" resolve="string" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_fQ" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.substring(int):java.lang.String" resolve="substring" />
                <node concept="2OqwBi" id="5JQC2dmPCES" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPCER" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxJ4" resolve="prefix" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCET" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPxJc" role="3K4GZi">
              <ref role="3cqZAo" node="5JQC2dmPxJ2" resolve="string" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxJe" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxJf" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxJg" role="jymVt">
      <property role="TrG5h" value="stripIfInPackage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxJh" role="3clF46">
        <property role="TrG5h" value="type" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJi" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxJj" role="3clF46">
        <property role="TrG5h" value="packagePrefix" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJk" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxJl" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxJm" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPxJn" role="3clFbw">
            <node concept="1Wc70l" id="5JQC2dmPxJo" role="3uHU7B">
              <node concept="2OqwBi" id="5JQC2dmP_fU" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmP_fT" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxJh" resolve="type" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_fV" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.startsWith(java.lang.String):boolean" resolve="startsWith" />
                  <node concept="37vLTw" id="5JQC2dmP_fW" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxJj" resolve="packagePrefix" />
                  </node>
                </node>
              </node>
              <node concept="1eOMI4" id="5JQC2dmPxJx" role="3uHU7w">
                <node concept="3clFbC" id="5JQC2dmPxJr" role="1eOMHV">
                  <node concept="2OqwBi" id="5JQC2dmP_fZ" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP_fY" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxJh" resolve="type" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_g0" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.indexOf(int,int):int" resolve="indexOf" />
                      <node concept="1Xhbcc" id="5JQC2dmP_g1" role="37wK5m">
                        <property role="1XhdNS" value="." />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPC$7" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPC$6" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxJj" resolve="packagePrefix" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPC$8" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="1ZRNhn" id="5JQC2dmPxJv" role="3uHU7w">
                    <node concept="3cmrfG" id="5JQC2dmPxJw" role="2$L3a6">
                      <property role="3cmrfH" value="1" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmP_g4" role="3uHU7w">
              <ref role="1Pybhc" to="wyt6:~Character" resolve="Character" />
              <ref role="37wK5l" to="wyt6:~Character.isUpperCase(char):boolean" resolve="isUpperCase" />
              <node concept="2OqwBi" id="5JQC2dmPCFV" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPCFU" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxJh" resolve="type" />
                </node>
                <node concept="liA8E" id="5JQC2dmPCFW" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.charAt(int):char" resolve="charAt" />
                  <node concept="2OqwBi" id="5JQC2dmPCK7" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCK6" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxJj" resolve="packagePrefix" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCK8" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxJA" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPxJB" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_g9" role="3cqZAk">
                <node concept="37vLTw" id="5JQC2dmP_g8" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxJh" resolve="type" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_ga" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.substring(int):java.lang.String" resolve="substring" />
                  <node concept="2OqwBi" id="5JQC2dmPCJJ" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCJI" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxJj" resolve="packagePrefix" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCJK" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxJE" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPxJF" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPxJh" resolve="type" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxJG" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxJH" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxJI" role="jymVt">
      <property role="TrG5h" value="comparisonFailure" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxJJ" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJK" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxJL" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJM" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxJN" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJO" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxJP" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxJQ" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmTzBv" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmTzBE" role="2ShVmc">
              <ref role="37wK5l" to="rjhg:~ComparisonFailure.&lt;init&gt;(java.lang.String,java.lang.String,java.lang.String)" resolve="ComparisonFailure" />
              <node concept="37vLTw" id="5JQC2dmTzBF" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxJJ" resolve="message" />
              </node>
              <node concept="37vLTw" id="5JQC2dmTzBG" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxJL" resolve="expected" />
              </node>
              <node concept="37vLTw" id="5JQC2dmTzBH" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxJN" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPxJV" role="3clF45">
        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxJW" role="jymVt">
      <property role="TrG5h" value="containsMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxJX" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxJY" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxJZ" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxK0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxK1" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxK2" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxK3" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPxK4" role="2Oq$k0">
              <node concept="2YIFZM" id="5JQC2dmP_gd" role="2Oq$k0">
                <ref role="1Pybhc" to="ni5j:~Pattern" resolve="Pattern" />
                <ref role="37wK5l" to="ni5j:~Pattern.compile(java.lang.String):java.util.regex.Pattern" resolve="compile" />
                <node concept="37vLTw" id="5JQC2dmP_ge" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxJZ" resolve="regex" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxK7" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                <node concept="37vLTw" id="5JQC2dmPxK8" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxJX" resolve="subject" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPxK9" role="2OqNvi">
              <ref role="37wK5l" to="ni5j:~Matcher.find():boolean" resolve="find" />
            </node>
          </node>
        </node>
      </node>
      <node concept="10P_77" id="5JQC2dmPxKa" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxKb" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxKZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxL0" role="1dT_Ay">
            <property role="1dT_AB" value="Determines if the given subject contains a match for the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxKc" role="jymVt">
      <property role="TrG5h" value="getArrayLength" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxKd" role="3clF46">
        <property role="TrG5h" value="array" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxKe" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxKf" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxKg" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmP_gg" role="3cqZAk">
            <ref role="1Pybhc" to="t6h5:~Array" resolve="Array" />
            <ref role="37wK5l" to="t6h5:~Array.getLength(java.lang.Object):int" resolve="getLength" />
            <node concept="37vLTw" id="5JQC2dmP_gh" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxKd" resolve="array" />
            </node>
          </node>
        </node>
      </node>
      <node concept="10Oyi0" id="5JQC2dmPxKj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxKk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxL1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxL2" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the length of an array. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxKl" role="jymVt">
      <property role="TrG5h" value="getFromArray" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxKm" role="3clF46">
        <property role="TrG5h" value="array" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxKn" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxKo" role="3clF46">
        <property role="TrG5h" value="i" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPxKp" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxKq" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxKr" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmP_gj" role="3cqZAk">
            <ref role="1Pybhc" to="t6h5:~Array" resolve="Array" />
            <ref role="37wK5l" to="t6h5:~Array.get(java.lang.Object,int):java.lang.Object" resolve="get" />
            <node concept="37vLTw" id="5JQC2dmP_gk" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxKm" resolve="array" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP_gl" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxKo" resolve="i" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPxKv" role="3clF45">
        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxKw" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxL3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxL4" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the item in the array at index i. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzQb">
    <property role="TrG5h" value="IntegerSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPzQc" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzQd" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmPzQe" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzQb" resolve="IntegerSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPzQf" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzQC" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzQG" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzQH" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Integer} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzQI" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzQJ" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzQK" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzQL" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzQM" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzQN" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzQO" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzQP" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzQg" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzQh" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzQi" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzQj" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzQk" role="3clF46">
        <property role="TrG5h" value="integer" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzQl" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzQm" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzQn" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_gm" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmP_gn" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzQi" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_go" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzQk" resolve="integer" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzQr" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPzQs" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzQt" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPzQu" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzQv" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzQw" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzQx" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzQy" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPzQz" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmPzQ$" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzQv" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzQ_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzQA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzQB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzQQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQR" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isEqualTo} instead. Integer comparison is consistent with equality. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="1lrU7d" id="5JQC2dmPzQD" role="lGtFl">
      <node concept="u1fJn" id="5JQC2dmPzQE" role="u1e2Z">
        <property role="u1fJ8" value="true" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.truth" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPzQF" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="javax.annotation.Nullable" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPvVj">
    <property role="TrG5h" value="ExpectFailure" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPvVk" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPvVI" role="EKbjA">
      <ref role="3uigEE" to="a19p:~TestRule" resolve="TestRule" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPvZU" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw04" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw05" role="1dT_Ay">
          <property role="1dT_AB" value=" An assertion strategy that expects the given assertion to fail, and captures the failure rather" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw06" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw07" role="1dT_Ay">
          <property role="1dT_AB" value=" than throwing it. It should be used as a JUnit {@code @Rule}, so that unexpectedly-passing" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw08" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw09" role="1dT_Ay">
          <property role="1dT_AB" value=" assertions will cause your test to fail. In Java 8 you can use {@link #expectFailure" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0a" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0b" role="1dT_Ay">
          <property role="1dT_AB" value=" expectFailure()} to instead capture failures directly." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0c" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0d" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0e" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0f" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;By design this class expects exactly one failure per instance, meaning you should create" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0g" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0h" role="1dT_Ay">
          <property role="1dT_AB" value=" separate tests for each failure case you intend to assert on, rather than trying to capture" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0i" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0j" role="1dT_Ay">
          <property role="1dT_AB" value=" multiple failures in a single test. With {@code expectFailure()} you can safely capture multiple" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0k" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0l" role="1dT_Ay">
          <property role="1dT_AB" value=" failures in the same test method, but creating separate tests is still encouraged. (Currently," />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0m" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0n" role="1dT_Ay">
          <property role="1dT_AB" value=" calling {@code whenTesting()} more than once on the same instance fails. However, you should not" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0o" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0p" role="1dT_Ay">
          <property role="1dT_AB" value=" rely on this behaviour.)" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0q" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0r" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0s" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0t" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; this class is not intended for general use; it exists primarily to write tests of" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0u" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0v" role="1dT_Ay">
          <property role="1dT_AB" value=" {@link Subject} implementations and other Truth internals. If you are writing your own custom" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0w" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0x" role="1dT_Ay">
          <property role="1dT_AB" value=" subject you are encouraged to use this class rather than define a custom {@link FailureStrategy}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0z" role="1dT_Ay">
          <property role="1dT_AB" value=" or directly catch {@link AssertionError}. Use {@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0$" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0_" role="1dT_Ay">
          <property role="1dT_AB" value=" expectFailure.whenTesting().about(subjectFactory()).that(...)} to make assertions about custom" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw0A" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw0B" role="1dT_Ay">
          <property role="1dT_AB" value=" subjects." />
        </node>
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmPvVJ" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="strategy" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPvVL" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPvVM" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPvVN" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPvVO" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmP$8X" resolve="AbstractFailureStrategy" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPvVP" role="jymVt">
              <property role="TrG5h" value="fail" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPvVQ" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPvVR" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvVS" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvVT" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvVU" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPvVV" role="3clF47">
                <node concept="SfApY" id="5JQC2dmPvWb" role="3cqZAp">
                  <node concept="TDmWw" id="5JQC2dmPvWc" role="TEbGg">
                    <node concept="3clFbS" id="5JQC2dmPvW6" role="TDEfX">
                      <node concept="3clFbF" id="5JQC2dmPvW7" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPvW8" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPvXX" resolve="captureFailure" />
                          <node concept="37vLTw" id="5JQC2dmPvW9" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvW2" resolve="e" />
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs6" id="5JQC2dmPvWa" role="3cqZAp" />
                    </node>
                    <node concept="3cpWsn" id="5JQC2dmPvW2" role="TDEfY">
                      <property role="3TUv4t" value="false" />
                      <property role="TrG5h" value="e" />
                      <node concept="3uibUv" id="5JQC2dmPvW4" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPvVX" role="SfCbr">
                    <node concept="3clFbF" id="5JQC2dmPvVY" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_gw" role="3clFbG">
                        <node concept="10M0yZ" id="5JQC2dmQaC0" role="2Oq$k0">
                          <ref role="1PxDUh" node="5JQC2dmPwXT" resolve="Truth" />
                          <ref role="3cqZAo" node="5JQC2dmPwXV" resolve="THROW_ASSERTION_ERROR" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_gx" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
                          <node concept="37vLTw" id="5JQC2dmP_gy" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvVR" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_gz" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvVT" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="YS8fn" id="5JQC2dmPvWf" role="3cqZAp">
                  <node concept="2ShNRf" id="5JQC2dmP_g$" role="YScLw">
                    <node concept="1pGfFk" id="5JQC2dmP_iX" role="2ShVmc">
                      <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                      <node concept="Xl_RD" id="5JQC2dmP_iY" role="37wK5m">
                        <property role="Xl_RC" value="fail() unexpectedly succeeded." />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPvWg" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPvWh" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmPvWi" role="jymVt">
              <property role="TrG5h" value="failComparing" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPvWj" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPvWk" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvWl" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvWm" role="3clF46">
                <property role="TrG5h" value="expected" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvWn" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvWo" role="3clF46">
                <property role="TrG5h" value="actual" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvWp" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvWq" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvWr" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPvWs" role="3clF47">
                <node concept="SfApY" id="5JQC2dmPvWI" role="3cqZAp">
                  <node concept="TDmWw" id="5JQC2dmPvWJ" role="TEbGg">
                    <node concept="3clFbS" id="5JQC2dmPvWD" role="TDEfX">
                      <node concept="3clFbF" id="5JQC2dmPvWE" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPvWF" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPvXX" resolve="captureFailure" />
                          <node concept="37vLTw" id="5JQC2dmPvWG" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvW_" resolve="e" />
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs6" id="5JQC2dmPvWH" role="3cqZAp" />
                    </node>
                    <node concept="3cpWsn" id="5JQC2dmPvW_" role="TDEfY">
                      <property role="3TUv4t" value="false" />
                      <property role="TrG5h" value="e" />
                      <node concept="3uibUv" id="5JQC2dmPvWB" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPvWu" role="SfCbr">
                    <node concept="3clFbF" id="5JQC2dmPvWv" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_j2" role="3clFbG">
                        <node concept="10M0yZ" id="5JQC2dmQaC1" role="2Oq$k0">
                          <ref role="1PxDUh" node="5JQC2dmPwXT" resolve="Truth" />
                          <ref role="3cqZAo" node="5JQC2dmPwXV" resolve="THROW_ASSERTION_ERROR" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_j3" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPwTa" resolve="failComparing" />
                          <node concept="37vLTw" id="5JQC2dmP_j4" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvWk" resolve="message" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_j5" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvWm" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_j6" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvWo" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_j7" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvWq" resolve="cause" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="YS8fn" id="5JQC2dmPvWM" role="3cqZAp">
                  <node concept="2ShNRf" id="5JQC2dmP_j8" role="YScLw">
                    <node concept="1pGfFk" id="5JQC2dmP_jr" role="2ShVmc">
                      <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                      <node concept="Xl_RD" id="5JQC2dmP_js" role="37wK5m">
                        <property role="Xl_RC" value="fail() unexpectedly succeeded." />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPvWN" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPvWO" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvWP" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPvWQ" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="inRuleContext" />
      <property role="3TUv4t" value="false" />
      <node concept="10P_77" id="5JQC2dmPvWS" role="1tU5fm" />
      <node concept="3clFbT" id="5JQC2dmPvWT" role="33vP2m">
        <property role="3clFbU" value="false" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvWU" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPvWV" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="failureExpected" />
      <property role="3TUv4t" value="false" />
      <node concept="10P_77" id="5JQC2dmPvWX" role="1tU5fm" />
      <node concept="3clFbT" id="5JQC2dmPvWY" role="33vP2m">
        <property role="3clFbU" value="false" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvWZ" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPvX0" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="failure" />
      <property role="3TUv4t" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPvX2" role="2AJF6D">
        <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPvX3" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
      </node>
      <node concept="10Nm6u" id="5JQC2dmPvX4" role="33vP2m" />
      <node concept="3Tm6S6" id="5JQC2dmPvX5" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPvX6" role="jymVt">
      <property role="TrG5h" value="whenTesting" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvX7" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvX8" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn5FDz" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkState(boolean,java.lang.String,java.lang.Object...):void" resolve="checkState" />
            <node concept="37vLTw" id="5JQC2dn5FD$" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvWQ" resolve="inRuleContext" />
            </node>
            <node concept="Xl_RD" id="5JQC2dn5FD_" role="37wK5m">
              <property role="Xl_RC" value="ExpectFailure must be used as a JUnit @Rule" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPvXc" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPvXd" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPvXe" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPvXf" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPvXh" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPvXj" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPvXi" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="error" />
                <node concept="3uibUv" id="5JQC2dmPvXk" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                </node>
                <node concept="2ShNRf" id="5JQC2dmP_jt" role="33vP2m">
                  <node concept="1pGfFk" id="5JQC2dmP_jK" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                    <node concept="Xl_RD" id="5JQC2dmP_jL" role="37wK5m">
                      <property role="Xl_RC" value="ExpectFailure already captured a failure" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPvXn" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_jO" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_jN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPvXi" resolve="error" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_jP" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Throwable.initCause(java.lang.Throwable):java.lang.Throwable" resolve="initCause" />
                  <node concept="37vLTw" id="5JQC2dmP_jQ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="YS8fn" id="5JQC2dmPvXr" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPvXq" role="YScLw">
                <ref role="3cqZAo" node="5JQC2dmPvXi" resolve="error" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPvXs" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPvXt" role="3clFbw">
            <ref role="3cqZAo" node="5JQC2dmPvWV" resolve="failureExpected" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPvXv" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPvXy" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmP_jS" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmP_kb" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                  <node concept="Xl_RD" id="5JQC2dmP_kc" role="37wK5m">
                    <property role="Xl_RC" value="ExpectFailure.whenTesting() called previously, but did not capture a failure." />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvXz" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPvX$" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPvX_" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPvWV" resolve="failureExpected" />
            </node>
            <node concept="3clFbT" id="5JQC2dmPvXA" role="37vLTx">
              <property role="3clFbU" value="true" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPvXB" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_kd" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_k$" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
              <node concept="37vLTw" id="5JQC2dmP_k_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPvVJ" resolve="strategy" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvXE" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvXF" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvXG" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw0C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0D" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a test verb that expects the chained assertion to fail, and makes the failure available" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0F" role="1dT_Ay">
            <property role="1dT_AB" value="via {@link #getFailure}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvXH" role="jymVt">
      <property role="TrG5h" value="getFailure" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvXI" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvXJ" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPvXK" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPvXL" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPvXM" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPvXO" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPvXR" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmP_kB" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmP_kU" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                  <node concept="Xl_RD" id="5JQC2dmP_kV" role="37wK5m">
                    <property role="Xl_RC" value="ExpectFailure did not capture a failure." />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPvXS" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPvXT" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvXU" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvXV" role="3clF45">
        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvXW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw0G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0H" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the captured failure, if one occurred. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvXX" role="jymVt">
      <property role="TrG5h" value="captureFailure" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvXY" role="3clF46">
        <property role="TrG5h" value="captured" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvXZ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvY0" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvY1" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPvY2" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPvY3" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPvY4" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPvY6" role="3clFbx">
            <node concept="3SKdUt" id="5JQC2dmPw0N" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TcZ" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Td0" role="1PaTwD">
                  <property role="3oM_SC" value="TODO(diamondm)" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td1" role="1PaTwD">
                  <property role="3oM_SC" value="is" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td2" role="1PaTwD">
                  <property role="3oM_SC" value="it" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td3" role="1PaTwD">
                  <property role="3oM_SC" value="worthwhile" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td4" role="1PaTwD">
                  <property role="3oM_SC" value="to" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td5" role="1PaTwD">
                  <property role="3oM_SC" value="add" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td6" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td7" role="1PaTwD">
                  <property role="3oM_SC" value="failures" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td8" role="1PaTwD">
                  <property role="3oM_SC" value="as" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td9" role="1PaTwD">
                  <property role="3oM_SC" value="suppressed" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tda" role="1PaTwD">
                  <property role="3oM_SC" value="exceptions?" />
                </node>
              </node>
            </node>
            <node concept="YS8fn" id="5JQC2dmPvYe" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmP_kW" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmP_l_" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                  <node concept="2YIFZM" id="5JQC2dmPCFG" role="37wK5m">
                    <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
                    <ref role="37wK5l" to="wyt6:~String.format(java.lang.String,java.lang.Object...):java.lang.String" resolve="format" />
                    <node concept="Xl_RD" id="5JQC2dmPCFH" role="37wK5m">
                      <property role="Xl_RC" value="ExpectFailure.whenTesting() caught multiple failures:\n\n%s\n\n%s\n" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dn3x1o" role="37wK5m">
                      <ref role="1Pybhc" to="gyfg:~Throwables" resolve="Throwables" />
                      <ref role="37wK5l" to="gyfg:~Throwables.getStackTraceAsString(java.lang.Throwable):java.lang.String" resolve="getStackTraceAsString" />
                      <node concept="37vLTw" id="5JQC2dn3x1p" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dn3n6F" role="37wK5m">
                      <ref role="1Pybhc" to="gyfg:~Throwables" resolve="Throwables" />
                      <ref role="37wK5l" to="gyfg:~Throwables.getStackTraceAsString(java.lang.Throwable):java.lang.String" resolve="getStackTraceAsString" />
                      <node concept="37vLTw" id="5JQC2dn3n6G" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvXY" resolve="captured" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvYf" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPvYg" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPvYh" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPvYi" role="37vLTx">
              <ref role="3cqZAo" node="5JQC2dmPvXY" resolve="captured" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvYj" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvYk" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvYl" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw0I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0J" role="1dT_Ay">
            <property role="1dT_AB" value="Captures the provided failure, or throws an {@link AssertionError} if a failure had previously" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0L" role="1dT_Ay">
            <property role="1dT_AB" value="been captured." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPvYm" role="jymVt">
      <property role="TrG5h" value="expectFailure" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvYn" role="3clF46">
        <property role="TrG5h" value="assertionCallback" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvYo" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPvVl" resolve="ExpectFailure.AssertionCallback" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvYp" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPvYr" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPvYq" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectFailure" />
            <node concept="3uibUv" id="5JQC2dmPvYs" role="1tU5fm">
              <ref role="3uigEE" node="5JQC2dmPvVj" resolve="ExpectFailure" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_lH" role="33vP2m">
              <node concept="HV5vD" id="5JQC2dmP_lJ" role="2ShVmc">
                <ref role="HV5vE" node="5JQC2dmPvVj" resolve="ExpectFailure" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvYu" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPvYv" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmP_lM" role="37vLTJ">
              <node concept="37vLTw" id="5JQC2dmP_lL" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPvYq" resolve="expectFailure" />
              </node>
              <node concept="2OwXpG" id="5JQC2dmP_lN" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPvWQ" resolve="inRuleContext" />
              </node>
            </node>
            <node concept="3clFbT" id="5JQC2dmPvYx" role="37vLTx">
              <property role="3clFbU" value="true" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPw0Z" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tdb" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tdc" role="1PaTwD">
              <property role="3oM_SC" value="safe" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdd" role="1PaTwD">
              <property role="3oM_SC" value="since" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tde" role="1PaTwD">
              <property role="3oM_SC" value="this" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdf" role="1PaTwD">
              <property role="3oM_SC" value="instance" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdg" role="1PaTwD">
              <property role="3oM_SC" value="doesn't" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdh" role="1PaTwD">
              <property role="3oM_SC" value="leave" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdi" role="1PaTwD">
              <property role="3oM_SC" value="this" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tdj" role="1PaTwD">
              <property role="3oM_SC" value="method" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvYy" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_lQ" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP_lP" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPvYn" resolve="assertionCallback" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_lR" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPvVn" resolve="invokeAssertion" />
              <node concept="2OqwBi" id="5JQC2dmPCyu" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPCyt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPvYq" resolve="expectFailure" />
                </node>
                <node concept="liA8E" id="5JQC2dmPCyv" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPvX6" resolve="whenTesting" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPvY_" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_lV" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmP_lU" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPvYq" resolve="expectFailure" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_lW" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPvXH" resolve="getFailure" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvYB" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvYC" role="3clF45">
        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvYD" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw0O" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0P" role="1dT_Ay">
            <property role="1dT_AB" value=" Static alternative that directly returns the triggered failure. This is intended to be used in" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0Q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0R" role="1dT_Ay">
            <property role="1dT_AB" value=" Java 8 tests similar to {@code expectThrows()}:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0S" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0T" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0U" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0V" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;{@code AssertionError failure = expectFailure(whenTesting -&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw0W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw0X" role="1dT_Ay">
            <property role="1dT_AB" value=" whenTesting.that(4).isNotEqualTo(4));}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPvYE" role="jymVt">
      <property role="TrG5h" value="expectFailureAbout" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPvYF" role="16eVyc">
        <property role="TrG5h" value="S" />
        <node concept="3uibUv" id="5JQC2dmPvYG" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
          <node concept="16syzq" id="5JQC2dmPvYH" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYF" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPvYI" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYJ" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmPvYJ" role="16eVyc">
        <property role="TrG5h" value="D" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPvYK" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPvYL" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
          <node concept="16syzq" id="5JQC2dmPvYM" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYF" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPvYN" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYJ" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPvYO" role="3clF46">
        <property role="TrG5h" value="assertionCallback" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPvYP" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPvVu" resolve="ExpectFailure.DelegatedAssertionCallback" />
          <node concept="16syzq" id="5JQC2dmPvYQ" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYF" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPvYR" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvYJ" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvYS" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPvYT" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPvYU" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPvYm" resolve="expectFailure" />
            <node concept="2ShNRf" id="5JQC2dmPvYV" role="37wK5m">
              <node concept="YeOm9" id="5JQC2dmPvYW" role="2ShVmc">
                <node concept="1Y3b0j" id="5JQC2dmPvYX" role="YeSDq">
                  <property role="1sVAO0" value="false" />
                  <property role="1EXbeo" value="false" />
                  <ref role="1Y3XeK" node="5JQC2dmPvVl" resolve="ExpectFailure.AssertionCallback" />
                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                  <node concept="3clFb_" id="5JQC2dmPvYY" role="jymVt">
                    <property role="TrG5h" value="invokeAssertion" />
                    <property role="DiZV1" value="false" />
                    <property role="od$2w" value="false" />
                    <node concept="2AHcQZ" id="5JQC2dmPvYZ" role="2AJF6D">
                      <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                    </node>
                    <node concept="37vLTG" id="5JQC2dmPvZ0" role="3clF46">
                      <property role="TrG5h" value="whenTesting" />
                      <property role="3TUv4t" value="false" />
                      <node concept="3uibUv" id="5JQC2dmPvZ1" role="1tU5fm">
                        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPvZ2" role="3clF47">
                      <node concept="3clFbF" id="5JQC2dmPvZ3" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmP_m2" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmP_m1" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPvYO" resolve="assertionCallback" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_m3" role="2OqNvi">
                            <ref role="37wK5l" node="5JQC2dmPvV_" resolve="invokeAssertion" />
                            <node concept="2OqwBi" id="5JQC2dmPC_3" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPC_2" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPvZ0" resolve="whenTesting" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmPC_4" role="2OqNvi">
                                <ref role="37wK5l" node="5JQC2dmP$73" resolve="about" />
                                <node concept="37vLTw" id="5JQC2dmPC_5" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPvYK" resolve="factory" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3Tm1VV" id="5JQC2dmPvZ7" role="1B3o_S" />
                    <node concept="3cqZAl" id="5JQC2dmPvZ8" role="3clF45" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvZ9" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvZa" role="3clF45">
        <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvZb" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw10" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw11" role="1dT_Ay">
            <property role="1dT_AB" value=" Static alternative that directly returns the triggered failure. This is intended to be used in" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw12" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw13" role="1dT_Ay">
            <property role="1dT_AB" value=" Java 8 tests similar to {@code expectThrows()}:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw14" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw15" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw16" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw17" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;{@code AssertionError failure = expectFailureAbout(myTypes(), whenTesting -&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw18" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw19" role="1dT_Ay">
            <property role="1dT_AB" value=" whenTesting.that(myType).hasProperty());}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvZc" role="jymVt">
      <property role="TrG5h" value="apply" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPvZd" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPvZe" role="3clF46">
        <property role="TrG5h" value="base" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPvZf" role="1tU5fm">
          <ref role="3uigEE" to="7cms:~Statement" resolve="Statement" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPvZg" role="3clF46">
        <property role="TrG5h" value="description" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvZh" role="1tU5fm">
          <ref role="3uigEE" to="cvlm:~Description" resolve="Description" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvZi" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvZj" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn5xNy" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dn5xNz" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvZe" resolve="base" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvZm" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn4_mf" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dn4_mg" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvZg" resolve="description" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPvZp" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPvZq" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPvZr" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPvZs" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="37wK5l" to="7cms:~Statement.&lt;init&gt;()" resolve="Statement" />
                <ref role="1Y3XeK" to="7cms:~Statement" resolve="Statement" />
                <node concept="3clFb_" id="5JQC2dmPvZt" role="jymVt">
                  <property role="TrG5h" value="evaluate" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPvZu" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPvZv" role="Sfmx6">
                    <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPvZw" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPvZx" role="3cqZAp">
                      <node concept="37vLTI" id="5JQC2dmPvZy" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPvZz" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmPvWQ" resolve="inRuleContext" />
                        </node>
                        <node concept="3clFbT" id="5JQC2dmPvZ$" role="37vLTx">
                          <property role="3clFbU" value="true" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvZ_" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_mb" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_ma" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPvZe" resolve="base" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_mc" role="2OqNvi">
                          <ref role="37wK5l" to="7cms:~Statement.evaluate():void" resolve="evaluate" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvZB" role="3cqZAp">
                      <node concept="37vLTI" id="5JQC2dmPvZC" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPvZD" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmPvWQ" resolve="inRuleContext" />
                        </node>
                        <node concept="3clFbT" id="5JQC2dmPvZE" role="37vLTx">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPvZF" role="3cqZAp">
                      <node concept="1Wc70l" id="5JQC2dmPvZG" role="3clFbw">
                        <node concept="37vLTw" id="5JQC2dmPvZH" role="3uHU7B">
                          <ref role="3cqZAo" node="5JQC2dmPvWV" resolve="failureExpected" />
                        </node>
                        <node concept="3clFbC" id="5JQC2dmPvZI" role="3uHU7w">
                          <node concept="37vLTw" id="5JQC2dmPvZJ" role="3uHU7B">
                            <ref role="3cqZAo" node="5JQC2dmPvX0" resolve="failure" />
                          </node>
                          <node concept="10Nm6u" id="5JQC2dmPvZK" role="3uHU7w" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPvZM" role="3clFbx">
                        <node concept="YS8fn" id="5JQC2dmPvZP" role="3cqZAp">
                          <node concept="2ShNRf" id="5JQC2dmP_md" role="YScLw">
                            <node concept="1pGfFk" id="5JQC2dmP_mw" role="2ShVmc">
                              <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                              <node concept="Xl_RD" id="5JQC2dmP_mx" role="37wK5m">
                                <property role="Xl_RC" value="ExpectFailure.whenTesting() invoked, but no failure was caught." />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPvZQ" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPvZR" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvZS" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvZT" role="3clF45">
        <ref role="3uigEE" to="7cms:~Statement" resolve="Statement" />
      </node>
    </node>
    <node concept="3HP615" id="5JQC2dmPvVl" role="jymVt">
      <property role="TrG5h" value="AssertionCallback" />
      <property role="2bfB8j" value="true" />
      <node concept="3Tm1VV" id="5JQC2dmPvVm" role="1B3o_S" />
      <node concept="3UR2Jj" id="5JQC2dmPvVt" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw1a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1b" role="1dT_Ay">
            <property role="1dT_AB" value=" A &quot;functional interface&quot; for {@link #expectFailure expectFailure()} to invoke and capture" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1d" role="1dT_Ay">
            <property role="1dT_AB" value=" failures." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1f" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1g" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1h" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Java 8 users should pass a lambda to {@code .expectFailure()} rather than directly implement" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1i" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1j" role="1dT_Ay">
            <property role="1dT_AB" value=" this interface. Java 7 users can define an {@code @Rule ExpectFailure} instance instead," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1l" role="1dT_Ay">
            <property role="1dT_AB" value=" however if you prefer the {@code .expectFailure()} pattern you can use this interface to pass" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1n" role="1dT_Ay">
            <property role="1dT_AB" value=" in an anonymous class." />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPvVn" role="jymVt">
        <property role="TrG5h" value="invokeAssertion" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3Tm1VV" id="5JQC2dmPvVo" role="1B3o_S" />
        <node concept="37vLTG" id="5JQC2dmPvVp" role="3clF46">
          <property role="TrG5h" value="expect" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPvVq" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPvVr" role="3clF47" />
        <node concept="3cqZAl" id="5JQC2dmPvVs" role="3clF45" />
      </node>
    </node>
    <node concept="3HP615" id="5JQC2dmPvVu" role="jymVt">
      <property role="TrG5h" value="DelegatedAssertionCallback" />
      <property role="2bfB8j" value="true" />
      <node concept="3Tm1VV" id="5JQC2dmPvVv" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPvVw" role="16eVyc">
        <property role="TrG5h" value="S" />
        <node concept="3uibUv" id="5JQC2dmPvVx" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
          <node concept="16syzq" id="5JQC2dmPvVy" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvVw" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPvVz" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPvV$" resolve="D" />
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmPvV$" role="16eVyc">
        <property role="TrG5h" value="D" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPvVH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw1o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1p" role="1dT_Ay">
            <property role="1dT_AB" value=" A &quot;functional interface&quot; for {@link #expectFailureAbout expectFailureAbout()} to invoke and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1r" role="1dT_Ay">
            <property role="1dT_AB" value=" capture failures." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1t" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1v" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Java 8 users should pass a lambda to {@code .expectFailureAbout()} rather than directly" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1x" role="1dT_Ay">
            <property role="1dT_AB" value=" implement this interface. Java 7 users can define an {@code @Rule ExpectFailure} instance" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1z" role="1dT_Ay">
            <property role="1dT_AB" value=" instead, however if you prefer the {@code .expectFailureAbout()} pattern you can use this" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw1$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw1_" role="1dT_Ay">
            <property role="1dT_AB" value=" interface to pass in an anonymous class." />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPvV_" role="jymVt">
        <property role="TrG5h" value="invokeAssertion" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3Tm1VV" id="5JQC2dmPvVA" role="1B3o_S" />
        <node concept="37vLTG" id="5JQC2dmPvVB" role="3clF46">
          <property role="TrG5h" value="expect" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPvVC" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmP$1T" resolve="AbstractVerb.DelegatedVerb" />
            <node concept="16syzq" id="5JQC2dmPvVD" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPvVw" resolve="S" />
            </node>
            <node concept="16syzq" id="5JQC2dmPvVE" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPvV$" resolve="D" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPvVF" role="3clF47" />
        <node concept="3cqZAl" id="5JQC2dmPvVG" role="3clF45" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPx92">
    <property role="TrG5h" value="MapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPx93" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPxdE" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPxdF" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPx92" resolve="MapSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPxdG" role="11_B2D">
        <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
        <node concept="3qTvmN" id="5JQC2dmPxdH" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPxdI" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPxn6" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxns" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxnt" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Map} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxnu" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxnv" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxnw" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxnx" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxny" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxnz" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPxdJ" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPxdK" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPxdL" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxdM" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxdN" role="3clF46">
        <property role="TrG5h" value="map" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxdO" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxdP" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
          <node concept="3qTvmN" id="5JQC2dmPxdQ" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPxdR" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxdS" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_my" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmP_mz" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxdL" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_m$" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxdN" resolve="map" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxdW" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxdX" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxdY" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxdZ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxe0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxe1" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxe2" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxe3" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnP2hi" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="1rXfSq" id="5JQC2dnP2hj" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2dnP2hk" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxdY" resolve="other" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxe8" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPxe9" role="3cqZAp">
              <node concept="2ZW3vV" id="5JQC2dmPxec" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPxea" role="2ZW6bz">
                  <ref role="3cqZAo" node="5JQC2dmPxdY" resolve="other" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPxeb" role="2ZW6by">
                  <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPxfG" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPxfH" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPxfI" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPxfJ" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPxfK" role="37wK5m">
                        <property role="Xl_RC" value="is equal to" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxfL" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxdY" resolve="other" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxee" role="3clFbx">
                <node concept="3cpWs8" id="5JQC2dmPxeg" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPxef" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="diff" />
                    <node concept="3uibUv" id="5JQC2dmPxeh" role="1tU5fm">
                      <ref role="3uigEE" to="3o3z:~MapDifference" resolve="MapDifference" />
                      <node concept="3qTvmN" id="5JQC2dmPxei" role="11_B2D" />
                      <node concept="3qTvmN" id="5JQC2dmPxej" role="11_B2D" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dozu2h" role="33vP2m">
                      <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                      <ref role="37wK5l" to="3o3z:~Maps.difference(java.util.Map,java.util.Map):com.google.common.collect.MapDifference" resolve="difference" />
                      <node concept="10QFUN" id="5JQC2dozu2i" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dozu2j" role="10QFUP">
                          <ref role="3cqZAo" node="5JQC2dmPxdY" resolve="other" />
                        </node>
                        <node concept="3uibUv" id="5JQC2dozu2k" role="10QFUM">
                          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                          <node concept="3qTvmN" id="5JQC2dozu2l" role="11_B2D" />
                          <node concept="3qTvmN" id="5JQC2dozu2m" role="11_B2D" />
                        </node>
                      </node>
                      <node concept="10QFUN" id="5JQC2dozu2n" role="37wK5m">
                        <node concept="1rXfSq" id="5JQC2dozu2o" role="10QFUP">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="3uibUv" id="5JQC2dozu2p" role="10QFUM">
                          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                          <node concept="3qTvmN" id="5JQC2dozu2q" role="11_B2D" />
                          <node concept="3qTvmN" id="5JQC2dozu2r" role="11_B2D" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPxew" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPxev" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="errorMsg" />
                    <node concept="3uibUv" id="5JQC2dmPxex" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPxey" role="33vP2m">
                      <property role="Xl_RC" value="The subject" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxez" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxe$" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmPxe_" role="3fr31v">
                      <node concept="2OqwBi" id="5JQC2dmP_nl" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmP_nk" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_nm" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~MapDifference.entriesOnlyOnLeft():java.util.Map" resolve="entriesOnlyOnLeft" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxeB" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxeD" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxeE" role="3cqZAp">
                      <node concept="d57v9" id="5JQC2dmPxeF" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPxeG" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                        </node>
                        <node concept="3cpWs3" id="5JQC2dmPxeH" role="37vLTx">
                          <node concept="Xl_RD" id="5JQC2dmPxeI" role="3uHU7B">
                            <property role="Xl_RC" value=" is missing the following entries: " />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_np" role="3uHU7w">
                            <node concept="37vLTw" id="5JQC2dmP_no" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_nq" role="2OqNvi">
                              <ref role="37wK5l" to="3o3z:~MapDifference.entriesOnlyOnLeft():java.util.Map" resolve="entriesOnlyOnLeft" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxeK" role="3cqZAp">
                      <node concept="22lmx$" id="5JQC2dmPxeL" role="3clFbw">
                        <node concept="3fqX7Q" id="5JQC2dmPxeM" role="3uHU7B">
                          <node concept="2OqwBi" id="5JQC2dmPxeN" role="3fr31v">
                            <node concept="2OqwBi" id="5JQC2dmP_nt" role="2Oq$k0">
                              <node concept="37vLTw" id="5JQC2dmP_ns" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmP_nu" role="2OqNvi">
                                <ref role="37wK5l" to="3o3z:~MapDifference.entriesOnlyOnRight():java.util.Map" resolve="entriesOnlyOnRight" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPxeP" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                            </node>
                          </node>
                        </node>
                        <node concept="3fqX7Q" id="5JQC2dmPxeQ" role="3uHU7w">
                          <node concept="2OqwBi" id="5JQC2dmPxeR" role="3fr31v">
                            <node concept="2OqwBi" id="5JQC2dmP_nx" role="2Oq$k0">
                              <node concept="37vLTw" id="5JQC2dmP_nw" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmP_ny" role="2OqNvi">
                                <ref role="37wK5l" to="3o3z:~MapDifference.entriesDiffering():java.util.Map" resolve="entriesDiffering" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPxeT" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxeV" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxeW" role="3cqZAp">
                          <node concept="d57v9" id="5JQC2dmPxeX" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPxeY" role="37vLTJ">
                              <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPxeZ" role="37vLTx">
                              <property role="Xl_RC" value=" and" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxf0" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxf1" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmPxf2" role="3fr31v">
                      <node concept="2OqwBi" id="5JQC2dmP_n_" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmP_n$" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_nA" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~MapDifference.entriesOnlyOnRight():java.util.Map" resolve="entriesOnlyOnRight" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxf4" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxf6" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxf7" role="3cqZAp">
                      <node concept="d57v9" id="5JQC2dmPxf8" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPxf9" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                        </node>
                        <node concept="3cpWs3" id="5JQC2dmPxfa" role="37vLTx">
                          <node concept="Xl_RD" id="5JQC2dmPxfb" role="3uHU7B">
                            <property role="Xl_RC" value=" has the following extra entries: " />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_nD" role="3uHU7w">
                            <node concept="37vLTw" id="5JQC2dmP_nC" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_nE" role="2OqNvi">
                              <ref role="37wK5l" to="3o3z:~MapDifference.entriesOnlyOnRight():java.util.Map" resolve="entriesOnlyOnRight" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxfd" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPxfe" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPxff" role="3fr31v">
                          <node concept="2OqwBi" id="5JQC2dmP_nH" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmP_nG" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_nI" role="2OqNvi">
                              <ref role="37wK5l" to="3o3z:~MapDifference.entriesDiffering():java.util.Map" resolve="entriesDiffering" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPxfh" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxfj" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxfk" role="3cqZAp">
                          <node concept="d57v9" id="5JQC2dmPxfl" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPxfm" role="37vLTJ">
                              <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPxfn" role="37vLTx">
                              <property role="Xl_RC" value=" and" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxfo" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxfp" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmPxfq" role="3fr31v">
                      <node concept="2OqwBi" id="5JQC2dmP_nL" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmP_nK" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_nM" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~MapDifference.entriesDiffering():java.util.Map" resolve="entriesDiffering" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxfs" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxfu" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxfv" role="3cqZAp">
                      <node concept="d57v9" id="5JQC2dmPxfw" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPxfx" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                        </node>
                        <node concept="3cpWs3" id="5JQC2dmPxfy" role="37vLTx">
                          <node concept="Xl_RD" id="5JQC2dmPxfz" role="3uHU7B">
                            <property role="Xl_RC" value=" has the following different entries: " />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_nP" role="3uHU7w">
                            <node concept="37vLTw" id="5JQC2dmP_nO" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxef" resolve="diff" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_nQ" role="2OqNvi">
                              <ref role="37wK5l" to="3o3z:~MapDifference.entriesDiffering():java.util.Map" resolve="entriesDiffering" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPxf_" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxfA" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="3cpWs3" id="5JQC2dmPxfB" role="37wK5m">
                      <node concept="Xl_RD" id="5JQC2dmPxfC" role="3uHU7B">
                        <property role="Xl_RC" value="Not true that %s is equal to &lt;%s&gt;. " />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxfD" role="3uHU7w">
                        <ref role="3cqZAo" node="5JQC2dmPxev" resolve="errorMsg" />
                      </node>
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxfE" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPxfF" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxdY" resolve="other" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxfM" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxfN" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxfO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxn$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxn_" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not equal to the given object. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxfP" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxfQ" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxfR" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxfS" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxfT" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPxfU" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxfV" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxfX" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxfY" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxfZ" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxg0" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxg1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxg2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxg3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnB" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxg4" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxg5" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxg6" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxg7" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPxg8" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPxg9" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxgb" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxgc" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxgd" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxge" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxgf" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxgg" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxgh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnD" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map is empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxgi" role="jymVt">
      <property role="TrG5h" value="hasSize" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxgj" role="3clF46">
        <property role="TrG5h" value="expectedSize" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPxgk" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxgl" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxgm" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dozq74" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dozq75" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dozq76" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPxgj" resolve="expectedSize" />
              </node>
              <node concept="3cmrfG" id="5JQC2dozq77" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dozq78" role="37wK5m">
              <property role="Xl_RC" value="expectedSize (%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2dozq79" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxgj" resolve="expectedSize" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxgu" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxgt" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSize" />
            <node concept="10Oyi0" id="5JQC2dmPxgv" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPxgw" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPxgx" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxgy" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.size():int" resolve="size" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxgz" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPxg$" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxg_" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxgt" resolve="actualSize" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxgA" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxgj" resolve="expectedSize" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxgC" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxgD" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxgE" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPxgF" role="37wK5m">
                  <property role="Xl_RC" value="has a size of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxgG" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxgj" resolve="expectedSize" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPxgH" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxgI" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxgt" resolve="actualSize" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxgJ" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxgK" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxgL" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnF" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map does not have the given size. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxgM" role="jymVt">
      <property role="TrG5h" value="containsKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxgN" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxgO" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxgP" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxgQ" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxgR" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxgS" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxgT" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPxgU" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxgV" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPxgW" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxgN" resolve="key" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxgY" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPxh0" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxgZ" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="keyList" />
                <node concept="3uibUv" id="5JQC2dmPxh1" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPxh2" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2doxUGJ" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2doxUGK" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxgN" resolve="key" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxh5" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQaCn" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="2OqwBi" id="5JQC2dmQaCo" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmQaCp" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmQaCq" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmQaCr" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxgZ" resolve="keyList" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPxhq" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPxhr" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPxhs" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPxht" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPxhu" role="37wK5m">
                        <property role="Xl_RC" value="contains key" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxhv" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxgN" resolve="key" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxhc" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPxnJ" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tdk" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tdl" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPxhd" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxhe" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxhf" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains key &lt;%s (%s)&gt;. However, it does contain keys &lt;%s&gt;." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxhg" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPxhh" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxgN" resolve="key" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaCs" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmQaCt" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxgN" resolve="key" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaCu" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2dnPi7r" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                        <node concept="2OqwBi" id="5JQC2dnPi7s" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2dnPi7t" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dnPi7u" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.keySet():java.util.Set" resolve="keySet" />
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2dnPi7v" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxgZ" resolve="keyList" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxhw" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxhx" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxhy" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnH" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map does not contain the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxhz" role="jymVt">
      <property role="TrG5h" value="doesNotContainKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxh$" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxh_" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxhA" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxhB" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxhC" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxhD" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPxhE" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPxhF" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
              <node concept="37vLTw" id="5JQC2dmPxhG" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxh$" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxhI" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxhJ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxhK" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxhL" role="37wK5m">
                  <property role="Xl_RC" value="does not contain key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxhM" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxh$" resolve="key" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxhN" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxhO" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxhP" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnL" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map contains the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxhQ" role="jymVt">
      <property role="TrG5h" value="containsEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxhR" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxhS" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxhT" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxhU" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxhV" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxhW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxhX" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxhZ" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxhY" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="entry" />
            <node concept="3uibUv" id="5JQC2dmPxi0" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3uibUv" id="5JQC2dmPxi1" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPxi2" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dozkSj" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
              <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
              <node concept="37vLTw" id="5JQC2dozkSk" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxhR" resolve="key" />
              </node>
              <node concept="37vLTw" id="5JQC2dozkSl" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxhU" resolve="value" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxi6" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxi7" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxi8" role="3fr31v">
              <node concept="2OqwBi" id="5JQC2dmPxi9" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPxia" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPxib" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxic" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                <node concept="37vLTw" id="5JQC2dmPxid" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxif" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPxih" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxig" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="keyList" />
                <node concept="3uibUv" id="5JQC2dmPxii" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPxij" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dozig6" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2dozig7" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxhR" resolve="key" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPxin" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxim" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="valueList" />
                <node concept="3uibUv" id="5JQC2dmPxio" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPxip" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dnOQRQ" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2dnOQRR" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxhU" resolve="value" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxis" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQaCD" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="2OqwBi" id="5JQC2dmQaCE" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmQaCF" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmQaCG" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmQaCH" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxig" resolve="keyList" />
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPxiL" role="9aQIa">
                <node concept="2YIFZM" id="5JQC2dmQaCI" role="3clFbw">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                  <node concept="2OqwBi" id="5JQC2dmQaCJ" role="37wK5m">
                    <node concept="1rXfSq" id="5JQC2dmQaCK" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmQaCL" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.values():java.util.Collection" resolve="values" />
                    </node>
                  </node>
                  <node concept="37vLTw" id="5JQC2dmQaCM" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxim" resolve="valueList" />
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxj6" role="9aQIa">
                  <node concept="2OqwBi" id="5JQC2dmPxj7" role="3clFbw">
                    <node concept="1rXfSq" id="5JQC2dmPxj8" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPxj9" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                      <node concept="37vLTw" id="5JQC2dmPxja" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxhR" resolve="key" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmPxjn" role="9aQIa">
                    <node concept="2OqwBi" id="5JQC2dmPxjo" role="3clFbw">
                      <node concept="1rXfSq" id="5JQC2dmPxjp" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxjq" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                        <node concept="37vLTw" id="5JQC2dmPxjr" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxhU" resolve="value" />
                        </node>
                      </node>
                    </node>
                    <node concept="9aQIb" id="5JQC2dmPxjZ" role="9aQIa">
                      <node concept="3clFbS" id="5JQC2dmPxk0" role="9aQI4">
                        <node concept="3clFbF" id="5JQC2dmPxk1" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPxk2" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                            <node concept="Xl_RD" id="5JQC2dmPxk3" role="37wK5m">
                              <property role="Xl_RC" value="contains entry" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPxk4" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPxjt" role="3clFbx">
                      <node concept="3cpWs8" id="5JQC2dmPxjv" role="3cqZAp">
                        <node concept="3cpWsn" id="5JQC2dmPxju" role="3cpWs9">
                          <property role="3TUv4t" value="false" />
                          <property role="TrG5h" value="keys" />
                          <node concept="3uibUv" id="5JQC2dmPxjw" role="1tU5fm">
                            <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                            <node concept="3uibUv" id="5JQC2dmPxjx" role="11_B2D">
                              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                            </node>
                          </node>
                          <node concept="2ShNRf" id="5JQC2dmP_nV" role="33vP2m">
                            <node concept="1pGfFk" id="5JQC2dmP_nW" role="2ShVmc">
                              <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                              <node concept="3uibUv" id="5JQC2do_2ZC" role="1pMfVU">
                                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="1DcWWT" id="5JQC2dmPxj$" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmPxjP" role="1DdaDG">
                          <node concept="1rXfSq" id="5JQC2dmPxjQ" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPxjR" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                          </node>
                        </node>
                        <node concept="3cpWsn" id="5JQC2dmPxjK" role="1Duv9x">
                          <property role="3TUv4t" value="false" />
                          <property role="TrG5h" value="actualEntry" />
                          <node concept="3uibUv" id="5JQC2dmPxjM" role="1tU5fm">
                            <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                            <node concept="3qTvmN" id="5JQC2dmPxjN" role="11_B2D" />
                            <node concept="3qTvmN" id="5JQC2dmPxjO" role="11_B2D" />
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPxjA" role="2LFqv$">
                          <node concept="3clFbJ" id="5JQC2dmPxjB" role="3cqZAp">
                            <node concept="2YIFZM" id="5JQC2dnOLs6" role="3clFbw">
                              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                              <node concept="2OqwBi" id="5JQC2dnOLs7" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dnOLs8" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxjK" resolve="actualEntry" />
                                </node>
                                <node concept="liA8E" id="5JQC2dnOLs9" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                                </node>
                              </node>
                              <node concept="37vLTw" id="5JQC2dnOLsY" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPxhU" resolve="value" />
                              </node>
                            </node>
                            <node concept="3clFbS" id="5JQC2dmPxjG" role="3clFbx">
                              <node concept="3clFbF" id="5JQC2dmPxjH" role="3cqZAp">
                                <node concept="2OqwBi" id="5JQC2dmP_o1" role="3clFbG">
                                  <node concept="37vLTw" id="5JQC2dmP_o0" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmPxju" resolve="keys" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2dmP_o2" role="2OqNvi">
                                    <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                                    <node concept="2OqwBi" id="5JQC2dmPCFR" role="37wK5m">
                                      <node concept="37vLTw" id="5JQC2dmPCFQ" role="2Oq$k0">
                                        <ref role="3cqZAo" node="5JQC2dmPxjK" resolve="actualEntry" />
                                      </node>
                                      <node concept="liA8E" id="5JQC2dmPCFS" role="2OqNvi">
                                        <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="5JQC2dmPxjS" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPxjT" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmPxjU" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s contains entry &lt;%s&gt;. However, the following keys are mapped to &lt;%s&gt;: %s" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmPxjV" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxjW" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxjX" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxhU" resolve="value" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxjY" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxju" resolve="keys" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxjc" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxjd" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPxje" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPxjf" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s contains entry &lt;%s&gt;. However, it has a mapping from &lt;%s&gt; to &lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPxjg" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxjh" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxji" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxhR" resolve="key" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPxjj" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2dmPxjk" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPxjl" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                            <node concept="37vLTw" id="5JQC2dmPxjm" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxhR" resolve="key" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPxiS" role="3clFbx">
                  <node concept="3SKdUt" id="5JQC2dmPxnR" role="3cqZAp">
                    <node concept="1PaTwC" id="1fGNp1n8Tdm" role="3ndbpf">
                      <node concept="3oM_SD" id="1fGNp1n8Tdn" role="1PaTwD">
                        <property role="3oM_SC" value="itemsToCheck" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmPxiT" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPxiU" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPxiV" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s contains entry &lt;%s (%s)&gt;. However, it does contain values &lt;%s&gt;." />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPxiW" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxiX" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQaCN" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                        <node concept="37vLTw" id="5JQC2dmQaCO" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                        </node>
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQaCP" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                        <node concept="2YIFZM" id="5JQC2dozr$i" role="37wK5m">
                          <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                          <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                          <node concept="2OqwBi" id="5JQC2dozr$j" role="37wK5m">
                            <node concept="1rXfSq" id="5JQC2dozr$k" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                            </node>
                            <node concept="liA8E" id="5JQC2dozr$l" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.values():java.util.Collection" resolve="values" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dozr$m" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxim" resolve="valueList" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxiz" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPxnP" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tdo" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tdp" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPxi$" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxi_" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxiA" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains entry &lt;%s (%s)&gt;. However, it does contain keys &lt;%s&gt;." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxiB" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPxiC" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaD0" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmQaD1" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxhY" resolve="entry" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaD2" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2doxHLB" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                        <node concept="2OqwBi" id="5JQC2doxHLC" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2doxHLD" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2doxHLE" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Map.keySet():java.util.Set" resolve="keySet" />
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2doxHLF" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxig" resolve="keyList" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxk5" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxk6" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxk7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnN" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map does not contain the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxk8" role="jymVt">
      <property role="TrG5h" value="doesNotContainEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxk9" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxka" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxkb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxkc" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxkd" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxke" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxkf" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxkh" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxkg" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="entry" />
            <node concept="3uibUv" id="5JQC2dmPxki" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3uibUv" id="5JQC2dmPxkj" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPxkk" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dox$JW" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
              <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
              <node concept="37vLTw" id="5JQC2dox$JX" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxk9" resolve="key" />
              </node>
              <node concept="37vLTw" id="5JQC2dox$JY" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxkc" resolve="value" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxko" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxkp" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxkq" role="2Oq$k0">
              <node concept="1rXfSq" id="5JQC2dmPxkr" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxks" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPxkt" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
              <node concept="37vLTw" id="5JQC2dmPxku" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxkg" resolve="entry" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxkw" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxkx" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxky" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxkz" role="37wK5m">
                  <property role="Xl_RC" value="does not contain entry" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxk$" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxkg" resolve="entry" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxk_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxkA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxkB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnT" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map contains the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxkC" role="jymVt">
      <property role="TrG5h" value="containsExactly" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxkE" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxkF" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxkG" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPxkH" role="2Oq$k0">
              <node concept="1rXfSq" id="5JQC2dmPxkI" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxkJ" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="2OqwBi" id="5JQC2dmPxkK" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmPxkL" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPxkM" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPxkN" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPyrl" resolve="containsExactly" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxkO" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxkP" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxkQ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnV" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxkR" role="jymVt">
      <property role="TrG5h" value="containsExactly" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxkT" role="3clF46">
        <property role="TrG5h" value="k0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxkU" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxkV" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxkW" role="3clF46">
        <property role="TrG5h" value="v0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxkX" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxkY" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxkZ" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPxl1" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPxl0" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxl2" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxl3" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPxl4" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPxmw" resolve="containsExactlyEntriesIn" />
            <node concept="1rXfSq" id="5JQC2dmPxl5" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPxlc" resolve="accumulateMap" />
              <node concept="37vLTw" id="5JQC2dmPxl6" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxkT" resolve="k0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPxl7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxkW" resolve="v0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPxl8" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxkZ" resolve="rest" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxl9" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxla" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxlb" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxnW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnX" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the map does not contain exactly the given set of key/value pairs." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxnY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxnZ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxo0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo1" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; the use of varargs means that we cannot guarantee an equal number of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxo2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo3" role="1dT_Ay">
            <property role="1dT_AB" value=" key/value pairs at compile time. Please make sure you provide varargs in key/value pairs!" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxlc" role="jymVt">
      <property role="TrG5h" value="accumulateMap" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxld" role="3clF46">
        <property role="TrG5h" value="k0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxle" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxlf" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxlg" role="3clF46">
        <property role="TrG5h" value="v0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxlh" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxli" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxlj" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPxll" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPxlk" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxlm" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxln" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doytWf" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="3clFbC" id="5JQC2doytWg" role="37wK5m">
              <node concept="2dk9JS" id="5JQC2doytWh" role="3uHU7B">
                <node concept="2OqwBi" id="5JQC2doytWi" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2doytWj" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxlj" resolve="rest" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2doytWk" role="2OqNvi" />
                </node>
                <node concept="3cmrfG" id="5JQC2doytWl" role="3uHU7w">
                  <property role="3cmrfH" value="2" />
                </node>
              </node>
              <node concept="3cmrfG" id="5JQC2doytWm" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2doytWn" role="37wK5m">
              <property role="Xl_RC" value="There must be an equal number of key/value pairs (i.e., the number of key/value parameters (%s) must be even)." />
            </node>
            <node concept="3cpWs3" id="5JQC2doytWo" role="37wK5m">
              <node concept="2OqwBi" id="5JQC2doytWp" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2doytWq" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxlj" resolve="rest" />
                </node>
                <node concept="1Rwk04" id="5JQC2doytWr" role="2OqNvi" />
              </node>
              <node concept="3cmrfG" id="5JQC2doytWs" role="3uHU7w">
                <property role="3cmrfH" value="2" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxlz" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxly" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedMap" />
            <node concept="3uibUv" id="5JQC2dmPxl$" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
              <node concept="3uibUv" id="5JQC2dmPxl_" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPxlA" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dozIvq" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
              <ref role="37wK5l" to="3o3z:~Maps.newLinkedHashMap():java.util.LinkedHashMap" resolve="newLinkedHashMap" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxlC" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_og" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP_of" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxly" resolve="expectedMap" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_oh" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.put(java.lang.Object,java.lang.Object):java.lang.Object" resolve="put" />
              <node concept="37vLTw" id="5JQC2dmP_oi" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxld" resolve="k0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_oj" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxlg" resolve="v0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxlH" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxlG" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="keys" />
            <node concept="3uibUv" id="5JQC2dmPxlI" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~Multiset" resolve="Multiset" />
              <node concept="3uibUv" id="5JQC2dmPxlJ" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2doxRd8" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~LinkedHashMultiset" resolve="LinkedHashMultiset" />
              <ref role="37wK5l" to="3o3z:~LinkedHashMultiset.create():com.google.common.collect.LinkedHashMultiset" resolve="create" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxlL" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_on" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP_om" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxlG" resolve="keys" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_oo" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multiset.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="5JQC2dmP_op" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxld" resolve="k0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5JQC2dmPxlO" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxlP" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmPxlR" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPxlS" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5JQC2dmPxlT" role="1Dwp0S">
            <node concept="37vLTw" id="5JQC2dmPxlU" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxlP" resolve="i" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_os" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmP_or" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxlj" resolve="rest" />
              </node>
              <node concept="1Rwk04" id="5JQC2dmQb$m" role="2OqNvi" />
            </node>
          </node>
          <node concept="d57v9" id="5JQC2dmPxlX" role="1Dwrff">
            <node concept="37vLTw" id="5JQC2dmPxlY" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxlP" resolve="i" />
            </node>
            <node concept="3cmrfG" id="5JQC2dmPxlZ" role="37vLTx">
              <property role="3cmrfH" value="2" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxm1" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPxm3" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxm2" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="key" />
                <node concept="3uibUv" id="5JQC2dmPxm4" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="AH0OO" id="5JQC2dmPxm5" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxm6" role="AHHXb">
                    <ref role="3cqZAo" node="5JQC2dmPxlj" resolve="rest" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxm7" role="AHEQo">
                    <ref role="3cqZAo" node="5JQC2dmPxlP" resolve="i" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxm8" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_ow" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_ov" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxly" resolve="expectedMap" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_ox" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.put(java.lang.Object,java.lang.Object):java.lang.Object" resolve="put" />
                  <node concept="37vLTw" id="5JQC2dmP_oy" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxm2" resolve="key" />
                  </node>
                  <node concept="AH0OO" id="5JQC2dmP_oz" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmP_o$" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmPxlj" resolve="rest" />
                    </node>
                    <node concept="3cpWs3" id="5JQC2dmP_o_" role="AHEQo">
                      <node concept="37vLTw" id="5JQC2dmP_oA" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPxlP" resolve="i" />
                      </node>
                      <node concept="3cmrfG" id="5JQC2dmP_oB" role="3uHU7w">
                        <property role="3cmrfH" value="1" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxmg" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_oE" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_oD" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxlG" resolve="keys" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_oF" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multiset.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="37vLTw" id="5JQC2dmP_oG" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxm2" resolve="key" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxmj" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dozf0C" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="3clFbC" id="5JQC2dozf0D" role="37wK5m">
              <node concept="2OqwBi" id="5JQC2dozf0E" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dozf0F" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxlG" resolve="keys" />
                </node>
                <node concept="liA8E" id="5JQC2dozf0G" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multiset.size():int" resolve="size" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dozf0H" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dozf0I" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxly" resolve="expectedMap" />
                </node>
                <node concept="liA8E" id="5JQC2dozf0J" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.size():int" resolve="size" />
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dozf0K" role="37wK5m">
              <property role="Xl_RC" value="Duplicate keys (%s) cannot be passed to containsExactly()." />
            </node>
            <node concept="37vLTw" id="5JQC2dozf0L" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxlG" resolve="keys" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxmq" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPxmr" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPxly" resolve="expectedMap" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxms" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxmt" role="3clF45">
        <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
        <node concept="3uibUv" id="5JQC2dmPxmu" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxmv" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxmw" role="jymVt">
      <property role="TrG5h" value="containsExactlyEntriesIn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxmy" role="3clF46">
        <property role="TrG5h" value="expectedMap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxmz" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
          <node concept="3qTvmN" id="5JQC2dmPxm$" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPxm_" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxmA" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxmB" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxmC" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPxmD" role="2Oq$k0">
              <node concept="1rXfSq" id="5JQC2dmPxmE" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxmF" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="2OqwBi" id="5JQC2dmPxmG" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmPxmH" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPxmI" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPxmJ" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPyrY" resolve="containsExactlyElementsIn" />
              <node concept="2OqwBi" id="5JQC2dmP_oR" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmP_oQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxmy" resolve="expectedMap" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_oS" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxmL" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxmM" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxmN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxo4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo5" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map does not contain exactly the given set of entries in the given map. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxmO" role="jymVt">
      <property role="TrG5h" value="comparingValuesUsing" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPxmP" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPxmQ" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxmR" role="3clF46">
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxmS" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPxmT" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxmP" resolve="A" />
          </node>
          <node concept="16syzq" id="5JQC2dmPxmU" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxmQ" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxmV" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxmW" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_oT" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP_qQ" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPx9e" resolve="MapSubject.UsingCorrespondence" />
              <node concept="37vLTw" id="5JQC2dmP_qR" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxmR" resolve="correspondence" />
              </node>
              <node concept="16syzq" id="5JQC2dmP_qS" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPxmP" resolve="A" />
              </node>
              <node concept="16syzq" id="5JQC2dmP_qT" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPxmQ" resolve="E" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxn1" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxn2" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPx94" resolve="MapSubject.UsingCorrespondence" />
        <node concept="16syzq" id="5JQC2dmPxn3" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPxmP" resolve="A" />
        </node>
        <node concept="16syzq" id="5JQC2dmPxn4" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPxmQ" resolve="E" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPxn5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxo6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo7" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the values of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxo8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo9" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Map} under test) are compared to expected values using the given {@link Correspondence}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxob" role="1dT_Ay">
            <property role="1dT_AB" value=" The actual values must be of type {@code A}, the expected values must be of type {@code E}. The" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxod" role="1dT_Ay">
            <property role="1dT_AB" value=" proposition is actually executed by continuing the method chain. For example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxof" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxog" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoh" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoj" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualMap)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxok" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxol" role="1dT_Ay">
            <property role="1dT_AB" value="   .comparingValuesUsing(correspondence)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxom" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxon" role="1dT_Ay">
            <property role="1dT_AB" value="   .containsEntry(expectedKey, expectedValue);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxop" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxor" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxos" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxot" role="1dT_Ay">
            <property role="1dT_AB" value=" where {@code actualMap} is a {@code Map&lt;?, A&gt;} (or, more generally, a {@code Map&lt;?, ? extends" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxou" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxov" role="1dT_Ay">
            <property role="1dT_AB" value=" A&gt;}), {@code correspondence} is a {@code Correspondence&lt;A, E&gt;}, and {@code expectedValue} is an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxow" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxox" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code E}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoz" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxo$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxo_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Note that keys will always be compared with regular object equality ({@link Object#equals})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoB" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoD" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Any of the methods on the returned object may throw {@link ClassCastException} if they" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoF" role="1dT_Ay">
            <property role="1dT_AB" value=" encounter an actual value that is not of type {@code A} or an expected value that is not of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoH" role="1dT_Ay">
            <property role="1dT_AB" value=" type {@code E}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPx94" role="jymVt">
      <property role="TrG5h" value="UsingCorrespondence" />
      <property role="2bfB8j" value="true" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tm1VV" id="5JQC2dmPx95" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPx96" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPx97" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPxcE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxoI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoJ" role="1dT_Ay">
            <property role="1dT_AB" value=" A partially specified proposition in which the actual values (i.e. the values of the {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoL" role="1dT_Ay">
            <property role="1dT_AB" value=" Map} under test) are compared to expected values using a {@link Correspondence}. The expected" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoN" role="1dT_Ay">
            <property role="1dT_AB" value=" values are of type {@code E}. Call methods on this object to actually execute the proposition." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoP" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxoQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxoR" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Note that keys will always be compared with regular object equality ({@link Object#equals})." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPx98" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPx9a" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPx9b" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
          </node>
          <node concept="16syzq" id="5JQC2dmPx9c" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPx9d" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPx9e" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPx9f" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPx9g" role="3clF46">
          <property role="TrG5h" value="correspondence" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPx9h" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
            <node concept="16syzq" id="5JQC2dmPx9i" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
            </node>
            <node concept="16syzq" id="5JQC2dmPx9j" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPx9k" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPx9l" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPx9m" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPx9n" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPx9o" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPx9p" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPx98" resolve="correspondence" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2doxKTO" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2doxKTP" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPx9g" resolve="correspondence" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPx9s" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPx9t" role="jymVt">
        <property role="TrG5h" value="containsEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPx9u" role="3clF46">
          <property role="TrG5h" value="expectedKey" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPx9v" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPx9w" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPx9x" role="3clF46">
          <property role="TrG5h" value="expectedValue" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPx9y" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPx9z" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPx9$" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPx9_" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPx9A" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPx9B" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPx9C" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPx9D" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPx9u" resolve="expectedKey" />
                </node>
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPxa2" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPxa3" role="9aQI4">
                <node concept="3cpWs8" id="5JQC2dmPxa5" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPxa4" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="keys" />
                    <node concept="3uibUv" id="5JQC2dmPxa6" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                      <node concept="3uibUv" id="5JQC2dmPxa7" role="11_B2D">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="2ShNRf" id="5JQC2dmP_qU" role="33vP2m">
                      <node concept="1pGfFk" id="5JQC2dmP_qV" role="2ShVmc">
                        <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                        <node concept="3uibUv" id="5JQC2dozq7M" role="1pMfVU">
                          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1DcWWT" id="5JQC2dmPxaa" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPxar" role="1DdaDG">
                    <node concept="1rXfSq" id="5JQC2dmPxas" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPxcr" resolve="getCastSubject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPxat" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                    </node>
                  </node>
                  <node concept="3cpWsn" id="5JQC2dmPxam" role="1Duv9x">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="actualEntry" />
                    <node concept="3uibUv" id="5JQC2dmPxao" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                      <node concept="3qTvmN" id="5JQC2dmPxap" role="11_B2D" />
                      <node concept="16syzq" id="5JQC2dmPxaq" role="11_B2D">
                        <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxac" role="2LFqv$">
                    <node concept="3clFbJ" id="5JQC2dmPxad" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_rf" role="3clFbw">
                        <node concept="37vLTw" id="5JQC2dmP_re" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_rg" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                          <node concept="2OqwBi" id="5JQC2dmPCHz" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmPCHy" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxam" resolve="actualEntry" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPCH$" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP_ri" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPx9x" resolve="expectedValue" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxai" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxaj" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmP_ro" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmP_rn" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxa4" resolve="keys" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_rp" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                              <node concept="2OqwBi" id="5JQC2dmPCJY" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmPCJX" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxam" resolve="actualEntry" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPCJZ" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxau" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxav" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmP_rw" role="3fr31v">
                      <node concept="37vLTw" id="5JQC2dmP_rv" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPxa4" resolve="keys" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_rx" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Set.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="9aQIb" id="5JQC2dmPxaF" role="9aQIa">
                    <node concept="3clFbS" id="5JQC2dmPxaG" role="9aQI4">
                      <node concept="3clFbF" id="5JQC2dmPxaH" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPxaI" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmPxaJ" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s contains an entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmPxaK" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxaL" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPx9u" resolve="expectedKey" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxaM" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxaN" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPx9x" resolve="expectedValue" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxay" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxaz" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPxa$" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPxa_" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s contains an entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. However, the following keys are mapped to such values: &lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPxaA" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxaB" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPx9u" resolve="expectedKey" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxaC" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxaD" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPx9x" resolve="expectedValue" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxaE" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxa4" resolve="keys" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPx9F" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmPx9H" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPx9G" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValue" />
                  <node concept="16syzq" id="5JQC2dmPx9I" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPx9J" role="33vP2m">
                    <node concept="1rXfSq" id="5JQC2dmPx9K" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPxcr" resolve="getCastSubject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPx9L" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dmPx9M" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPx9u" resolve="expectedKey" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPx9N" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_rB" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_rA" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_rC" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                    <node concept="37vLTw" id="5JQC2dmP_rD" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPx9G" resolve="actualValue" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_rE" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPx9x" resolve="expectedValue" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPx9S" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dmPx9T" role="3cqZAp" />
                </node>
              </node>
              <node concept="3clFbF" id="5JQC2dmPx9U" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPx9V" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPx9W" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains an entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. However, it has a mapping from that key to &lt;%s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPx9X" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPx9Y" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPx9u" resolve="expectedKey" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPx9Z" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxa0" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPx9x" resolve="expectedValue" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxa1" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPx9G" resolve="actualValue" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxaO" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPxaP" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxaQ" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxoS" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxoT" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the map does not contain an entry with the given key and a value that corresponds to" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxoU" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxoV" role="1dT_Ay">
              <property role="1dT_AB" value="the given value." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxaR" role="jymVt">
        <property role="TrG5h" value="doesNotContainEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPxaS" role="3clF46">
          <property role="TrG5h" value="excludedKey" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPxaT" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPxaU" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxaV" role="3clF46">
          <property role="TrG5h" value="excludedValue" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPxaW" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPxaX" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxaY" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPxaZ" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPxb0" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPxb1" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxb2" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPxb3" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxaS" resolve="excludedKey" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPxb5" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmPxb7" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPxb6" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValue" />
                  <node concept="16syzq" id="5JQC2dmPxb8" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPxb9" role="33vP2m">
                    <node concept="1rXfSq" id="5JQC2dmPxba" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPxcr" resolve="getCastSubject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPxbb" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dmPxbc" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxaS" resolve="excludedKey" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPxbd" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_rK" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_rJ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_rL" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                    <node concept="37vLTw" id="5JQC2dmP_rM" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxb6" resolve="actualValue" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_rN" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxaV" resolve="excludedValue" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPxbi" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPxbj" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPxbk" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPxbl" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s does not contain an entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. It maps that key to &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPxbm" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxbn" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxaS" resolve="excludedKey" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxbo" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxbp" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxaV" resolve="excludedValue" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPxbq" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxb6" resolve="actualValue" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxbr" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPxbs" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxbt" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxoW" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxoX" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the map contains an entry with the given key and a value that corresponds to the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxoY" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxoZ" role="1dT_Ay">
              <property role="1dT_AB" value="given value." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxbu" role="jymVt">
        <property role="TrG5h" value="containsExactly" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPxbw" role="3clF46">
          <property role="TrG5h" value="k0" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPxbx" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPxby" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxbz" role="3clF46">
          <property role="TrG5h" value="v0" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPxb$" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPxb_" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxbA" role="3clF46">
          <property role="TrG5h" value="rest" />
          <property role="3TUv4t" value="false" />
          <node concept="8X2XB" id="5JQC2dmPxbC" role="1tU5fm">
            <node concept="3uibUv" id="5JQC2dmPxbB" role="8Xvag">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxbD" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPxbF" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPxbE" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedMap" />
              <node concept="3uibUv" id="5JQC2dmPxbG" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                <node concept="3uibUv" id="5JQC2dmPxbH" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="16syzq" id="5JQC2dmPxbI" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
                </node>
              </node>
              <node concept="10QFUN" id="5JQC2dmPxbJ" role="33vP2m">
                <node concept="1rXfSq" id="5JQC2dmPxbK" role="10QFUP">
                  <ref role="37wK5l" node="5JQC2dmPxlc" resolve="accumulateMap" />
                  <node concept="37vLTw" id="5JQC2dmPxbL" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxbw" resolve="k0" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxbM" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxbz" resolve="v0" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxbN" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxbA" resolve="rest" />
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dmPxbO" role="10QFUM">
                  <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                  <node concept="3uibUv" id="5JQC2dmPxbP" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                  <node concept="16syzq" id="5JQC2dmPxbQ" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPxbR" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPxbS" role="3cqZAk">
              <ref role="37wK5l" node="5JQC2dmPxbX" resolve="containsExactlyEntriesIn" />
              <node concept="37vLTw" id="5JQC2dmPxbT" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxbE" resolve="expectedMap" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxbU" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPxbV" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPxbW" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxp0" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxp1" role="1dT_Ay">
              <property role="1dT_AB" value=" Fails if the map does not contain exactly the given set of keys mapping to values that" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxp2" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxp3" role="1dT_Ay">
              <property role="1dT_AB" value=" correspond to the given values." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxp4" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxp5" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxp6" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxp7" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;The values must all be of type {@code E}, and a {@link ClassCastException} will be thrown" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxp8" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxp9" role="1dT_Ay">
              <property role="1dT_AB" value=" if any other type is encountered." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxpa" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxpb" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxpc" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxpd" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; the use of varargs means that we cannot guarantee an equal number of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxpe" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxpf" role="1dT_Ay">
              <property role="1dT_AB" value=" key/value pairs at compile time. Please make sure you provide varargs in key/value pairs!" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxbX" role="jymVt">
        <property role="TrG5h" value="containsExactlyEntriesIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPxbZ" role="16eVyc">
          <property role="TrG5h" value="K" />
        </node>
        <node concept="16euLQ" id="5JQC2dmPxc0" role="16eVyc">
          <property role="TrG5h" value="V" />
          <node concept="16syzq" id="5JQC2dmPxc1" role="3ztrMU">
            <ref role="16sUi3" node="5JQC2dmPx97" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxc2" role="3clF46">
          <property role="TrG5h" value="expectedMap" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxc3" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
            <node concept="16syzq" id="5JQC2dmPxc4" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxbZ" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmPxc5" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxc0" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxc6" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPxc7" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPxc8" role="3cqZAk">
              <node concept="2OqwBi" id="5JQC2dmPxc9" role="2Oq$k0">
                <node concept="2OqwBi" id="5JQC2dmPxca" role="2Oq$k0">
                  <node concept="1rXfSq" id="5JQC2dmPxcb" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPxcc" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                    <node concept="2OqwBi" id="5JQC2dmPxcd" role="37wK5m">
                      <node concept="1rXfSq" id="5JQC2dmPxce" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxcf" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPxcg" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPy$0" resolve="comparingElementsUsing" />
                  <node concept="2ShNRf" id="5JQC2dmP_rO" role="37wK5m">
                    <node concept="1pGfFk" id="5JQC2dmP_ut" role="2ShVmc">
                      <ref role="37wK5l" node="5JQC2dmPxcX" resolve="MapSubject.EntryCorrespondence" />
                      <node concept="37vLTw" id="5JQC2dmP_uu" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPx98" resolve="correspondence" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmP_uy" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPxbZ" resolve="K" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmP_uz" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmP_u$" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPxc0" resolve="V" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxcm" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPy6g" resolve="containsExactlyElementsIn" />
                <node concept="2OqwBi" id="5JQC2dmP_uE" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_uD" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxc2" resolve="expectedMap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_uF" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxco" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPxcp" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPxcq" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxpg" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxph" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the map does not contain exactly the keys in the given map, mapping to values that" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxpi" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxpj" role="1dT_Ay">
              <property role="1dT_AB" value="correspond to the values of the given map." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxcr" role="jymVt">
        <property role="TrG5h" value="getCastSubject" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxcs" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
          <node concept="2B6LJw" id="5JQC2dmPxct" role="2B76xF">
            <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
            <node concept="Xl_RD" id="5JQC2dmPxcu" role="2B70Vg">
              <property role="Xl_RC" value="unchecked" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxcv" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPxcw" role="3cqZAp">
            <node concept="10QFUN" id="5JQC2dmPxcx" role="3cqZAk">
              <node concept="1rXfSq" id="5JQC2dmPxcy" role="10QFUP">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPxcz" role="10QFUM">
                <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
                <node concept="3qTvmN" id="5JQC2dmPxc$" role="11_B2D" />
                <node concept="16syzq" id="5JQC2dmPxc_" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPxcA" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPxcB" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
          <node concept="3qTvmN" id="5JQC2dmPxcC" role="11_B2D" />
          <node concept="16syzq" id="5JQC2dmPxcD" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPx96" resolve="A" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPxcF" role="jymVt">
      <property role="TrG5h" value="EntryCorrespondence" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="16euLQ" id="5JQC2dmPxcG" role="16eVyc">
        <property role="TrG5h" value="K" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPxcH" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPxcI" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPxcJ" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
        <node concept="3uibUv" id="5JQC2dmPxcK" role="11_B2D">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmPxcL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxcG" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmPxcM" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxcH" resolve="A" />
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmPxcN" role="11_B2D">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmPxcO" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxcG" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmPxcP" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxcI" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPxcQ" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="valueCorrespondence" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPxcS" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPxcT" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPxcH" resolve="A" />
          </node>
          <node concept="3qUtgH" id="5JQC2dmPxcV" role="11_B2D">
            <node concept="16syzq" id="5JQC2dmPxcU" role="3qUvdb">
              <ref role="16sUi3" node="5JQC2dmPxcI" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPxcW" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPxcX" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPxcY" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPxcZ" role="3clF46">
          <property role="TrG5h" value="valueCorrespondence" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxd0" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
            <node concept="16syzq" id="5JQC2dmPxd1" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxcH" resolve="A" />
            </node>
            <node concept="3qUtgH" id="5JQC2dmPxd3" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPxd2" role="3qUvdb">
                <ref role="16sUi3" node="5JQC2dmPxcI" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxd4" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPxd5" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPxd6" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPxd7" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPxd8" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPxd9" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPxcQ" resolve="valueCorrespondence" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPxda" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPxcZ" resolve="valueCorrespondence" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxdb" role="jymVt">
        <property role="TrG5h" value="compare" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxdc" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPxdd" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxde" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
            <node concept="16syzq" id="5JQC2dmPxdf" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxcG" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmPxdg" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxcH" resolve="A" />
            </node>
          </node>
          <node concept="2AHcQZ" id="5JQC2do$uG7" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxdh" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxdi" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
            <node concept="16syzq" id="5JQC2dmPxdj" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxcG" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmPxdk" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPxcI" resolve="E" />
            </node>
          </node>
          <node concept="2AHcQZ" id="5JQC2do$_Jf" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxdl" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPxdm" role="3cqZAp">
            <node concept="1Wc70l" id="5JQC2dmPxdn" role="3cqZAk">
              <node concept="2OqwBi" id="5JQC2dmPxdo" role="3uHU7B">
                <node concept="2OqwBi" id="5JQC2dmP_uZ" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmP_uY" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxdd" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_v0" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPxdq" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Object.equals(java.lang.Object):boolean" resolve="equals" />
                  <node concept="2OqwBi" id="5JQC2dmP_v7" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmP_v6" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxdh" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_v8" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_vf" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP_ve" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxcQ" resolve="valueCorrespondence" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_vg" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                  <node concept="2OqwBi" id="5JQC2dmPCA5" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCA4" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxdd" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCA6" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPCAd" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCAc" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxdh" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCAe" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxdv" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPxdw" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPxdx" role="jymVt">
        <property role="TrG5h" value="toString" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxdy" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPxdz" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPxd$" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dmP_vo" role="3cqZAk">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="Xl_RD" id="5JQC2dmP_vp" role="37wK5m">
                <property role="Xl_RC" value="has a key that is equal to and a value that %s the key and value of" />
              </node>
              <node concept="37vLTw" id="5JQC2dmP_vq" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxcQ" resolve="valueCorrespondence" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxdC" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPxdD" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPy3w">
    <property role="TrG5h" value="IterableSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPy3x" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPyjS" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPyjT" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPyjU" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
        <node concept="3qTvmN" id="5JQC2dmPyjV" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPy$i" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPy$T" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy$U" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Iterable} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy$V" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy$W" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy$X" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy$Y" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy$Z" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_0" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_1" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_2" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;ul&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_4" role="1dT_Ay">
          <property role="1dT_AB" value="   &lt;li&gt;Assertions may iterate through the given {@link Iterable} more than once. If you have an" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_6" role="1dT_Ay">
          <property role="1dT_AB" value="       unusual implementation of {@link Iterable} which does not support multiple iterations" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_8" role="1dT_Ay">
          <property role="1dT_AB" value="       (sometimes known as a &quot;one-shot iterable&quot;), you must copy your iterable into a collection" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_9" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_a" role="1dT_Ay">
          <property role="1dT_AB" value="       which does (e.g. {@code ImmutableList.copyOf(iterable)} or, if your iterable may contain" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_b" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_c" role="1dT_Ay">
          <property role="1dT_AB" value="       null, {@code newArrayList(iterable)}). If you don't, you may see surprising failures." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_d" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_e" role="1dT_Ay">
          <property role="1dT_AB" value="   &lt;li&gt;Assertions may also require that the elements in the given {@link Iterable} implement" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_f" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_g" role="1dT_Ay">
          <property role="1dT_AB" value="       {@link Object#hashCode} correctly." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_h" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_i" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;/ul&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_j" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_k" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_l" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_m" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy_n" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy_o" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Pete Gillin" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPykk" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPykl" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPykm" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPykn" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyko" role="3clF46">
        <property role="TrG5h" value="list" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPykp" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPykq" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPykr" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyks" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_vv" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmP_vw" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPykm" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_vx" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyko" resolve="list" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPykw" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPykx" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyky" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPykz" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyk$" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnof7n" role="3fr31v">
              <ref role="37wK5l" to="3o3z:~Iterables.isEmpty(java.lang.Iterable):boolean" resolve="isEmpty" />
              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
              <node concept="1rXfSq" id="5JQC2dmPykA" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPykC" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPykD" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPykE" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPykF" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPykG" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPykH" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPykI" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_p" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_q" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPykJ" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPykK" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPykL" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dngSsu" role="3clFbw">
            <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
            <ref role="37wK5l" to="3o3z:~Iterables.isEmpty(java.lang.Iterable):boolean" resolve="isEmpty" />
            <node concept="1rXfSq" id="5JQC2dngSsv" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPykP" role="3clFbx">
            <node concept="3SKdUt" id="5JQC2dmPy_u" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tdq" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tdr" role="1PaTwD">
                  <property role="3oM_SC" value="TODO(kak):" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tds" role="1PaTwD">
                  <property role="3oM_SC" value="&quot;Not" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdt" role="1PaTwD">
                  <property role="3oM_SC" value="true" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdu" role="1PaTwD">
                  <property role="3oM_SC" value="that" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdv" role="1PaTwD">
                  <property role="3oM_SC" value="&lt;[]&gt;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdw" role="1PaTwD">
                  <property role="3oM_SC" value="is" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdx" role="1PaTwD">
                  <property role="3oM_SC" value="not" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdy" role="1PaTwD">
                  <property role="3oM_SC" value="empty&quot;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tdz" role="1PaTwD">
                  <property role="3oM_SC" value="doesn't" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td$" role="1PaTwD">
                  <property role="3oM_SC" value="really" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Td_" role="1PaTwD">
                  <property role="3oM_SC" value="need" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdA" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdB" role="1PaTwD">
                  <property role="3oM_SC" value="&lt;[]&gt;," />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPy_w" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TdC" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TdD" role="1PaTwD">
                  <property role="3oM_SC" value="since" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdE" role="1PaTwD">
                  <property role="3oM_SC" value="it's" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdF" role="1PaTwD">
                  <property role="3oM_SC" value="empty." />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdG" role="1PaTwD">
                  <property role="3oM_SC" value="But" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdH" role="1PaTwD">
                  <property role="3oM_SC" value="would" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdI" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdJ" role="1PaTwD">
                  <property role="3oM_SC" value="bulkier" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdK" role="1PaTwD">
                  <property role="3oM_SC" value="&quot;the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdL" role="1PaTwD">
                  <property role="3oM_SC" value="subject&quot;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdM" role="1PaTwD">
                  <property role="3oM_SC" value="really" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdN" role="1PaTwD">
                  <property role="3oM_SC" value="be" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdO" role="1PaTwD">
                  <property role="3oM_SC" value="better?" />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPy_y" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TdP" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TdQ" role="1PaTwD">
                  <property role="3oM_SC" value="At" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdR" role="1PaTwD">
                  <property role="3oM_SC" value="best," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdS" role="1PaTwD">
                  <property role="3oM_SC" value="we" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdT" role="1PaTwD">
                  <property role="3oM_SC" value="could" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdU" role="1PaTwD">
                  <property role="3oM_SC" value="*replace*" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdV" role="1PaTwD">
                  <property role="3oM_SC" value="&lt;[]&gt;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdW" role="1PaTwD">
                  <property role="3oM_SC" value="with" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdX" role="1PaTwD">
                  <property role="3oM_SC" value="a" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdY" role="1PaTwD">
                  <property role="3oM_SC" value="given" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TdZ" role="1PaTwD">
                  <property role="3oM_SC" value="label" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te0" role="1PaTwD">
                  <property role="3oM_SC" value="(rather" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te1" role="1PaTwD">
                  <property role="3oM_SC" value="than" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te2" role="1PaTwD">
                  <property role="3oM_SC" value="supplementing" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te3" role="1PaTwD">
                  <property role="3oM_SC" value="it)." />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPy_$" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Te4" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Te5" role="1PaTwD">
                  <property role="3oM_SC" value="Perhaps" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te6" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te7" role="1PaTwD">
                  <property role="3oM_SC" value="right" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te8" role="1PaTwD">
                  <property role="3oM_SC" value="failure" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Te9" role="1PaTwD">
                  <property role="3oM_SC" value="message" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tea" role="1PaTwD">
                  <property role="3oM_SC" value="is" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Teb" role="1PaTwD">
                  <property role="3oM_SC" value="just" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tec" role="1PaTwD">
                  <property role="3oM_SC" value="&quot;&lt;[]&gt;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Ted" role="1PaTwD">
                  <property role="3oM_SC" value="should" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tee" role="1PaTwD">
                  <property role="3oM_SC" value="not" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tef" role="1PaTwD">
                  <property role="3oM_SC" value="have" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Teg" role="1PaTwD">
                  <property role="3oM_SC" value="been" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Teh" role="1PaTwD">
                  <property role="3oM_SC" value="empty&quot;" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPykQ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPykR" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPykS" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPykT" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPykU" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPykV" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_r" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_s" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPykW" role="jymVt">
      <property role="TrG5h" value="hasSize" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPykX" role="3clF46">
        <property role="TrG5h" value="expectedSize" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPykY" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPykZ" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyl0" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dng2mQ" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dng2mR" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dng2mS" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPykX" resolve="expectedSize" />
              </node>
              <node concept="3cmrfG" id="5JQC2dng2mT" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dng2mU" role="37wK5m">
              <property role="Xl_RC" value="expectedSize(%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2dng2mV" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPykX" resolve="expectedSize" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPyl8" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyl7" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSize" />
            <node concept="10Oyi0" id="5JQC2dmPyl9" role="1tU5fm" />
            <node concept="2YIFZM" id="5JQC2dno8Mw" role="33vP2m">
              <ref role="37wK5l" to="3o3z:~Iterables.size(java.lang.Iterable):int" resolve="size" />
              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
              <node concept="1rXfSq" id="5JQC2dmPylb" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPylc" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPyld" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPyle" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPyl7" resolve="actualSize" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPylf" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPykX" resolve="expectedSize" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPylh" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyli" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPylj" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPylk" role="37wK5m">
                  <property role="Xl_RC" value="has a size of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyll" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPykX" resolve="expectedSize" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPylm" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyln" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyl7" resolve="actualSize" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPylo" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPylp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPylq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy__" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_A" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject does not have the given size. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPylr" role="jymVt">
      <property role="TrG5h" value="contains" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyls" role="3clF46">
        <property role="TrG5h" value="element" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPylt" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPylu" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPylv" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPylw" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPylx" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnlnhI" role="3fr31v">
              <ref role="37wK5l" to="3o3z:~Iterables.contains(java.lang.Iterable,java.lang.Object):boolean" resolve="contains" />
              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
              <node concept="1rXfSq" id="5JQC2dmPylz" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyl$" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyls" resolve="element" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPylA" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPylC" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPylB" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="elementList" />
                <node concept="3uibUv" id="5JQC2dmPylD" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPylE" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dnltFy" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2dnlvGJ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyls" resolve="element" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPylH" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQaDk" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="1rXfSq" id="5JQC2dmQaDl" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaDm" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPylB" resolve="elementList" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPylY" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPylZ" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPym0" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPym1" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPym2" role="37wK5m">
                        <property role="Xl_RC" value="%s should have contained &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPym3" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPym4" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyls" resolve="element" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPylM" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPy_E" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tei" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tej" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPylN" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPylO" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPylP" role="37wK5m">
                      <property role="Xl_RC" value="%s should have contained &lt;%s (%s)&gt; but doesn't. However, it does contain &lt;%s&gt;." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPylQ" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPylR" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyls" resolve="element" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaDn" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmQaDo" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyls" resolve="element" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaDp" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2dnuEDe" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                        <node concept="1rXfSq" id="5JQC2dnuEDf" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dnuEDg" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPylB" resolve="elementList" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPym5" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPym6" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPym7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_B" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_C" role="1dT_Ay">
            <property role="1dT_AB" value="Attests (with a side-effect failure) that the subject contains the supplied item. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPym8" role="jymVt">
      <property role="TrG5h" value="doesNotContain" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPym9" role="3clF46">
        <property role="TrG5h" value="element" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyma" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPymb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPymc" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPymd" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dngV$R" role="3clFbw">
            <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
            <ref role="37wK5l" to="3o3z:~Iterables.contains(java.lang.Iterable,java.lang.Object):boolean" resolve="contains" />
            <node concept="1rXfSq" id="5JQC2dngV$S" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dngV$T" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPym9" resolve="element" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPymi" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPymj" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPymk" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyml" role="37wK5m">
                  <property role="Xl_RC" value="%s should not have contained &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPymm" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPymn" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPym9" resolve="element" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPymo" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPymp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPymq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_F" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_G" role="1dT_Ay">
            <property role="1dT_AB" value="Attests (with a side-effect failure) that the subject does not contain the supplied item. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPymr" role="jymVt">
      <property role="TrG5h" value="containsNoDuplicates" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyms" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPymu" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPymt" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="duplicates" />
            <node concept="3uibUv" id="5JQC2dmPymv" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPymw" role="11_B2D">
                <ref role="3uigEE" to="3o3z:~Multiset$Entry" resolve="Multiset.Entry" />
                <node concept="3qTvmN" id="5JQC2dmPymx" role="11_B2D" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnn4$H" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPymz" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPymN" role="1DdaDG">
            <node concept="2YIFZM" id="5JQC2dnHgNe" role="2Oq$k0">
              <ref role="37wK5l" to="3o3z:~LinkedHashMultiset.create(java.lang.Iterable):com.google.common.collect.LinkedHashMultiset" resolve="create" />
              <ref role="1Pybhc" to="3o3z:~LinkedHashMultiset" resolve="LinkedHashMultiset" />
              <node concept="1rXfSq" id="5JQC2dnHgNf" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPymQ" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~AbstractMapBasedMultiset.entrySet():java.util.Set" resolve="entrySet" />
            </node>
          </node>
          <node concept="3cpWsn" id="5JQC2dmPymJ" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="entry" />
            <node concept="3uibUv" id="5JQC2dmPymL" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~Multiset$Entry" resolve="Multiset.Entry" />
              <node concept="3qTvmN" id="5JQC2dmPymM" role="11_B2D" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPym_" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPymA" role="3cqZAp">
              <node concept="3eOSWO" id="5JQC2dmPymB" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmP_wo" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmP_wn" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPymJ" resolve="entry" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_wp" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multiset$Entry.getCount():int" resolve="getCount" />
                  </node>
                </node>
                <node concept="3cmrfG" id="5JQC2dmPymD" role="3uHU7w">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPymF" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPymG" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_ws" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmP_wr" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPymt" resolve="duplicates" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_wt" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                      <node concept="37vLTw" id="5JQC2dmP_wu" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPymJ" resolve="entry" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPymR" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPymS" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmP_wx" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmP_ww" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPymt" resolve="duplicates" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_wy" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPymV" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPymW" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPymX" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPymY" role="37wK5m">
                  <property role="Xl_RC" value="%s has the following duplicates: &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPymZ" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyn0" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPymt" resolve="duplicates" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyn1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyn2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyn3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_H" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_I" role="1dT_Ay">
            <property role="1dT_AB" value="Attests that the subject does not contain duplicate elements. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyn4" role="jymVt">
      <property role="TrG5h" value="containsAnyOf" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyn5" role="3clF46">
        <property role="TrG5h" value="first" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyn6" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyn7" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyn8" role="3clF46">
        <property role="TrG5h" value="second" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyn9" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyna" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPynb" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPync" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPyne" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPynd" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPynf" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyng" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPynh" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPynA" resolve="containsAny" />
            <node concept="Xl_RD" id="5JQC2dmPyni" role="37wK5m">
              <property role="Xl_RC" value="contains any of" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaDw" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
              <node concept="37vLTw" id="5JQC2dmQaDx" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyn5" resolve="first" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaDy" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyn8" resolve="second" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaDz" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPynb" resolve="rest" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPynn" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyno" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPynp" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_J" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_K" role="1dT_Ay">
            <property role="1dT_AB" value="Attests that the subject contains at least one of the provided objects or fails. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPynq" role="jymVt">
      <property role="TrG5h" value="containsAnyIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPynr" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyns" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPynt" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPynu" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPynv" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPynw" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPynA" resolve="containsAny" />
            <node concept="Xl_RD" id="5JQC2dmPynx" role="37wK5m">
              <property role="Xl_RC" value="contains any element in" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyny" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPynr" resolve="expected" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPynz" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyn$" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyn_" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_L" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_M" role="1dT_Ay">
            <property role="1dT_AB" value="Attests that the subject contains at least one of the objects contained in the provided" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy_N" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_O" role="1dT_Ay">
            <property role="1dT_AB" value="collection or fails." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPynA" role="jymVt">
      <property role="TrG5h" value="containsAny" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPynB" role="3clF46">
        <property role="TrG5h" value="failVerb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPynC" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPynD" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPynE" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPynF" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPynG" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPynI" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPynH" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="3uibUv" id="5JQC2dmPynJ" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3qTvmN" id="5JQC2dmPynK" role="11_B2D" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaD$" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
              <node concept="1rXfSq" id="5JQC2dmQaD_" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPynN" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPynZ" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPynD" resolve="expected" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPynW" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="3uibUv" id="5JQC2dmPynY" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPynP" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPynQ" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_w_" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmP_w$" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPynH" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_wA" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Collection.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmP_wB" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPynW" resolve="item" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPynU" role="3clFbx">
                <node concept="3cpWs6" id="5JQC2dmPynV" role="3cqZAp" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyo0" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmQaDA" role="3clFbw">
            <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
            <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
            <node concept="37vLTw" id="5JQC2dmQaDB" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPynH" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmQaDC" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPynD" resolve="expected" />
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPyoh" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPyoi" role="9aQI4">
              <node concept="3clFbF" id="5JQC2dmPyoj" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyok" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                  <node concept="37vLTw" id="5JQC2dmPyol" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPynB" resolve="failVerb" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyom" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPynD" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyo5" role="3clFbx">
            <node concept="3SKdUt" id="5JQC2dmPy_Q" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tek" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tel" role="1PaTwD">
                  <property role="3oM_SC" value="itemsToCheck" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPyo6" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyo7" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyo8" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s %s &lt;%s&gt;. However, it does contain &lt;%s&gt;." />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyo9" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyoa" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPynB" resolve="failVerb" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaDD" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwcx" resolve="iterableToStringWithTypeInfo" />
                  <node concept="37vLTw" id="5JQC2dmQaDE" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPynD" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaDF" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                  <node concept="2YIFZM" id="5JQC2dnJ4yw" role="37wK5m">
                    <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                    <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                    <node concept="1rXfSq" id="5JQC2dnJ4yx" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dnJ4yy" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPynD" resolve="expected" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyon" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyoo" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPyop" role="jymVt">
      <property role="TrG5h" value="containsAllOf" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyor" role="3clF46">
        <property role="TrG5h" value="firstExpected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyos" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyot" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyou" role="3clF46">
        <property role="TrG5h" value="secondExpected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyov" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyow" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyox" role="3clF46">
        <property role="TrG5h" value="restOfExpected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyoy" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPyo$" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPyoz" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyo_" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyoA" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyoB" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPyoX" resolve="containsAll" />
            <node concept="Xl_RD" id="5JQC2dmPyoC" role="37wK5m">
              <property role="Xl_RC" value="contains all of" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaDM" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
              <node concept="37vLTw" id="5JQC2dmQaDN" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyor" resolve="firstExpected" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaDO" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyou" resolve="secondExpected" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaDP" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyox" resolve="restOfExpected" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyoH" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyoI" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPyoJ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy_R" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_S" role="1dT_Ay">
            <property role="1dT_AB" value=" Attests that the actual iterable contains at least all of the expected elements or fails. If an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy_T" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_U" role="1dT_Ay">
            <property role="1dT_AB" value=" element appears more than once in the expected elements to this call then it must appear at" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy_V" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_W" role="1dT_Ay">
            <property role="1dT_AB" value=" least that number of times in the actual elements." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy_X" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy_Y" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy_Z" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyA0" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyA1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyA2" role="1dT_Ay">
            <property role="1dT_AB" value=" on the object returned by this method. The expected elements must appear in the given order" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyA3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyA4" role="1dT_Ay">
            <property role="1dT_AB" value=" within the actual elements, but they are not required to be consecutive." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyoK" role="jymVt">
      <property role="TrG5h" value="containsAllIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyoM" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyoN" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPyoO" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyoP" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyoQ" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyoR" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPyoX" resolve="containsAll" />
            <node concept="Xl_RD" id="5JQC2dmPyoS" role="37wK5m">
              <property role="Xl_RC" value="contains all elements in" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyoT" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyoM" resolve="expected" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyoU" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyoV" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPyoW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyA5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyA6" role="1dT_Ay">
            <property role="1dT_AB" value=" Attests that the actual iterable contains at least all of the expected elements or fails. If an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyA7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyA8" role="1dT_Ay">
            <property role="1dT_AB" value=" element appears more than once in the expected elements then it must appear at least that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyA9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAa" role="1dT_Ay">
            <property role="1dT_AB" value=" number of times in the actual elements." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAc" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAe" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAg" role="1dT_Ay">
            <property role="1dT_AB" value=" on the object returned by this method. The expected elements must appear in the given order" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAi" role="1dT_Ay">
            <property role="1dT_AB" value=" within the actual elements, but they are not required to be consecutive." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyoX" role="jymVt">
      <property role="TrG5h" value="containsAll" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyoY" role="3clF46">
        <property role="TrG5h" value="failVerb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyoZ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyp0" role="3clF46">
        <property role="TrG5h" value="expectedIterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyp1" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPyp2" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyp3" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPyp5" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyp4" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="3uibUv" id="5JQC2dmPyp6" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3qTvmN" id="5JQC2dmPyp7" role="11_B2D" />
            </node>
            <node concept="2YIFZM" id="5JQC2dnkXaM" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newLinkedList(java.lang.Iterable):java.util.LinkedList" resolve="newLinkedList" />
              <node concept="1rXfSq" id="5JQC2dnkXaN" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPypb" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPypa" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expected" />
            <node concept="3uibUv" id="5JQC2dmPypc" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3qTvmN" id="5JQC2dmPypd" role="11_B2D" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaDQ" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
              <node concept="37vLTw" id="5JQC2dmQaDR" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyp0" resolve="expectedIterable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPyph" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPypg" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="missing" />
            <node concept="3uibUv" id="5JQC2dmPypi" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPypj" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnd1cR" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPypm" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPypl" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualNotInOrder" />
            <node concept="3uibUv" id="5JQC2dmPypn" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPypo" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnmznN" role="33vP2m">
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPypr" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPypq" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="ordered" />
            <node concept="10P_77" id="5JQC2dmPyps" role="1tU5fm" />
            <node concept="3clFbT" id="5JQC2dmPypt" role="33vP2m">
              <property role="3clFbU" value="true" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyAk" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tem" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Ten" role="1PaTwD">
              <property role="3oM_SC" value="step" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Teo" role="1PaTwD">
              <property role="3oM_SC" value="through" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tep" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Teq" role="1PaTwD">
              <property role="3oM_SC" value="expected" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Ter" role="1PaTwD">
              <property role="3oM_SC" value="elements..." />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPypu" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPyq8" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPypa" resolve="expected" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPyq5" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="e" />
            <node concept="3uibUv" id="5JQC2dmPyq7" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPypw" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPypy" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPypx" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="index" />
                <node concept="10Oyi0" id="5JQC2dmPypz" role="1tU5fm" />
                <node concept="2OqwBi" id="5JQC2dmP_wH" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_wG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyp4" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_wI" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.indexOf(java.lang.Object):int" resolve="indexOf" />
                    <node concept="37vLTw" id="5JQC2dmP_wJ" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyq5" resolve="e" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPypA" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPypB" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPypC" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPypx" resolve="index" />
                </node>
                <node concept="1ZRNhn" id="5JQC2dmPypD" role="3uHU7w">
                  <node concept="3cmrfG" id="5JQC2dmPypE" role="2$L3a6">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPypP" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPypQ" role="9aQI4">
                  <node concept="3SKdUt" id="5JQC2dmPyAs" role="3cqZAp">
                    <node concept="1PaTwC" id="1fGNp1n8Tes" role="3ndbpf">
                      <node concept="3oM_SD" id="1fGNp1n8Tet" role="1PaTwD">
                        <property role="3oM_SC" value="otherwise" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8Teu" role="1PaTwD">
                        <property role="3oM_SC" value="try" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8Tev" role="1PaTwD">
                        <property role="3oM_SC" value="removing" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8Tew" role="1PaTwD">
                        <property role="3oM_SC" value="it" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8Tex" role="1PaTwD">
                        <property role="3oM_SC" value="from" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8Tey" role="1PaTwD">
                        <property role="3oM_SC" value="actualNotInOrder..." />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmPypR" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_wM" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmP_wL" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPypl" resolve="actualNotInOrder" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_wN" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~List.remove(java.lang.Object):boolean" resolve="remove" />
                        <node concept="37vLTw" id="5JQC2dmP_wO" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyq5" resolve="e" />
                        </node>
                      </node>
                    </node>
                    <node concept="9aQIb" id="5JQC2dmPyq0" role="9aQIa">
                      <node concept="3clFbS" id="5JQC2dmPyq1" role="9aQI4">
                        <node concept="3SKdUt" id="5JQC2dmPyAw" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Tez" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Te$" role="1PaTwD">
                              <property role="3oM_SC" value="if" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Te_" role="1PaTwD">
                              <property role="3oM_SC" value="it's" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeA" role="1PaTwD">
                              <property role="3oM_SC" value="not" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeB" role="1PaTwD">
                              <property role="3oM_SC" value="in" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeC" role="1PaTwD">
                              <property role="3oM_SC" value="actualNotInOrder," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeD" role="1PaTwD">
                              <property role="3oM_SC" value="we're" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeE" role="1PaTwD">
                              <property role="3oM_SC" value="missing" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeF" role="1PaTwD">
                              <property role="3oM_SC" value="an" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeG" role="1PaTwD">
                              <property role="3oM_SC" value="expected" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TeH" role="1PaTwD">
                              <property role="3oM_SC" value="element" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmPyq2" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmP_wR" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmP_wQ" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_wS" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                              <node concept="37vLTw" id="5JQC2dmP_wT" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyq5" resolve="e" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPypV" role="3clFbx">
                      <node concept="3SKdUt" id="5JQC2dmPyAu" role="3cqZAp">
                        <node concept="1PaTwC" id="1fGNp1n8TeI" role="3ndbpf">
                          <node concept="3oM_SD" id="1fGNp1n8TeJ" role="1PaTwD">
                            <property role="3oM_SC" value="if" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeK" role="1PaTwD">
                            <property role="3oM_SC" value="it" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeL" role="1PaTwD">
                            <property role="3oM_SC" value="was" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeM" role="1PaTwD">
                            <property role="3oM_SC" value="in" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeN" role="1PaTwD">
                            <property role="3oM_SC" value="actualNotInOrder," />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeO" role="1PaTwD">
                            <property role="3oM_SC" value="we're" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeP" role="1PaTwD">
                            <property role="3oM_SC" value="not" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeQ" role="1PaTwD">
                            <property role="3oM_SC" value="in" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8TeR" role="1PaTwD">
                            <property role="3oM_SC" value="order" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="5JQC2dmPypW" role="3cqZAp">
                        <node concept="37vLTI" id="5JQC2dmPypX" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmPypY" role="37vLTJ">
                            <ref role="3cqZAo" node="5JQC2dmPypq" resolve="ordered" />
                          </node>
                          <node concept="3clFbT" id="5JQC2dmPypZ" role="37vLTx">
                            <property role="3clFbU" value="false" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPypG" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPyAm" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8TeS" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8TeT" role="1PaTwD">
                      <property role="3oM_SC" value="if" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeU" role="1PaTwD">
                      <property role="3oM_SC" value="we" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeV" role="1PaTwD">
                      <property role="3oM_SC" value="find" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeW" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeX" role="1PaTwD">
                      <property role="3oM_SC" value="element" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeY" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TeZ" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf0" role="1PaTwD">
                      <property role="3oM_SC" value="actual" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf1" role="1PaTwD">
                      <property role="3oM_SC" value="list..." />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyAo" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tf2" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tf3" role="1PaTwD">
                      <property role="3oM_SC" value="drain" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf4" role="1PaTwD">
                      <property role="3oM_SC" value="all" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf5" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf6" role="1PaTwD">
                      <property role="3oM_SC" value="elements" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf7" role="1PaTwD">
                      <property role="3oM_SC" value="that" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf8" role="1PaTwD">
                      <property role="3oM_SC" value="come" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tf9" role="1PaTwD">
                      <property role="3oM_SC" value="before" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfa" role="1PaTwD">
                      <property role="3oM_SC" value="that" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfb" role="1PaTwD">
                      <property role="3oM_SC" value="element" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfc" role="1PaTwD">
                      <property role="3oM_SC" value="into" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfd" role="1PaTwD">
                      <property role="3oM_SC" value="actualNotInOrder" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPypH" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPypI" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPyqR" resolve="moveElements" />
                    <node concept="37vLTw" id="5JQC2dmPypJ" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyp4" resolve="actual" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPypK" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPypl" resolve="actualNotInOrder" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPypL" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPypx" resolve="index" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyAq" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tfe" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tff" role="1PaTwD">
                      <property role="3oM_SC" value="and" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfg" role="1PaTwD">
                      <property role="3oM_SC" value="remove" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfh" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfi" role="1PaTwD">
                      <property role="3oM_SC" value="element" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfj" role="1PaTwD">
                      <property role="3oM_SC" value="from" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfk" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfl" role="1PaTwD">
                      <property role="3oM_SC" value="actual" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tfm" role="1PaTwD">
                      <property role="3oM_SC" value="list" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPypM" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_wW" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmP_wV" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyp4" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_wX" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.remove(int):java.lang.Object" resolve="remove" />
                      <node concept="3cmrfG" id="5JQC2dmP_wY" role="37wK5m">
                        <property role="3cmrfH" value="0" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyAy" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tfn" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tfo" role="1PaTwD">
              <property role="3oM_SC" value="if" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfp" role="1PaTwD">
              <property role="3oM_SC" value="we" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfq" role="1PaTwD">
              <property role="3oM_SC" value="have" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfr" role="1PaTwD">
              <property role="3oM_SC" value="any" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfs" role="1PaTwD">
              <property role="3oM_SC" value="missing" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tft" role="1PaTwD">
              <property role="3oM_SC" value="expected" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfu" role="1PaTwD">
              <property role="3oM_SC" value="elements," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tfv" role="1PaTwD">
              <property role="3oM_SC" value="fail" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyq9" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyqa" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmP_x1" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmP_x0" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_x2" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyqd" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPyqe" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQaDS" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="1rXfSq" id="5JQC2dmQaDT" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaDU" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPyqz" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPyq$" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPyq_" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPyqA" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                      <node concept="37vLTw" id="5JQC2dmPyqB" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyoY" resolve="failVerb" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQaDV" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                        <node concept="37vLTw" id="5JQC2dmQaDW" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPypa" resolve="expected" />
                        </node>
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPyqE" role="37wK5m">
                        <property role="Xl_RC" value="is missing" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQaDX" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                        <node concept="2YIFZM" id="5JQC2dnFDtq" role="37wK5m">
                          <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                          <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                          <node concept="37vLTw" id="5JQC2dnFDtr" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyqj" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPyA$" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tfw" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tfx" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPyqk" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPyql" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPyqm" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s %s &lt;%s&gt;. It is missing &lt;%s&gt;. However, it does contain &lt;%s&gt;." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPyqn" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyqo" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyoY" resolve="failVerb" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaE2" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                      <node concept="37vLTw" id="5JQC2dmQaE3" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPypa" resolve="expected" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaE4" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2dnM$ul" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <node concept="37vLTw" id="5JQC2dnM$um" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
                        </node>
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQaE9" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2dnMUBm" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <node concept="2YIFZM" id="5JQC2dny2vL" role="37wK5m">
                          <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                          <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                          <node concept="1rXfSq" id="5JQC2dny2vM" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dny2vN" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPypg" resolve="missing" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPyqI" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPyqO" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPyqJ" role="3K4Cdx">
              <ref role="3cqZAo" node="5JQC2dmPypq" resolve="ordered" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyqK" role="3K4E3e">
              <ref role="3cqZAo" node="5JQC2dmPyjW" resolve="IN_ORDER" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_x3" role="3K4GZi">
              <node concept="1pGfFk" id="5JQC2dmP_xg" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmPy3I" resolve="IterableSubject.NotInOrder" />
                <node concept="Xl_RD" id="5JQC2dmP_xh" role="37wK5m">
                  <property role="Xl_RC" value="contains all elements in order" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP_xi" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPypa" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyqP" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyqQ" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPyqR" role="jymVt">
      <property role="TrG5h" value="moveElements" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyqS" role="3clF46">
        <property role="TrG5h" value="input" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyqT" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3qTvmN" id="5JQC2dmPyqU" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyqV" role="3clF46">
        <property role="TrG5h" value="output" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyqW" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
          <node concept="3uibUv" id="5JQC2dmPyqX" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyqY" role="3clF46">
        <property role="TrG5h" value="maxElements" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPyqZ" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyr0" role="3clF47">
        <node concept="1Dw8fO" id="5JQC2dmPyr1" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyr2" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmPyr4" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPyr5" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5JQC2dmPyr6" role="1Dwp0S">
            <node concept="37vLTw" id="5JQC2dmPyr7" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPyr2" resolve="i" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyr8" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPyqY" resolve="maxElements" />
            </node>
          </node>
          <node concept="3uNrnE" id="5JQC2dmPyra" role="1Dwrff">
            <node concept="37vLTw" id="5JQC2dmPyrb" role="2$L3a6">
              <ref role="3cqZAo" node="5JQC2dmPyr2" resolve="i" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyrd" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPyre" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_xl" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP_xk" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyqV" resolve="output" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_xm" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="2OqwBi" id="5JQC2dmPC$R" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPC$Q" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyqS" resolve="input" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPC$S" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.remove(int):java.lang.Object" resolve="remove" />
                      <node concept="3cmrfG" id="5JQC2dmPC$T" role="37wK5m">
                        <property role="3cmrfH" value="0" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyri" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyrj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyrk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyA_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAA" role="1dT_Ay">
            <property role="1dT_AB" value="Removes at most the given number of available elements from the input list and adds them to the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAC" role="1dT_Ay">
            <property role="1dT_AB" value="given output collection." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyrl" role="jymVt">
      <property role="TrG5h" value="containsExactly" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyrn" role="3clF46">
        <property role="TrG5h" value="varargs" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyro" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPyrq" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPyrp" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyrr" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPyrt" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyrs" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expected" />
            <node concept="3uibUv" id="5JQC2dmPyru" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPyrv" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="3K4zz7" id="5JQC2dmPyrE" role="33vP2m">
              <node concept="1eOMI4" id="5JQC2dmPyrz" role="3K4Cdx">
                <node concept="3clFbC" id="5JQC2dmPyrw" role="1eOMHV">
                  <node concept="37vLTw" id="5JQC2dmPyrx" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPyrn" resolve="varargs" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPyry" role="3uHU7w" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dnp_aW" role="3K4E3e">
                <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                <node concept="10QFUN" id="5JQC2dmPyr_" role="37wK5m">
                  <node concept="10Nm6u" id="5JQC2dmPyrA" role="10QFUP" />
                  <node concept="3uibUv" id="5JQC2dmPyrB" role="10QFUM">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dnslYa" role="3PaCim">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaEl" role="3K4GZi">
                <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                <node concept="37vLTw" id="5JQC2dmQaEm" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyrn" resolve="varargs" />
                </node>
                <node concept="3uibUv" id="5JQC2dnsG$g" role="3PaCim">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPyrF" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyrG" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPysb" resolve="containsExactlyElementsIn" />
            <node concept="37vLTw" id="5JQC2dmPyrH" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyrs" resolve="expected" />
            </node>
            <node concept="1Wc70l" id="5JQC2dmPyrI" role="37wK5m">
              <node concept="1Wc70l" id="5JQC2dmPyrJ" role="3uHU7B">
                <node concept="3y3z36" id="5JQC2dmPyrK" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPyrL" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPyrn" resolve="varargs" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPyrM" role="3uHU7w" />
                </node>
                <node concept="3clFbC" id="5JQC2dmPyrN" role="3uHU7w">
                  <node concept="2OqwBi" id="5JQC2dmP_xs" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP_xr" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyrn" resolve="varargs" />
                    </node>
                    <node concept="1Rwk04" id="5JQC2dmQb$n" role="2OqNvi" />
                  </node>
                  <node concept="3cmrfG" id="5JQC2dmPyrP" role="3uHU7w">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="2ZW3vV" id="5JQC2dmPyrU" role="3uHU7w">
                <node concept="AH0OO" id="5JQC2dmPyrQ" role="2ZW6bz">
                  <node concept="37vLTw" id="5JQC2dmPyrR" role="AHHXb">
                    <ref role="3cqZAo" node="5JQC2dmPyrn" resolve="varargs" />
                  </node>
                  <node concept="3cmrfG" id="5JQC2dmPyrS" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dmPyrT" role="2ZW6by">
                  <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyrV" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyrW" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPyrX" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyAD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAE" role="1dT_Ay">
            <property role="1dT_AB" value=" Attests that a subject contains exactly the provided objects or fails." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAG" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAI" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Multiplicity is respected. For example, an object duplicated exactly 3 times in the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAK" role="1dT_Ay">
            <property role="1dT_AB" value=" parameters asserts that the object must likewise be duplicated exactly 3 times in the subject." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAM" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAO" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAQ" role="1dT_Ay">
            <property role="1dT_AB" value=" on the object returned by this method." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyrY" role="jymVt">
      <property role="TrG5h" value="containsExactlyElementsIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPys0" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPys1" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPys2" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPys3" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPys4" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPys5" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPysb" resolve="containsExactlyElementsIn" />
            <node concept="37vLTw" id="5JQC2dmPys6" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPys0" resolve="expected" />
            </node>
            <node concept="3clFbT" id="5JQC2dmPys7" role="37wK5m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPys8" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPys9" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPysa" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyAR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAS" role="1dT_Ay">
            <property role="1dT_AB" value=" Attests that a subject contains exactly the provided objects or fails." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAU" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAW" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Multiplicity is respected. For example, an object duplicated exactly 3 times in the {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyAY" role="1dT_Ay">
            <property role="1dT_AB" value=" Iterable} parameter asserts that the object must likewise be duplicated exactly 3 times in the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyAZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyB0" role="1dT_Ay">
            <property role="1dT_AB" value=" subject." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyB1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyB2" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyB3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyB4" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyB5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyB6" role="1dT_Ay">
            <property role="1dT_AB" value=" on the object returned by this method." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPysb" role="jymVt">
      <property role="TrG5h" value="containsExactlyElementsIn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPysc" role="3clF46">
        <property role="TrG5h" value="required" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPysd" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPyse" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPysf" role="3clF46">
        <property role="TrG5h" value="addElementsInWarning" />
        <property role="3TUv4t" value="false" />
        <node concept="10P_77" id="5JQC2dmPysg" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPysh" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPysj" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPysi" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="failSuffix" />
            <node concept="3uibUv" id="5JQC2dmPysk" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="3K4zz7" id="5JQC2dmPyso" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmPysl" role="3K4Cdx">
                <ref role="3cqZAo" node="5JQC2dmPysf" resolve="addElementsInWarning" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmPysm" role="3K4E3e">
                <property role="Xl_RC" value=". Passing an iterable to the varargs method containsExactly(Object...) is often not the correct thing to do. Did you mean to call containsExactlyElementsIn(Iterable) instead?" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmPysn" role="3K4GZi">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPysq" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPysp" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualIter" />
            <node concept="3uibUv" id="5JQC2dmPysr" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
              <node concept="3qTvmN" id="5JQC2dmPyss" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPyst" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPysu" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPysv" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Iterable.iterator():java.util.Iterator" resolve="iterator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPysx" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPysw" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="requiredIter" />
            <node concept="3uibUv" id="5JQC2dmPysy" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
              <node concept="3qTvmN" id="5JQC2dmPysz" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_xw" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmP_xv" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_xx" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Iterable.iterator():java.util.Iterator" resolve="iterator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPys_" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPysA" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmP_x$" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmP_xz" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_x_" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPysD" role="3clFbx">
            <node concept="3SKdUt" id="5JQC2dmPyB8" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tfy" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tfz" role="1PaTwD">
                  <property role="3oM_SC" value="If" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tf$" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tf_" role="1PaTwD">
                  <property role="3oM_SC" value="expected" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfA" role="1PaTwD">
                  <property role="3oM_SC" value="iterator" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfB" role="1PaTwD">
                  <property role="3oM_SC" value="is" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfC" role="1PaTwD">
                  <property role="3oM_SC" value="empty," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfD" role="1PaTwD">
                  <property role="3oM_SC" value="and" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfE" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfF" role="1PaTwD">
                  <property role="3oM_SC" value="actual" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfG" role="1PaTwD">
                  <property role="3oM_SC" value="iterator" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfH" role="1PaTwD">
                  <property role="3oM_SC" value="is" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfI" role="1PaTwD">
                  <property role="3oM_SC" value="not" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfJ" role="1PaTwD">
                  <property role="3oM_SC" value="empty," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfK" role="1PaTwD">
                  <property role="3oM_SC" value="fail" />
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPysE" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_xC" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmP_xB" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_xD" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPysH" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPysI" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPysJ" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPysK" role="37wK5m">
                      <property role="Xl_RC" value="is empty" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPyBa" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TfL" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TfM" role="1PaTwD">
                  <property role="3oM_SC" value="If" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfN" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfO" role="1PaTwD">
                  <property role="3oM_SC" value="previous" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfP" role="1PaTwD">
                  <property role="3oM_SC" value="branch" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfQ" role="1PaTwD">
                  <property role="3oM_SC" value="doesn't" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfR" role="1PaTwD">
                  <property role="3oM_SC" value="throw," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfS" role="1PaTwD">
                  <property role="3oM_SC" value="then" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfT" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfU" role="1PaTwD">
                  <property role="3oM_SC" value="subject" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfV" role="1PaTwD">
                  <property role="3oM_SC" value="was" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfW" role="1PaTwD">
                  <property role="3oM_SC" value="empty," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfX" role="1PaTwD">
                  <property role="3oM_SC" value="so" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfY" role="1PaTwD">
                  <property role="3oM_SC" value="return" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TfZ" role="1PaTwD">
                  <property role="3oM_SC" value="IN_ORDER" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPysL" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPysM" role="3cqZAk">
                <ref role="3cqZAo" node="5JQC2dmPyjW" resolve="IN_ORDER" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBc" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tg0" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tg1" role="1PaTwD">
              <property role="3oM_SC" value="Step" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg2" role="1PaTwD">
              <property role="3oM_SC" value="through" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg3" role="1PaTwD">
              <property role="3oM_SC" value="both" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg4" role="1PaTwD">
              <property role="3oM_SC" value="iterators" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg5" role="1PaTwD">
              <property role="3oM_SC" value="comparing" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg6" role="1PaTwD">
              <property role="3oM_SC" value="elements" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tg7" role="1PaTwD">
              <property role="3oM_SC" value="pairwise." />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPyuY" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPysN" role="2$JKZa">
            <node concept="2OqwBi" id="5JQC2dmP_xG" role="3uHU7B">
              <node concept="37vLTw" id="5JQC2dmP_xF" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_xH" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmP_xK" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmP_xJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_xL" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPysR" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPysT" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPysS" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="actualElement" />
                <node concept="3uibUv" id="5JQC2dmPysU" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_xO" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_xN" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_xP" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPysX" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPysW" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="requiredElement" />
                <node concept="3uibUv" id="5JQC2dmPysY" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_xS" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_xR" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_xT" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPyBe" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tg8" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tg9" role="1PaTwD">
                  <property role="3oM_SC" value="As" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tga" role="1PaTwD">
                  <property role="3oM_SC" value="soon" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgb" role="1PaTwD">
                  <property role="3oM_SC" value="as" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgc" role="1PaTwD">
                  <property role="3oM_SC" value="we" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgd" role="1PaTwD">
                  <property role="3oM_SC" value="encounter" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tge" role="1PaTwD">
                  <property role="3oM_SC" value="a" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgf" role="1PaTwD">
                  <property role="3oM_SC" value="pair" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgg" role="1PaTwD">
                  <property role="3oM_SC" value="of" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgh" role="1PaTwD">
                  <property role="3oM_SC" value="elements" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgi" role="1PaTwD">
                  <property role="3oM_SC" value="that" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgj" role="1PaTwD">
                  <property role="3oM_SC" value="differ," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgk" role="1PaTwD">
                  <property role="3oM_SC" value="we" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgl" role="1PaTwD">
                  <property role="3oM_SC" value="know" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgm" role="1PaTwD">
                  <property role="3oM_SC" value="that" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgn" role="1PaTwD">
                  <property role="3oM_SC" value="inOrder()" />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPyBg" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tgo" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tgp" role="1PaTwD">
                  <property role="3oM_SC" value="cannot" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgq" role="1PaTwD">
                  <property role="3oM_SC" value="succeed," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgr" role="1PaTwD">
                  <property role="3oM_SC" value="so" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgs" role="1PaTwD">
                  <property role="3oM_SC" value="we" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgt" role="1PaTwD">
                  <property role="3oM_SC" value="can" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgu" role="1PaTwD">
                  <property role="3oM_SC" value="check" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgv" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgw" role="1PaTwD">
                  <property role="3oM_SC" value="rest" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgx" role="1PaTwD">
                  <property role="3oM_SC" value="of" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgy" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tgz" role="1PaTwD">
                  <property role="3oM_SC" value="elements" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tg$" role="1PaTwD">
                  <property role="3oM_SC" value="more" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tg_" role="1PaTwD">
                  <property role="3oM_SC" value="normally." />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPyBi" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TgA" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TgB" role="1PaTwD">
                  <property role="3oM_SC" value="Since" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgC" role="1PaTwD">
                  <property role="3oM_SC" value="any" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgD" role="1PaTwD">
                  <property role="3oM_SC" value="previous" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgE" role="1PaTwD">
                  <property role="3oM_SC" value="pairs" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgF" role="1PaTwD">
                  <property role="3oM_SC" value="of" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgG" role="1PaTwD">
                  <property role="3oM_SC" value="elements" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgH" role="1PaTwD">
                  <property role="3oM_SC" value="we" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgI" role="1PaTwD">
                  <property role="3oM_SC" value="iterated" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgJ" role="1PaTwD">
                  <property role="3oM_SC" value="over" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgK" role="1PaTwD">
                  <property role="3oM_SC" value="were" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgL" role="1PaTwD">
                  <property role="3oM_SC" value="equal," />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgM" role="1PaTwD">
                  <property role="3oM_SC" value="they" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgN" role="1PaTwD">
                  <property role="3oM_SC" value="have" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgO" role="1PaTwD">
                  <property role="3oM_SC" value="no" />
                </node>
              </node>
            </node>
            <node concept="3SKdUt" id="5JQC2dmPyBk" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TgP" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TgQ" role="1PaTwD">
                  <property role="3oM_SC" value="effect" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgR" role="1PaTwD">
                  <property role="3oM_SC" value="on" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgS" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgT" role="1PaTwD">
                  <property role="3oM_SC" value="result" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TgU" role="1PaTwD">
                  <property role="3oM_SC" value="now." />
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPyt0" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPyt1" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dnlhDu" role="3fr31v">
                  <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                  <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                  <node concept="37vLTw" id="5JQC2dnlhDv" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPysS" resolve="actualElement" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dnlhDw" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPysW" resolve="requiredElement" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyt6" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPyBm" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8TgV" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8TgW" role="1PaTwD">
                      <property role="3oM_SC" value="Missing" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TgX" role="1PaTwD">
                      <property role="3oM_SC" value="elements;" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TgY" role="1PaTwD">
                      <property role="3oM_SC" value="elements" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TgZ" role="1PaTwD">
                      <property role="3oM_SC" value="that" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th0" role="1PaTwD">
                      <property role="3oM_SC" value="are" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th1" role="1PaTwD">
                      <property role="3oM_SC" value="not" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th2" role="1PaTwD">
                      <property role="3oM_SC" value="missing" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th3" role="1PaTwD">
                      <property role="3oM_SC" value="will" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th4" role="1PaTwD">
                      <property role="3oM_SC" value="be" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th5" role="1PaTwD">
                      <property role="3oM_SC" value="removed" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th6" role="1PaTwD">
                      <property role="3oM_SC" value="as" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th7" role="1PaTwD">
                      <property role="3oM_SC" value="we" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Th8" role="1PaTwD">
                      <property role="3oM_SC" value="iterate." />
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPyt8" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPyt7" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="missing" />
                    <node concept="3uibUv" id="5JQC2dmPyt9" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                      <node concept="3uibUv" id="5JQC2dmPyta" role="11_B2D">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dnqmQS" role="33vP2m">
                      <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
                      <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPytc" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_xY" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmP_xX" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_xZ" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                      <node concept="37vLTw" id="5JQC2dmP_y0" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPysW" resolve="requiredElement" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dnrfii" role="3cqZAp">
                  <node concept="2YIFZM" id="5JQC2dnrwC8" role="3clFbG">
                    <ref role="37wK5l" to="3o3z:~Iterators.addAll(java.util.Collection,java.util.Iterator):boolean" resolve="addAll" />
                    <ref role="1Pybhc" to="3o3z:~Iterators" resolve="Iterators" />
                    <node concept="37vLTw" id="5JQC2dmPyth" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyti" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBo" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Th9" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tha" role="1PaTwD">
                      <property role="3oM_SC" value="Extra" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thb" role="1PaTwD">
                      <property role="3oM_SC" value="elements" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thc" role="1PaTwD">
                      <property role="3oM_SC" value="that" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thd" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8The" role="1PaTwD">
                      <property role="3oM_SC" value="subject" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thf" role="1PaTwD">
                      <property role="3oM_SC" value="had" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thg" role="1PaTwD">
                      <property role="3oM_SC" value="but" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thh" role="1PaTwD">
                      <property role="3oM_SC" value="shouldn't" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thi" role="1PaTwD">
                      <property role="3oM_SC" value="have." />
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPytk" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPytj" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="extra" />
                    <node concept="3uibUv" id="5JQC2dmPytl" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                      <node concept="3uibUv" id="5JQC2dmPytm" role="11_B2D">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dnqFVS" role="33vP2m">
                      <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                      <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBq" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Thj" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Thk" role="1PaTwD">
                      <property role="3oM_SC" value="Remove" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thl" role="1PaTwD">
                      <property role="3oM_SC" value="all" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thm" role="1PaTwD">
                      <property role="3oM_SC" value="actual" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thn" role="1PaTwD">
                      <property role="3oM_SC" value="elements" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tho" role="1PaTwD">
                      <property role="3oM_SC" value="from" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thp" role="1PaTwD">
                      <property role="3oM_SC" value="missing," />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thq" role="1PaTwD">
                      <property role="3oM_SC" value="and" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thr" role="1PaTwD">
                      <property role="3oM_SC" value="add" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ths" role="1PaTwD">
                      <property role="3oM_SC" value="any" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tht" role="1PaTwD">
                      <property role="3oM_SC" value="that" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thu" role="1PaTwD">
                      <property role="3oM_SC" value="weren't" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thv" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thw" role="1PaTwD">
                      <property role="3oM_SC" value="missing" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBs" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Thx" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Thy" role="1PaTwD">
                      <property role="3oM_SC" value="to" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Thz" role="1PaTwD">
                      <property role="3oM_SC" value="extra." />
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPyto" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPytp" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmP_y5" role="3fr31v">
                      <node concept="37vLTw" id="5JQC2dmP_y4" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_y6" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Collection.remove(java.lang.Object):boolean" resolve="remove" />
                        <node concept="37vLTw" id="5JQC2dmP_y7" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPysS" resolve="actualElement" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPytt" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPytu" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmP_ya" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP_y9" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_yb" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmP_yc" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPysS" resolve="actualElement" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="2$JKZl" id="5JQC2dmPytL" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_yf" role="2$JKZa">
                    <node concept="37vLTw" id="5JQC2dmP_ye" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_yg" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPytz" role="2LFqv$">
                    <node concept="3cpWs8" id="5JQC2dmPyt_" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPyt$" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="item" />
                        <node concept="3uibUv" id="5JQC2dmPytA" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmP_yj" role="33vP2m">
                          <node concept="37vLTw" id="5JQC2dmP_yi" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_yk" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPytC" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPytD" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmP_yn" role="3fr31v">
                          <node concept="37vLTw" id="5JQC2dmP_ym" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_yo" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Collection.remove(java.lang.Object):boolean" resolve="remove" />
                            <node concept="37vLTw" id="5JQC2dmP_yp" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPyt$" resolve="item" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPytH" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPytI" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmP_ys" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmP_yr" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_yt" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                              <node concept="37vLTw" id="5JQC2dmP_yu" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyt$" resolve="item" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBu" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Th$" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Th_" role="1PaTwD">
                      <property role="3oM_SC" value="Fail" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThA" role="1PaTwD">
                      <property role="3oM_SC" value="if" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThB" role="1PaTwD">
                      <property role="3oM_SC" value="there" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThC" role="1PaTwD">
                      <property role="3oM_SC" value="are" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThD" role="1PaTwD">
                      <property role="3oM_SC" value="either" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThE" role="1PaTwD">
                      <property role="3oM_SC" value="missing" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThF" role="1PaTwD">
                      <property role="3oM_SC" value="or" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThG" role="1PaTwD">
                      <property role="3oM_SC" value="extra" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThH" role="1PaTwD">
                      <property role="3oM_SC" value="elements." />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBw" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8ThI" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8ThJ" role="1PaTwD">
                      <property role="3oM_SC" value="TODO(kak):" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThK" role="1PaTwD">
                      <property role="3oM_SC" value="Possible" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThL" role="1PaTwD">
                      <property role="3oM_SC" value="enhancement:" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThM" role="1PaTwD">
                      <property role="3oM_SC" value="Include" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThN" role="1PaTwD">
                      <property role="3oM_SC" value="&quot;[1" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThO" role="1PaTwD">
                      <property role="3oM_SC" value="copy]&quot;" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThP" role="1PaTwD">
                      <property role="3oM_SC" value="if" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThQ" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThR" role="1PaTwD">
                      <property role="3oM_SC" value="element" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThS" role="1PaTwD">
                      <property role="3oM_SC" value="does" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThT" role="1PaTwD">
                      <property role="3oM_SC" value="appear" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThU" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBy" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8ThV" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8ThW" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThX" role="1PaTwD">
                      <property role="3oM_SC" value="subject" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThY" role="1PaTwD">
                      <property role="3oM_SC" value="but" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8ThZ" role="1PaTwD">
                      <property role="3oM_SC" value="not" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti0" role="1PaTwD">
                      <property role="3oM_SC" value="enough" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti1" role="1PaTwD">
                      <property role="3oM_SC" value="times." />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti2" role="1PaTwD">
                      <property role="3oM_SC" value="Similarly" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti3" role="1PaTwD">
                      <property role="3oM_SC" value="for" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti4" role="1PaTwD">
                      <property role="3oM_SC" value="unexpected" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti5" role="1PaTwD">
                      <property role="3oM_SC" value="extra" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Ti6" role="1PaTwD">
                      <property role="3oM_SC" value="items." />
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPytM" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPytN" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmP_yx" role="3fr31v">
                      <node concept="37vLTw" id="5JQC2dmP_yw" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_yy" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPytQ" role="3clFbx">
                    <node concept="3clFbJ" id="5JQC2dmPytR" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPytS" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmP_y_" role="3fr31v">
                          <node concept="37vLTw" id="5JQC2dmP_y$" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_yA" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
                          </node>
                        </node>
                      </node>
                      <node concept="9aQIb" id="5JQC2dmPyur" role="9aQIa">
                        <node concept="3clFbS" id="5JQC2dmPyus" role="9aQI4">
                          <node concept="3clFbF" id="5JQC2dmPyut" role="3cqZAp">
                            <node concept="1rXfSq" id="5JQC2dmPyuu" role="3clFbG">
                              <ref role="37wK5l" node="5JQC2dmPyv_" resolve="failWithBadResultsAndSuffix" />
                              <node concept="Xl_RD" id="5JQC2dmPyuv" role="37wK5m">
                                <property role="Xl_RC" value="contains exactly" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEn" role="37wK5m">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                <node concept="37vLTw" id="5JQC2dmQaEo" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmPyuy" role="37wK5m">
                                <property role="Xl_RC" value="is missing" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEp" role="37wK5m">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                                <node concept="2YIFZM" id="5JQC2dnLUyl" role="37wK5m">
                                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                  <node concept="37vLTw" id="5JQC2dnLVrc" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                                  </node>
                                </node>
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyuA" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPysi" resolve="failSuffix" />
                              </node>
                            </node>
                          </node>
                          <node concept="3cpWs6" id="5JQC2dmPyuB" role="3cqZAp">
                            <node concept="37vLTw" id="5JQC2dmPyuC" role="3cqZAk">
                              <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPytV" role="3clFbx">
                        <node concept="3SKdUt" id="5JQC2dmPyB$" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Ti7" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Ti8" role="1PaTwD">
                              <property role="3oM_SC" value="Subject" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Ti9" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tia" role="1PaTwD">
                              <property role="3oM_SC" value="both" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tib" role="1PaTwD">
                              <property role="3oM_SC" value="missing" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tic" role="1PaTwD">
                              <property role="3oM_SC" value="required" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tid" role="1PaTwD">
                              <property role="3oM_SC" value="elements" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tie" role="1PaTwD">
                              <property role="3oM_SC" value="and" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tif" role="1PaTwD">
                              <property role="3oM_SC" value="contains" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tig" role="1PaTwD">
                              <property role="3oM_SC" value="extra" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tih" role="1PaTwD">
                              <property role="3oM_SC" value="elements" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs8" id="5JQC2dmPytX" role="3cqZAp">
                          <node concept="3cpWsn" id="5JQC2dmPytW" role="3cpWs9">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="addTypeInfo" />
                            <node concept="10P_77" id="5JQC2dmPytY" role="1tU5fm" />
                            <node concept="2YIFZM" id="5JQC2dmQaEu" role="33vP2m">
                              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                              <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                              <node concept="37vLTw" id="5JQC2dmQaEv" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmQaEw" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmPyu2" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPyu3" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPyu4" role="37wK5m">
                              <property role="Xl_RC" value="Not true that %s contains exactly &lt;%s&gt;. It is missing &lt;%s&gt; and has unexpected items &lt;%s&gt;%s" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPyu5" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="2YIFZM" id="5JQC2dmQaEx" role="37wK5m">
                              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                              <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                              <node concept="37vLTw" id="5JQC2dmQaEy" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                              </node>
                            </node>
                            <node concept="3K4zz7" id="5JQC2dmPyuf" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPyu8" role="3K4Cdx">
                                <ref role="3cqZAo" node="5JQC2dmPytW" resolve="addTypeInfo" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEz" role="3K4E3e">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                                <node concept="2YIFZM" id="5JQC2dnLWOd" role="37wK5m">
                                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                  <node concept="37vLTw" id="5JQC2dnLYqO" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                                  </node>
                                </node>
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEC" role="3K4GZi">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                                <node concept="2YIFZM" id="5JQC2dnLZyv" role="37wK5m">
                                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                  <node concept="37vLTw" id="5JQC2dnLZyw" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPyt7" resolve="missing" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3K4zz7" id="5JQC2dmPyun" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPyug" role="3K4Cdx">
                                <ref role="3cqZAo" node="5JQC2dmPytW" resolve="addTypeInfo" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEH" role="3K4E3e">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                                <node concept="2YIFZM" id="5JQC2dnw2Sx" role="37wK5m">
                                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                  <node concept="37vLTw" id="5JQC2dnw2Sy" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                                  </node>
                                </node>
                              </node>
                              <node concept="2YIFZM" id="5JQC2dmQaEM" role="3K4GZi">
                                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                                <node concept="2YIFZM" id="5JQC2dnLVO3" role="37wK5m">
                                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                                  <node concept="37vLTw" id="5JQC2dnLWzL" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPyuo" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPysi" resolve="failSuffix" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmPyup" role="3cqZAp">
                          <node concept="37vLTw" id="5JQC2dmPyuq" role="3cqZAk">
                            <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPyuD" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPyuE" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmP_yD" role="3fr31v">
                      <node concept="37vLTw" id="5JQC2dmP_yC" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_yE" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPyuH" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPyuI" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPyuJ" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPyv_" resolve="failWithBadResultsAndSuffix" />
                        <node concept="Xl_RD" id="5JQC2dmPyuK" role="37wK5m">
                          <property role="Xl_RC" value="contains exactly" />
                        </node>
                        <node concept="2YIFZM" id="5JQC2dmQaER" role="37wK5m">
                          <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                          <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                          <node concept="37vLTw" id="5JQC2dmQaES" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                          </node>
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmPyuN" role="37wK5m">
                          <property role="Xl_RC" value="has unexpected items" />
                        </node>
                        <node concept="2YIFZM" id="5JQC2dmQaET" role="37wK5m">
                          <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                          <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                          <node concept="2YIFZM" id="5JQC2dnIYNq" role="37wK5m">
                            <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                            <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                            <node concept="37vLTw" id="5JQC2dnIYNr" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPytj" resolve="extra" />
                            </node>
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyuR" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPysi" resolve="failSuffix" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs6" id="5JQC2dmPyuS" role="3cqZAp">
                      <node concept="37vLTw" id="5JQC2dmPyuT" role="3cqZAk">
                        <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPyBA" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tii" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tij" role="1PaTwD">
                      <property role="3oM_SC" value="Since" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tik" role="1PaTwD">
                      <property role="3oM_SC" value="we" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Til" role="1PaTwD">
                      <property role="3oM_SC" value="know" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tim" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tin" role="1PaTwD">
                      <property role="3oM_SC" value="iterables" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tio" role="1PaTwD">
                      <property role="3oM_SC" value="were" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tip" role="1PaTwD">
                      <property role="3oM_SC" value="not" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tiq" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tir" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tis" role="1PaTwD">
                      <property role="3oM_SC" value="same" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tit" role="1PaTwD">
                      <property role="3oM_SC" value="order," />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tiu" role="1PaTwD">
                      <property role="3oM_SC" value="inOrder()" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tiv" role="1PaTwD">
                      <property role="3oM_SC" value="can" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tiw" role="1PaTwD">
                      <property role="3oM_SC" value="just" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tix" role="1PaTwD">
                      <property role="3oM_SC" value="fail." />
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPyuU" role="3cqZAp">
                  <node concept="2ShNRf" id="5JQC2dmP_yF" role="3cqZAk">
                    <node concept="1pGfFk" id="5JQC2dmP_yP" role="2ShVmc">
                      <ref role="37wK5l" node="5JQC2dmPy3I" resolve="IterableSubject.NotInOrder" />
                      <node concept="Xl_RD" id="5JQC2dmP_yQ" role="37wK5m">
                        <property role="Xl_RC" value="contains exactly these elements in order" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmP_yR" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBC" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tiy" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tiz" role="1PaTwD">
              <property role="3oM_SC" value="Here," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Ti$" role="1PaTwD">
              <property role="3oM_SC" value="" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Ti_" role="1PaTwD">
              <property role="3oM_SC" value="we" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiA" role="1PaTwD">
              <property role="3oM_SC" value="must" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiB" role="1PaTwD">
              <property role="3oM_SC" value="have" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiC" role="1PaTwD">
              <property role="3oM_SC" value="reached" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiD" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiE" role="1PaTwD">
              <property role="3oM_SC" value="end" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiF" role="1PaTwD">
              <property role="3oM_SC" value="of" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiG" role="1PaTwD">
              <property role="3oM_SC" value="one" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiH" role="1PaTwD">
              <property role="3oM_SC" value="of" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiI" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiJ" role="1PaTwD">
              <property role="3oM_SC" value="iterators" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiK" role="1PaTwD">
              <property role="3oM_SC" value="without" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiL" role="1PaTwD">
              <property role="3oM_SC" value="finding" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiM" role="1PaTwD">
              <property role="3oM_SC" value="any" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBE" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TiN" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8TiO" role="1PaTwD">
              <property role="3oM_SC" value="pairs" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiP" role="1PaTwD">
              <property role="3oM_SC" value="of" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiQ" role="1PaTwD">
              <property role="3oM_SC" value="elements" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiR" role="1PaTwD">
              <property role="3oM_SC" value="that" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiS" role="1PaTwD">
              <property role="3oM_SC" value="differ." />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiT" role="1PaTwD">
              <property role="3oM_SC" value="If" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiU" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiV" role="1PaTwD">
              <property role="3oM_SC" value="actual" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiW" role="1PaTwD">
              <property role="3oM_SC" value="iterator" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiX" role="1PaTwD">
              <property role="3oM_SC" value="still" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiY" role="1PaTwD">
              <property role="3oM_SC" value="has" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TiZ" role="1PaTwD">
              <property role="3oM_SC" value="elements," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj0" role="1PaTwD">
              <property role="3oM_SC" value="they're" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBG" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tj1" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tj2" role="1PaTwD">
              <property role="3oM_SC" value="extras." />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj3" role="1PaTwD">
              <property role="3oM_SC" value="If" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj4" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj5" role="1PaTwD">
              <property role="3oM_SC" value="required" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj6" role="1PaTwD">
              <property role="3oM_SC" value="iterator" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj7" role="1PaTwD">
              <property role="3oM_SC" value="has" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj8" role="1PaTwD">
              <property role="3oM_SC" value="elements," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tj9" role="1PaTwD">
              <property role="3oM_SC" value="they're" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tja" role="1PaTwD">
              <property role="3oM_SC" value="missing" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjb" role="1PaTwD">
              <property role="3oM_SC" value="elements." />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyuZ" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_yU" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP_yT" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_yV" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyvg" role="9aQIa">
            <node concept="2OqwBi" id="5JQC2dmP_yY" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmP_yX" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_yZ" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyvj" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyvk" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyvl" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPyv_" resolve="failWithBadResultsAndSuffix" />
                  <node concept="Xl_RD" id="5JQC2dmPyvm" role="37wK5m">
                    <property role="Xl_RC" value="contains exactly" />
                  </node>
                  <node concept="2YIFZM" id="5JQC2dmQaEY" role="37wK5m">
                    <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                    <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                    <node concept="37vLTw" id="5JQC2dmQaEZ" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPyvp" role="37wK5m">
                    <property role="Xl_RC" value="is missing" />
                  </node>
                  <node concept="2YIFZM" id="5JQC2dmQaF0" role="37wK5m">
                    <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                    <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                    <node concept="2YIFZM" id="5JQC2dnLTkq" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <node concept="2YIFZM" id="5JQC2dnscyU" role="37wK5m">
                        <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                        <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                        <node concept="37vLTw" id="5JQC2dnscyV" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPysw" resolve="requiredIter" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyvu" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPysi" resolve="failSuffix" />
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPyvv" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPyvw" role="3cqZAk">
                  <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyv2" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyv3" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyv4" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPyv_" resolve="failWithBadResultsAndSuffix" />
                <node concept="Xl_RD" id="5JQC2dmPyv5" role="37wK5m">
                  <property role="Xl_RC" value="contains exactly" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaF7" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                  <node concept="37vLTw" id="5JQC2dmQaF8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPysc" resolve="required" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmPyv8" role="37wK5m">
                  <property role="Xl_RC" value="has unexpected items" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaF9" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                  <node concept="2YIFZM" id="5JQC2dnGP8r" role="37wK5m">
                    <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                    <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                    <node concept="2YIFZM" id="5JQC2dnGP8s" role="37wK5m">
                      <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                      <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                      <node concept="37vLTw" id="5JQC2dnGP8t" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPysp" resolve="actualIter" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPyvd" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPysi" resolve="failSuffix" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPyve" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPyvf" role="3cqZAk">
                <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBI" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tjc" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tjd" role="1PaTwD">
              <property role="3oM_SC" value="If" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tje" role="1PaTwD">
              <property role="3oM_SC" value="neither" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjf" role="1PaTwD">
              <property role="3oM_SC" value="iterator" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjg" role="1PaTwD">
              <property role="3oM_SC" value="has" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjh" role="1PaTwD">
              <property role="3oM_SC" value="elements," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tji" role="1PaTwD">
              <property role="3oM_SC" value="we" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjj" role="1PaTwD">
              <property role="3oM_SC" value="reached" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjk" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjl" role="1PaTwD">
              <property role="3oM_SC" value="end" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjm" role="1PaTwD">
              <property role="3oM_SC" value="and" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjn" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjo" role="1PaTwD">
              <property role="3oM_SC" value="elements" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjp" role="1PaTwD">
              <property role="3oM_SC" value="were" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjq" role="1PaTwD">
              <property role="3oM_SC" value="in" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPyBK" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tjr" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tjs" role="1PaTwD">
              <property role="3oM_SC" value="order," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjt" role="1PaTwD">
              <property role="3oM_SC" value="so" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tju" role="1PaTwD">
              <property role="3oM_SC" value="inOrder()" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjv" role="1PaTwD">
              <property role="3oM_SC" value="can" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjw" role="1PaTwD">
              <property role="3oM_SC" value="just" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tjx" role="1PaTwD">
              <property role="3oM_SC" value="succeed." />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPyvx" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPyvy" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPyjW" resolve="IN_ORDER" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyvz" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyv$" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyv_" role="jymVt">
      <property role="TrG5h" value="failWithBadResultsAndSuffix" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyvA" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyvB" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyvC" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyvD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyvE" role="3clF46">
        <property role="TrG5h" value="failVerb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyvF" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyvG" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyvH" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyvI" role="3clF46">
        <property role="TrG5h" value="suffix" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyvJ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyvK" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyvL" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyvM" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
            <node concept="Xl_RD" id="5JQC2dmPyvN" role="37wK5m">
              <property role="Xl_RC" value="Not true that %s %s &lt;%s&gt;. It %s &lt;%s&gt;%s" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPyvO" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyvP" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyvA" resolve="verb" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyvQ" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyvC" resolve="expected" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyvR" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyvE" resolve="failVerb" />
            </node>
            <node concept="3K4zz7" id="5JQC2dmPyvY" role="37wK5m">
              <node concept="1eOMI4" id="5JQC2dmPyvV" role="3K4Cdx">
                <node concept="3clFbC" id="5JQC2dmPyvS" role="1eOMHV">
                  <node concept="37vLTw" id="5JQC2dmPyvT" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPyvG" resolve="actual" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPyvU" role="3uHU7w" />
                </node>
              </node>
              <node concept="Xl_RD" id="5JQC2dmPyvW" role="3K4E3e">
                <property role="Xl_RC" value="null reference" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyvX" role="3K4GZi">
                <ref role="3cqZAo" node="5JQC2dmPyvG" resolve="actual" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPyvZ" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyvI" resolve="suffix" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPyw0" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyw1" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyw2" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyBL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBM" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails with the bad results and a suffix." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBO" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBQ" role="1dT_Ay">
            <property role="1dT_AB" value=" @param verb the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBS" role="1dT_Ay">
            <property role="1dT_AB" value=" @param expected the expectations against which the subject is compared" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBU" role="1dT_Ay">
            <property role="1dT_AB" value=" @param failVerb the failure of the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBW" role="1dT_Ay">
            <property role="1dT_AB" value=" @param actual the actual value the subject was compared against" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyBX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyBY" role="1dT_Ay">
            <property role="1dT_AB" value=" @param suffix a suffix to append to the failure message" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyw3" role="jymVt">
      <property role="TrG5h" value="containsNoneOf" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyw4" role="3clF46">
        <property role="TrG5h" value="firstExcluded" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyw5" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyw6" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyw7" role="3clF46">
        <property role="TrG5h" value="secondExcluded" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyw8" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyw9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPywa" role="3clF46">
        <property role="TrG5h" value="restOfExcluded" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPywb" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPywd" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPywc" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPywe" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPywf" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPywg" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyw_" resolve="containsNone" />
            <node concept="Xl_RD" id="5JQC2dmPywh" role="37wK5m">
              <property role="Xl_RC" value="contains none of" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaFg" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
              <node concept="37vLTw" id="5JQC2dmQaFh" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyw4" resolve="firstExcluded" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaFi" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyw7" resolve="secondExcluded" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQaFj" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPywa" resolve="restOfExcluded" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPywm" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPywn" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPywo" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyBZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC0" role="1dT_Ay">
            <property role="1dT_AB" value="Attests that a actual iterable contains none of the excluded objects or fails. (Duplicates are" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyC1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC2" role="1dT_Ay">
            <property role="1dT_AB" value="irrelevant to this test, which fails if any of the actual elements equal any of the excluded.)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPywp" role="jymVt">
      <property role="TrG5h" value="containsNoneIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPywq" role="3clF46">
        <property role="TrG5h" value="excluded" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPywr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPyws" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPywt" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPywu" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPywv" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyw_" resolve="containsNone" />
            <node concept="Xl_RD" id="5JQC2dmPyww" role="37wK5m">
              <property role="Xl_RC" value="contains no elements in" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPywx" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPywq" resolve="excluded" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPywy" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPywz" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyw$" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyC3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC4" role="1dT_Ay">
            <property role="1dT_AB" value="Attests that a actual iterable contains none of the elements contained in the excluded iterable" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyC5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC6" role="1dT_Ay">
            <property role="1dT_AB" value="or fails. (Duplicates are irrelevant to this test, which fails if any of the actual elements" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyC7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC8" role="1dT_Ay">
            <property role="1dT_AB" value="equal any of the excluded.)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyw_" role="jymVt">
      <property role="TrG5h" value="containsNone" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPywA" role="3clF46">
        <property role="TrG5h" value="failVerb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPywB" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPywC" role="3clF46">
        <property role="TrG5h" value="excluded" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPywD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPywE" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPywF" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPywH" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPywG" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="3uibUv" id="5JQC2dmPywI" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3qTvmN" id="5JQC2dmPywJ" role="11_B2D" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQaFk" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
              <node concept="1rXfSq" id="5JQC2dmQaFl" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPywN" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPywM" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="present" />
            <node concept="3uibUv" id="5JQC2dmPywO" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3uibUv" id="5JQC2dmPywP" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_z2" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmP_z7" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="5JQC2dngYir" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPywS" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnbC74" role="1DdaDG">
            <ref role="1Pybhc" to="3o3z:~Sets" resolve="Sets" />
            <ref role="37wK5l" to="3o3z:~Sets.newLinkedHashSet(java.lang.Iterable):java.util.LinkedHashSet" resolve="newLinkedHashSet" />
            <node concept="37vLTw" id="5JQC2dnbC75" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPywC" resolve="excluded" />
            </node>
          </node>
          <node concept="3cpWsn" id="5JQC2dmPyx3" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="3uibUv" id="5JQC2dmPyx5" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPywU" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPywV" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_zc" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmP_zb" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPywG" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_zd" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Collection.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmP_ze" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyx3" resolve="item" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPywZ" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPyx0" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_zh" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmP_zg" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPywM" resolve="present" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_zi" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                      <node concept="37vLTw" id="5JQC2dmP_zj" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyx3" resolve="item" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyx8" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyx9" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmP_zm" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmP_zl" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPywM" resolve="present" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_zn" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyxc" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyxd" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyxe" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="37vLTw" id="5JQC2dmPyxf" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPywA" resolve="failVerb" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaFm" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                  <node concept="37vLTw" id="5JQC2dmQaFn" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPywC" resolve="excluded" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmPyxi" role="37wK5m">
                  <property role="Xl_RC" value="contains" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaFo" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                  <ref role="37wK5l" node="5JQC2dmPwh0" resolve="annotateEmptyStrings" />
                  <node concept="37vLTw" id="5JQC2dmQaFp" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPywM" resolve="present" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyxl" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyxm" role="3clF45" />
    </node>
    <node concept="312cEu" id="5JQC2dmPy3y" role="jymVt">
      <property role="2bfB8j" value="true" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <property role="TrG5h" value="NotInOrder" />
      <node concept="3Tm6S6" id="5JQC2dmPy3z" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPy3$" role="EKbjA">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPy4b" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyC9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCa" role="1dT_Ay">
            <property role="1dT_AB" value="Ordered implementation that always fails. " />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPy3_" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="check" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPy3B" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPy3C" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmPy3D" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="required" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPy3F" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPy3G" role="11_B2D" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPy3H" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPy3I" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPy3J" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPy3K" role="3clF46">
          <property role="TrG5h" value="check" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy3L" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy3M" role="3clF46">
          <property role="TrG5h" value="required" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy3N" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qTvmN" id="5JQC2dmPy3O" role="11_B2D" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy3P" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPy3Q" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPy3R" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPy3S" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPy3T" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPy3U" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPy3_" resolve="check" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPy3V" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPy3K" resolve="check" />
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPy3W" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPy3X" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPy3Y" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPy3Z" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPy40" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPy3D" resolve="required" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPy41" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPy3M" resolve="required" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy42" role="jymVt">
        <property role="TrG5h" value="inOrder" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPy43" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPy44" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPy45" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy46" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
              <node concept="37vLTw" id="5JQC2dmPy47" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy3_" resolve="check" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPy48" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy3D" resolve="required" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPy49" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPy4a" role="3clF45" />
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPyjW" role="jymVt">
      <property role="TrG5h" value="IN_ORDER" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPyjX" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPyjY" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPyjZ" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPyk0" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmPzCc" resolve="Ordered" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPyk1" role="jymVt">
              <property role="TrG5h" value="inOrder" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPyk2" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="3clFbS" id="5JQC2dmPyk3" role="3clF47" />
              <node concept="3Tm1VV" id="5JQC2dmPyk4" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPyk5" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyk6" role="1B3o_S" />
      <node concept="z59LJ" id="5JQC2dmPyk7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCc" role="1dT_Ay">
            <property role="1dT_AB" value="Ordered implementation that does nothing because it's already known to be true. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPyk8" role="jymVt">
      <property role="TrG5h" value="ALREADY_FAILED" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPyk9" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPyka" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPykb" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPykc" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmPzCc" resolve="Ordered" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPykd" role="jymVt">
              <property role="TrG5h" value="inOrder" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPyke" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="3clFbS" id="5JQC2dmPykf" role="3clF47" />
              <node concept="3Tm1VV" id="5JQC2dmPykg" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPykh" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyki" role="1B3o_S" />
      <node concept="z59LJ" id="5JQC2dmPykj" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCe" role="1dT_Ay">
            <property role="1dT_AB" value="Ordered implementation that does nothing because an earlier check already caused a failure. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyxn" role="jymVt">
      <property role="TrG5h" value="isStrictlyOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyxo" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyxp" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyxq" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyxv" resolve="isStrictlyOrdered" />
            <node concept="2YIFZM" id="5JQC2dntQoL" role="37wK5m">
              <ref role="37wK5l" to="3o3z:~Ordering.natural():com.google.common.collect.Ordering" resolve="natural" />
              <ref role="1Pybhc" to="3o3z:~Ordering" resolve="Ordering" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyxs" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyxt" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyxu" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCg" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the iterable is not strictly ordered, according to the natural ordering of its" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCi" role="1dT_Ay">
            <property role="1dT_AB" value=" elements. Strictly ordered means that each element in the iterable is &lt;i&gt;strictly&lt;/i&gt; greater" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCk" role="1dT_Ay">
            <property role="1dT_AB" value=" than the element that preceded it." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCm" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCo" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws ClassCastException if any pair of elements is not mutually Comparable" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCq" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws NullPointerException if any element is null" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyxv" role="jymVt">
      <property role="TrG5h" value="isStrictlyOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyxw" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
        <node concept="2B6LJw" id="5JQC2dmPyxx" role="2B76xF">
          <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
          <node concept="2BsdOp" id="5JQC2dmPyxz" role="2B70Vg">
            <node concept="Xl_RD" id="5JQC2dmPyxy" role="2BsfMF">
              <property role="Xl_RC" value="unchecked" />
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyx$" role="3clF46">
        <property role="TrG5h" value="comparator" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyx_" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Comparator" resolve="Comparator" />
          <node concept="3qTvmN" id="5JQC2dmPyxA" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyxB" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyxC" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dntqg9" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dntqga" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyx$" resolve="comparator" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPyxF" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyxG" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyzr" resolve="pairwiseCheck" />
            <node concept="2ShNRf" id="5JQC2dmPyxH" role="37wK5m">
              <node concept="YeOm9" id="5JQC2dmPyxI" role="2ShVmc">
                <node concept="1Y3b0j" id="5JQC2dmPyxJ" role="YeSDq">
                  <property role="1sVAO0" value="false" />
                  <property role="1EXbeo" value="false" />
                  <ref role="1Y3XeK" node="5JQC2dmPy4c" resolve="IterableSubject.PairwiseChecker" />
                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                  <node concept="3clFb_" id="5JQC2dmPyxK" role="jymVt">
                    <property role="TrG5h" value="check" />
                    <property role="DiZV1" value="false" />
                    <property role="od$2w" value="false" />
                    <node concept="2AHcQZ" id="5JQC2dmPyxL" role="2AJF6D">
                      <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                    </node>
                    <node concept="37vLTG" id="5JQC2dmPyxM" role="3clF46">
                      <property role="TrG5h" value="prev" />
                      <property role="3TUv4t" value="false" />
                      <node concept="3uibUv" id="5JQC2dmPyxN" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="37vLTG" id="5JQC2dmPyxO" role="3clF46">
                      <property role="TrG5h" value="next" />
                      <property role="3TUv4t" value="false" />
                      <node concept="3uibUv" id="5JQC2dmPyxP" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyxQ" role="3clF47">
                      <node concept="3clFbJ" id="5JQC2dmPyxR" role="3cqZAp">
                        <node concept="2d3UOw" id="5JQC2dmPyxS" role="3clFbw">
                          <node concept="2OqwBi" id="5JQC2dmPyxT" role="3uHU7B">
                            <node concept="1eOMI4" id="5JQC2dmPyxY" role="2Oq$k0">
                              <node concept="10QFUN" id="5JQC2dmPyxU" role="1eOMHV">
                                <node concept="37vLTw" id="5JQC2dmPyxV" role="10QFUP">
                                  <ref role="3cqZAo" node="5JQC2dmPyx$" resolve="comparator" />
                                </node>
                                <node concept="3uibUv" id="5JQC2dmPyxW" role="10QFUM">
                                  <ref role="3uigEE" to="33ny:~Comparator" resolve="Comparator" />
                                  <node concept="3uibUv" id="5JQC2dmPyxX" role="11_B2D">
                                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPyxZ" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Comparator.compare(java.lang.Object,java.lang.Object):int" resolve="compare" />
                              <node concept="37vLTw" id="5JQC2dmPyy0" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyxM" resolve="prev" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyy1" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyxO" resolve="next" />
                              </node>
                            </node>
                          </node>
                          <node concept="3cmrfG" id="5JQC2dmPyy2" role="3uHU7w">
                            <property role="3cmrfH" value="0" />
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPyy4" role="3clFbx">
                          <node concept="3clFbF" id="5JQC2dmPyy5" role="3cqZAp">
                            <node concept="1rXfSq" id="5JQC2dmPyy6" role="3clFbG">
                              <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                              <node concept="Xl_RD" id="5JQC2dmPyy7" role="37wK5m">
                                <property role="Xl_RC" value="is strictly ordered" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyy8" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyxM" resolve="prev" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyy9" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyxO" resolve="next" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3Tm1VV" id="5JQC2dmPyya" role="1B3o_S" />
                    <node concept="3cqZAl" id="5JQC2dmPyyb" role="3clF45" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyyc" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyyd" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyye" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCs" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the iterable is not strictly ordered, according to the given comparator. Strictly" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCu" role="1dT_Ay">
            <property role="1dT_AB" value=" ordered means that each element in the iterable is &lt;i&gt;strictly&lt;/i&gt; greater than the element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCw" role="1dT_Ay">
            <property role="1dT_AB" value=" that preceded it." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCy" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyC$" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws ClassCastException if any pair of elements is not mutually Comparable" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyyf" role="jymVt">
      <property role="TrG5h" value="isOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyyg" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyyh" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyyi" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyyv" resolve="isOrdered" />
            <node concept="2YIFZM" id="5JQC2dndmJk" role="37wK5m">
              <ref role="1Pybhc" to="3o3z:~Ordering" resolve="Ordering" />
              <ref role="37wK5l" to="3o3z:~Ordering.natural():com.google.common.collect.Ordering" resolve="natural" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyyk" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyyl" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyym" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyC_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCA" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the iterable is not ordered, according to the natural ordering of its elements." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCC" role="1dT_Ay">
            <property role="1dT_AB" value=" Ordered means that each element in the iterable is greater than or equal to the element that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCE" role="1dT_Ay">
            <property role="1dT_AB" value=" preceded it." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCG" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCI" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws ClassCastException if any pair of elements is not mutually Comparable" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCK" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws NullPointerException if any element is null" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyyn" role="jymVt">
      <property role="TrG5h" value="isPartiallyOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyyo" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyyp" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyyq" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyyr" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyyf" resolve="isOrdered" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyys" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyyt" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyyu" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCM" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isOrdered} instead. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyyv" role="jymVt">
      <property role="TrG5h" value="isOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyyw" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
        <node concept="2B6LJw" id="5JQC2dmPyyx" role="2B76xF">
          <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
          <node concept="2BsdOp" id="5JQC2dmPyyz" role="2B70Vg">
            <node concept="Xl_RD" id="5JQC2dmPyyy" role="2BsfMF">
              <property role="Xl_RC" value="unchecked" />
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyy$" role="3clF46">
        <property role="TrG5h" value="comparator" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyy_" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Comparator" resolve="Comparator" />
          <node concept="3qTvmN" id="5JQC2dmPyyA" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyyB" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyyC" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnyOLg" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dnyOLh" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyy$" resolve="comparator" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPyyF" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyyG" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyzr" resolve="pairwiseCheck" />
            <node concept="2ShNRf" id="5JQC2dmPyyH" role="37wK5m">
              <node concept="YeOm9" id="5JQC2dmPyyI" role="2ShVmc">
                <node concept="1Y3b0j" id="5JQC2dmPyyJ" role="YeSDq">
                  <property role="1sVAO0" value="false" />
                  <property role="1EXbeo" value="false" />
                  <ref role="1Y3XeK" node="5JQC2dmPy4c" resolve="IterableSubject.PairwiseChecker" />
                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                  <node concept="3clFb_" id="5JQC2dmPyyK" role="jymVt">
                    <property role="TrG5h" value="check" />
                    <property role="DiZV1" value="false" />
                    <property role="od$2w" value="false" />
                    <node concept="2AHcQZ" id="5JQC2dmPyyL" role="2AJF6D">
                      <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                    </node>
                    <node concept="37vLTG" id="5JQC2dmPyyM" role="3clF46">
                      <property role="TrG5h" value="prev" />
                      <property role="3TUv4t" value="false" />
                      <node concept="3uibUv" id="5JQC2dmPyyN" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="37vLTG" id="5JQC2dmPyyO" role="3clF46">
                      <property role="TrG5h" value="next" />
                      <property role="3TUv4t" value="false" />
                      <node concept="3uibUv" id="5JQC2dmPyyP" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyyQ" role="3clF47">
                      <node concept="3clFbJ" id="5JQC2dmPyyR" role="3cqZAp">
                        <node concept="3eOSWO" id="5JQC2dmPyyS" role="3clFbw">
                          <node concept="2OqwBi" id="5JQC2dmPyyT" role="3uHU7B">
                            <node concept="1eOMI4" id="5JQC2dmPyyY" role="2Oq$k0">
                              <node concept="10QFUN" id="5JQC2dmPyyU" role="1eOMHV">
                                <node concept="37vLTw" id="5JQC2dmPyyV" role="10QFUP">
                                  <ref role="3cqZAo" node="5JQC2dmPyy$" resolve="comparator" />
                                </node>
                                <node concept="3uibUv" id="5JQC2dmPyyW" role="10QFUM">
                                  <ref role="3uigEE" to="33ny:~Comparator" resolve="Comparator" />
                                  <node concept="3uibUv" id="5JQC2dmPyyX" role="11_B2D">
                                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPyyZ" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Comparator.compare(java.lang.Object,java.lang.Object):int" resolve="compare" />
                              <node concept="37vLTw" id="5JQC2dmPyz0" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyyM" resolve="prev" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyz1" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyyO" resolve="next" />
                              </node>
                            </node>
                          </node>
                          <node concept="3cmrfG" id="5JQC2dmPyz2" role="3uHU7w">
                            <property role="3cmrfH" value="0" />
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPyz4" role="3clFbx">
                          <node concept="3clFbF" id="5JQC2dmPyz5" role="3cqZAp">
                            <node concept="1rXfSq" id="5JQC2dmPyz6" role="3clFbG">
                              <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                              <node concept="Xl_RD" id="5JQC2dmPyz7" role="37wK5m">
                                <property role="Xl_RC" value="is ordered" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyz8" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyyM" resolve="prev" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmPyz9" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPyyO" resolve="next" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3Tm1VV" id="5JQC2dmPyza" role="1B3o_S" />
                    <node concept="3cqZAl" id="5JQC2dmPyzb" role="3clF45" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyzc" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyzd" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyze" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCO" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the iterable is not ordered, according to the given comparator. Ordered means that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCQ" role="1dT_Ay">
            <property role="1dT_AB" value=" each element in the iterable is greater than or equal to the element that preceded it." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCS" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCU" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws ClassCastException if any pair of elements is not mutually Comparable" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyzf" role="jymVt">
      <property role="TrG5h" value="isPartiallyOrdered" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyzg" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyzh" role="3clF46">
        <property role="TrG5h" value="comparator" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyzi" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Comparator" resolve="Comparator" />
          <node concept="3qTvmN" id="5JQC2dmPyzj" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyzk" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyzl" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyzm" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPyyv" resolve="isOrdered" />
            <node concept="37vLTw" id="5JQC2dmPyzn" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyzh" resolve="comparator" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyzo" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyzp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyzq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCW" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isOrdered(Comparator)} instead. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3HP615" id="5JQC2dmPy4c" role="jymVt">
      <property role="TrG5h" value="PairwiseChecker" />
      <property role="2bfB8j" value="true" />
      <node concept="3Tm6S6" id="5JQC2dmPy4d" role="1B3o_S" />
      <node concept="3clFb_" id="5JQC2dmPy4e" role="jymVt">
        <property role="TrG5h" value="check" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3Tm1VV" id="5JQC2dmPy4f" role="1B3o_S" />
        <node concept="37vLTG" id="5JQC2dmPy4g" role="3clF46">
          <property role="TrG5h" value="prev" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy4h" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy4i" role="3clF46">
          <property role="TrG5h" value="next" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy4j" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy4k" role="3clF47" />
        <node concept="3cqZAl" id="5JQC2dmPy4l" role="3clF45" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyzr" role="jymVt">
      <property role="TrG5h" value="pairwiseCheck" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyzs" role="3clF46">
        <property role="TrG5h" value="checker" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyzt" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPy4c" resolve="IterableSubject.PairwiseChecker" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyzu" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPyzw" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyzv" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="iterator" />
            <node concept="3uibUv" id="5JQC2dmPyzx" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
              <node concept="3qTvmN" id="5JQC2dmPyzy" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPyzz" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPyz$" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyz_" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Iterable.iterator():java.util.Iterator" resolve="iterator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyzA" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP_zs" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP_zr" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPyzv" resolve="iterator" />
            </node>
            <node concept="liA8E" id="5JQC2dmP_zt" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyzD" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPyzF" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPyzE" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="prev" />
                <node concept="3uibUv" id="5JQC2dmPyzG" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_zw" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP_zv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyzv" resolve="iterator" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_zx" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="2$JKZl" id="5JQC2dmPyzX" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP_z$" role="2$JKZa">
                <node concept="37vLTw" id="5JQC2dmP_zz" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyzv" resolve="iterator" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_z_" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyzK" role="2LFqv$">
                <node concept="3cpWs8" id="5JQC2dmPyzM" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPyzL" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="next" />
                    <node concept="3uibUv" id="5JQC2dmPyzN" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmP_zC" role="33vP2m">
                      <node concept="37vLTw" id="5JQC2dmP_zB" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyzv" resolve="iterator" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_zD" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPyzP" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmP_zG" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmP_zF" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyzs" resolve="checker" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_zH" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPy4e" resolve="check" />
                      <node concept="37vLTw" id="5JQC2dmP_zI" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyzE" resolve="prev" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmP_zJ" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyzL" resolve="next" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPyzT" role="3cqZAp">
                  <node concept="37vLTI" id="5JQC2dmPyzU" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPyzV" role="37vLTJ">
                      <ref role="3cqZAo" node="5JQC2dmPyzE" resolve="prev" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyzW" role="37vLTx">
                      <ref role="3cqZAo" node="5JQC2dmPyzL" resolve="next" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPyzY" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyzZ" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPy$0" role="jymVt">
      <property role="TrG5h" value="comparingElementsUsing" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPy$1" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPy$2" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPy$3" role="3clF46">
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPy$4" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPy$5" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPy$1" resolve="A" />
          </node>
          <node concept="16syzq" id="5JQC2dmPy$6" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPy$2" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPy$7" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPy$8" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP_zK" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmP__X" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPy4y" resolve="IterableSubject.UsingCorrespondence" />
              <node concept="37vLTw" id="5JQC2dmP__Y" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy$3" resolve="correspondence" />
              </node>
              <node concept="16syzq" id="5JQC2dmP__Z" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPy$1" resolve="A" />
              </node>
              <node concept="16syzq" id="5JQC2dmP_A0" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPy$2" resolve="E" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPy$d" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPy$e" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy4m" resolve="IterableSubject.UsingCorrespondence" />
        <node concept="16syzq" id="5JQC2dmPy$f" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPy$1" resolve="A" />
        </node>
        <node concept="16syzq" id="5JQC2dmPy$g" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPy$2" resolve="E" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPy$h" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyCX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyCY" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual elements (i.e. the elements of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyCZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD0" role="1dT_Ay">
            <property role="1dT_AB" value=" the {@link Iterable} under test) are compared to expected elements using the given {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyD1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD2" role="1dT_Ay">
            <property role="1dT_AB" value=" Correspondence}. The actual elements must be of type {@code A}, the expected elements must be" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyD3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD4" role="1dT_Ay">
            <property role="1dT_AB" value=" of type {@code E}. The proposition is actually executed by continuing the method chain. For" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyD5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD6" role="1dT_Ay">
            <property role="1dT_AB" value=" example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyD7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD8" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyD9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDa" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDc" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualIterable).comparingElementsUsing(correspondence).contains(expected);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDe" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDg" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDi" role="1dT_Ay">
            <property role="1dT_AB" value=" where {@code actualIterable} is an {@code Iterable&lt;A&gt;} (or, more generally, an {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDk" role="1dT_Ay">
            <property role="1dT_AB" value=" Iterable&lt;? extends A&gt;}), {@code correspondence} is a {@code Correspondence&lt;A, E&gt;}, and {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDm" role="1dT_Ay">
            <property role="1dT_AB" value=" expected} is an {@code E}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDo" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDq" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Any of the methods on the returned object may throw {@link ClassCastException} if they" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDs" role="1dT_Ay">
            <property role="1dT_AB" value=" encounter an actual element that is not of type {@code A}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPy4m" role="jymVt">
      <property role="TrG5h" value="UsingCorrespondence" />
      <property role="2bfB8j" value="true" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPy4n" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPy4o" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPy4p" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPyjR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyDt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDu" role="1dT_Ay">
            <property role="1dT_AB" value="A partially specified proposition in which the actual elements (normally the elements of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDw" role="1dT_Ay">
            <property role="1dT_AB" value="{@link Iterable} under test) are compared to expected elements using a {@link Correspondence}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyDy" role="1dT_Ay">
            <property role="1dT_AB" value="The expected elements are of type {@code E}. Call methods on this object to actually execute" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyDz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyD$" role="1dT_Ay">
            <property role="1dT_AB" value="the proposition." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPy4q" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPy4s" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="3qUtgH" id="5JQC2dmPy4u" role="11_B2D">
            <node concept="16syzq" id="5JQC2dmPy4t" role="3qUvdb">
              <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
            </node>
          </node>
          <node concept="3qUtgH" id="5JQC2dmPy4w" role="11_B2D">
            <node concept="16syzq" id="5JQC2dmPy4v" role="3qUvdb">
              <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPy4x" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPy4y" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPy4z" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPy4$" role="3clF46">
          <property role="TrG5h" value="correspondence" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy4_" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
            <node concept="3qUtgH" id="5JQC2dmPy4B" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy4A" role="3qUvdb">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
            <node concept="3qUtgH" id="5JQC2dmPy4D" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy4C" role="3qUvdb">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy4E" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPy4F" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPy4G" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPy4H" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPy4I" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPy4J" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPy4q" resolve="correspondence" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dnLRj2" role="37vLTx">
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <node concept="37vLTw" id="5JQC2dnLRHP" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy4$" resolve="correspondence" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="2tJIrI" id="wYVAq3jLb$" role="jymVt" />
      <node concept="3clFbW" id="wYVAq3l0Qa" role="jymVt">
        <node concept="3cqZAl" id="wYVAq3l0Qc" role="3clF45" />
        <node concept="3clFbS" id="wYVAq3l0Qe" role="3clF47">
          <node concept="3clFbF" id="wYVAq3leAD" role="3cqZAp">
            <node concept="37vLTI" id="wYVAq3lfrr" role="3clFbG">
              <node concept="10Nm6u" id="wYVAq3lf_D" role="37vLTx" />
              <node concept="2OqwBi" id="wYVAq3leCY" role="37vLTJ">
                <node concept="Xjq3P" id="wYVAq3leAB" role="2Oq$k0" />
                <node concept="2OwXpG" id="wYVAq3lf8b" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPy4q" resolve="correspondence" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="2tJIrI" id="wYVAq3kNKJ" role="jymVt" />
      <node concept="3clFb_" id="5JQC2dmPy4M" role="jymVt">
        <property role="TrG5h" value="contains" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy4N" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPy4O" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPy4P" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy4Q" role="3clF47">
          <node concept="1DcWWT" id="5JQC2dmPy4R" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy54" role="1DdaDG">
              <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
            </node>
            <node concept="3cpWsn" id="5JQC2dmPy51" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actual" />
              <node concept="16syzq" id="5JQC2dmPy53" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy4T" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmPy4U" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_Cc" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_Cb" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Cd" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                    <node concept="37vLTw" id="5JQC2dmP_Ce" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPy51" resolve="actual" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_Cf" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPy4N" resolve="expected" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPy4Z" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dmPy50" role="3cqZAp" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPy55" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy56" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
              <node concept="3cpWs3" id="5JQC2dmPy57" role="37wK5m">
                <node concept="Xl_RD" id="5JQC2dmPy58" role="3uHU7B">
                  <property role="Xl_RC" value="contains at least one element that " />
                </node>
                <node concept="37vLTw" id="5JQC2dmPy59" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPy5a" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy4N" resolve="expected" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPy5b" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPy5c" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPy5d" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyD_" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDA" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that the subject contains at least one element that corresponds to the given expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDC" role="1dT_Ay">
              <property role="1dT_AB" value="element." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy5e" role="jymVt">
        <property role="TrG5h" value="doesNotContain" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy5f" role="3clF46">
          <property role="TrG5h" value="excluded" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPy5g" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPy5h" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy5i" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPy5k" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy5j" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="matchingElements" />
              <node concept="3uibUv" id="5JQC2dmPy5l" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="16syzq" id="5JQC2dmPy5m" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
              <node concept="2ShNRf" id="5JQC2dmP_Cg" role="33vP2m">
                <node concept="1pGfFk" id="5JQC2dmP_Ch" role="2ShVmc">
                  <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                  <node concept="16syzq" id="5JQC2dnhk0$" role="1pMfVU">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPy5p" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy5C" role="1DdaDG">
              <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
            </node>
            <node concept="3cpWsn" id="5JQC2dmPy5_" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actual" />
              <node concept="16syzq" id="5JQC2dmPy5B" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy5r" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmPy5s" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_Co" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_Cn" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Cp" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                    <node concept="37vLTw" id="5JQC2dmP_Cq" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPy5_" resolve="actual" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_Cr" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPy5f" resolve="excluded" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPy5x" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPy5y" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_Cx" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP_Cw" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPy5j" resolve="matchingElements" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_Cy" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                        <node concept="37vLTw" id="5JQC2dmP_Cz" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPy5_" resolve="actual" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPy5D" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPy5E" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_CD" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_CC" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy5j" resolve="matchingElements" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_CE" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy5H" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPy5I" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPy5J" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPy5K" role="37wK5m">
                    <property role="Xl_RC" value="%s should not have contained an element that %s &lt;%s&gt;. It contained the following such elements: &lt;%s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPy5L" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPy5M" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPy5N" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy5f" resolve="excluded" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPy5O" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy5j" resolve="matchingElements" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPy5P" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPy5Q" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPy5R" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyDD" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDE" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that none of the actual elements correspond to the given element. " />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy5S" role="jymVt">
        <property role="TrG5h" value="containsExactly" />
        <property role="DiZV1" value="true" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPy5T" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SafeVarargs" resolve="SafeVarargs" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPy5V" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPy5W" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="8X2XB" id="5JQC2dmPy5Y" role="1tU5fm">
            <node concept="16syzq" id="5JQC2dmPy5X" role="8Xvag">
              <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy5Z" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPy60" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy61" role="3cqZAk">
              <ref role="37wK5l" node="5JQC2dmPy6g" resolve="containsExactlyElementsIn" />
              <node concept="3K4zz7" id="5JQC2dmPy6c" role="37wK5m">
                <node concept="1eOMI4" id="5JQC2dmPy65" role="3K4Cdx">
                  <node concept="3clFbC" id="5JQC2dmPy62" role="1eOMHV">
                    <node concept="37vLTw" id="5JQC2dmPy63" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPy5V" resolve="expected" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmPy64" role="3uHU7w" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dnDN5W" role="3K4E3e">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="10QFUN" id="5JQC2dmPy67" role="37wK5m">
                    <node concept="10Nm6u" id="5JQC2dmPy68" role="10QFUP" />
                    <node concept="16syzq" id="5JQC2dmPy69" role="10QFUM">
                      <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                    </node>
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmQaFq" role="3K4GZi">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                  <node concept="37vLTw" id="5JQC2dmQaFr" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy5V" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPy6d" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPy6e" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPy6f" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyDF" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDG" role="1dT_Ay">
              <property role="1dT_AB" value=" Attests that subject contains exactly elements that correspond to the expected elements, i.e." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDI" role="1dT_Ay">
              <property role="1dT_AB" value=" that there is a 1:1 mapping between the actual elements and the expected elements where each" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDK" role="1dT_Ay">
              <property role="1dT_AB" value=" pair of elements correspond." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDM" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDO" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDQ" role="1dT_Ay">
              <property role="1dT_AB" value=" on the object returned by this method." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy6g" role="jymVt">
        <property role="TrG5h" value="containsExactlyElementsIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy6i" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy6j" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPy6l" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy6k" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy6m" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPy6o" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy6n" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actualList" />
              <node concept="3uibUv" id="5JQC2dmPy6p" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="16syzq" id="5JQC2dmPy6q" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFs" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgC" resolve="iterableToList" />
                <node concept="1rXfSq" id="5JQC2dmQaFt" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPy6u" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy6t" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedList" />
              <node concept="3uibUv" id="5JQC2dmPy6v" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPy6x" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPy6w" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFu" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgC" resolve="iterableToList" />
                <node concept="37vLTw" id="5JQC2dmQaFv" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy6i" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPy6$" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy6_" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPy7o" resolve="correspondInOrderExactly" />
              <node concept="2OqwBi" id="5JQC2dmP_CO" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmP_CN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy6n" resolve="actualList" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_CP" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.iterator():java.util.Iterator" resolve="iterator" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_CV" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmP_CU" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy6t" resolve="expectedList" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_CW" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.iterator():java.util.Iterator" resolve="iterator" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy6D" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPy6E" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFO" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyjW" resolve="IN_ORDER" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPy6H" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy6G" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="candidateMapping" />
              <node concept="3uibUv" id="5JQC2dmPy6I" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~ImmutableSetMultimap" resolve="ImmutableSetMultimap" />
                <node concept="3uibUv" id="5JQC2dmPy6J" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPy6K" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPy6L" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPy8g" resolve="findCandidateMapping" />
                <node concept="37vLTw" id="5JQC2dmPy6M" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy6n" resolve="actualList" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPy6N" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy6t" resolve="expectedList" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPy6O" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy6P" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPy9d" resolve="failIfCandidateMappingHasMissingOrExtra" />
              <node concept="37vLTw" id="5JQC2dmPy6Q" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6n" resolve="actualList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPy6R" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6t" resolve="expectedList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPy6S" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6G" resolve="candidateMapping" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy6U" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPy6V" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFP" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPy6Y" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy6X" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="maximalOneToOneMapping" />
              <node concept="3uibUv" id="5JQC2dmPy6Z" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
                <node concept="3uibUv" id="5JQC2dmPy70" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPy71" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPy72" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPycd" resolve="findMaximalOneToOneMapping" />
                <node concept="37vLTw" id="5JQC2dmPy73" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy6G" resolve="candidateMapping" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPy74" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPy75" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPycr" resolve="failIfOneToOneMappingHasMissingOrExtra" />
              <node concept="37vLTw" id="5JQC2dmPy76" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6n" resolve="actualList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPy77" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6t" resolve="expectedList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPy78" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPy6X" resolve="maximalOneToOneMapping" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy7a" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPy7b" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFQ" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPy7d" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmP_CX" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmP_In" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmPy3I" resolve="IterableSubject.NotInOrder" />
                <node concept="3cpWs3" id="5JQC2dmP_Io" role="37wK5m">
                  <node concept="3cpWs3" id="5JQC2dmP_Ip" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmP_Iq" role="3uHU7B">
                      <property role="Xl_RC" value="contains, in order, exactly one element that " />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_Ir" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmP_Is" role="3uHU7w">
                    <property role="Xl_RC" value=" each element of" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP_Iw" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy6i" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPy7l" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPy7m" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPy7n" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyDR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDS" role="1dT_Ay">
              <property role="1dT_AB" value=" Attests that subject contains exactly elements that correspond to the expected elements, i.e." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDU" role="1dT_Ay">
              <property role="1dT_AB" value=" that there is a 1:1 mapping between the actual elements and the expected elements where each" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDW" role="1dT_Ay">
              <property role="1dT_AB" value=" pair of elements correspond." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyDY" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyDZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE0" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyE1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE2" role="1dT_Ay">
              <property role="1dT_AB" value=" on the object returned by this method." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy7o" role="jymVt">
        <property role="TrG5h" value="correspondInOrderExactly" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy7p" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy7q" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
            <node concept="3qUE_q" id="5JQC2dmPy7s" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy7r" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy7t" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy7u" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
            <node concept="3qUE_q" id="5JQC2dmPy7w" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy7v" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy7x" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPy7y" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPy7z" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_IA" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_I_" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy7t" resolve="expected" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_IB" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy7A" role="3clFbx">
              <node concept="3clFbJ" id="5JQC2dmPy7B" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_IH" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_IG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPy7p" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_II" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPy7E" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPy7F" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPy7G" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPy7H" role="37wK5m">
                        <property role="Xl_RC" value="is empty" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPy7I" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPy7J" role="3cqZAk">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
          <node concept="2$JKZl" id="5JQC2dmPy86" role="3cqZAp">
            <node concept="1Wc70l" id="5JQC2dmPy7K" role="2$JKZa">
              <node concept="2OqwBi" id="5JQC2dmP_IO" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmP_IN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy7p" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_IP" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_IV" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP_IU" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy7t" resolve="expected" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_IW" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy7O" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPy7Q" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPy7P" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualElement" />
                  <node concept="16syzq" id="5JQC2dmPy7R" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_J2" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_J1" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy7p" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_J3" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPy7U" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPy7T" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="expectedElement" />
                  <node concept="16syzq" id="5JQC2dmPy7V" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_J9" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_J8" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy7t" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Ja" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPy7X" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPy7Y" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_Jg" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_Jf" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Jh" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                      <node concept="37vLTw" id="5JQC2dmP_Ji" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPy7P" resolve="actualElement" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmP_Jj" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPy7T" resolve="expectedElement" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPy83" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dmPy84" role="3cqZAp">
                    <node concept="3clFbT" id="5JQC2dmPy85" role="3cqZAk">
                      <property role="3clFbU" value="false" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPy87" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPy88" role="3cqZAk">
              <node concept="1eOMI4" id="5JQC2dmPy8c" role="3fr31v">
                <node concept="22lmx$" id="5JQC2dmPy89" role="1eOMHV">
                  <node concept="2OqwBi" id="5JQC2dmP_Jp" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP_Jo" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy7p" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Jq" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_Jw" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmP_Jv" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy7t" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Jx" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPy8d" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPy8e" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPy8f" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyE3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE4" role="1dT_Ay">
              <property role="1dT_AB" value="Returns whether the actual and expected iterators have the same number of elements and, when" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyE5" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE6" role="1dT_Ay">
              <property role="1dT_AB" value="iterated pairwise, every pair of actual and expected values satisfies the correspondence." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy8g" role="jymVt">
        <property role="TrG5h" value="findCandidateMapping" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy8h" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy8i" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPy8k" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy8j" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy8l" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy8m" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPy8o" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy8n" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy8p" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPy8r" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy8q" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="mapping" />
              <node concept="3uibUv" id="5JQC2dmPy8s" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~ImmutableSetMultimap$Builder" resolve="ImmutableSetMultimap.Builder" />
                <node concept="3uibUv" id="5JQC2dmPy8t" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPy8u" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dnvr2t" role="33vP2m">
                <ref role="37wK5l" to="3o3z:~ImmutableSetMultimap.builder():com.google.common.collect.ImmutableSetMultimap$Builder" resolve="builder" />
                <ref role="1Pybhc" to="3o3z:~ImmutableSetMultimap" resolve="ImmutableSetMultimap" />
              </node>
            </node>
          </node>
          <node concept="1Dw8fO" id="5JQC2dmPy8w" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy8x" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actualIndex" />
              <node concept="10Oyi0" id="5JQC2dmPy8z" role="1tU5fm" />
              <node concept="3cmrfG" id="5JQC2dmPy8$" role="33vP2m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="3eOVzh" id="5JQC2dmPy8_" role="1Dwp0S">
              <node concept="37vLTw" id="5JQC2dmPy8A" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPy8x" resolve="actualIndex" />
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_JF" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP_JE" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPy8h" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_JG" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                </node>
              </node>
            </node>
            <node concept="3uNrnE" id="5JQC2dmPy8D" role="1Dwrff">
              <node concept="37vLTw" id="5JQC2dmPy8E" role="2$L3a6">
                <ref role="3cqZAo" node="5JQC2dmPy8x" resolve="actualIndex" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy8G" role="2LFqv$">
              <node concept="1Dw8fO" id="5JQC2dmPy8H" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPy8I" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="expectedIndex" />
                  <node concept="10Oyi0" id="5JQC2dmPy8K" role="1tU5fm" />
                  <node concept="3cmrfG" id="5JQC2dmPy8L" role="33vP2m">
                    <property role="3cmrfH" value="0" />
                  </node>
                </node>
                <node concept="3eOVzh" id="5JQC2dmPy8M" role="1Dwp0S">
                  <node concept="37vLTw" id="5JQC2dmPy8N" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPy8I" resolve="expectedIndex" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_JM" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmP_JL" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy8l" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_JN" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                    </node>
                  </node>
                </node>
                <node concept="3uNrnE" id="5JQC2dmPy8Q" role="1Dwrff">
                  <node concept="37vLTw" id="5JQC2dmPy8R" role="2$L3a6">
                    <ref role="3cqZAo" node="5JQC2dmPy8I" resolve="expectedIndex" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPy8T" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPy8U" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_JT" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmP_JS" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_JU" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                        <node concept="2OqwBi" id="5JQC2dmPCCq" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmPCCp" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPy8h" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPCCr" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.get(int):java.lang.Object" resolve="get" />
                            <node concept="37vLTw" id="5JQC2dmPCCs" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPy8x" resolve="actualIndex" />
                            </node>
                          </node>
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPCCy" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmPCCx" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPy8l" resolve="expected" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPCCz" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.get(int):java.lang.Object" resolve="get" />
                            <node concept="37vLTw" id="5JQC2dmPCC$" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPy8I" resolve="expectedIndex" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPy91" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPy92" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmP_K4" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmP_K3" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPy8q" resolve="mapping" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_K5" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~ImmutableSetMultimap$Builder.put(java.lang.Object,java.lang.Object):com.google.common.collect.ImmutableSetMultimap$Builder" resolve="put" />
                            <node concept="37vLTw" id="5JQC2dmP_K6" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPy8x" resolve="actualIndex" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP_K7" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPy8I" resolve="expectedIndex" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPy96" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_Kd" role="3cqZAk">
              <node concept="37vLTw" id="5JQC2dmP_Kc" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPy8q" resolve="mapping" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_Ke" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~ImmutableSetMultimap$Builder.build():com.google.common.collect.ImmutableSetMultimap" resolve="build" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPy98" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPy99" role="3clF45">
          <ref role="3uigEE" to="3o3z:~ImmutableSetMultimap" resolve="ImmutableSetMultimap" />
          <node concept="3uibUv" id="5JQC2dmPy9a" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPy9b" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPy9c" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyE7" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE8" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of actual elements and a list of expected elements, finds a many:many mapping" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyE9" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEa" role="1dT_Ay">
              <property role="1dT_AB" value="between actual and expected elements where a pair of elements maps if it satisfies the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEb" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEc" role="1dT_Ay">
              <property role="1dT_AB" value="correspondence. Returns this mapping as a multimap where the keys are indexes into the actual" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEd" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEe" role="1dT_Ay">
              <property role="1dT_AB" value="list and the values are indexes into the expected list." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPy9d" role="jymVt">
        <property role="TrG5h" value="failIfCandidateMappingHasMissingOrExtra" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPy9e" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy9f" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPy9h" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy9g" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy9i" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy9j" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPy9l" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPy9k" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPy9m" role="3clF46">
          <property role="TrG5h" value="mapping" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPy9n" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~ImmutableMultimap" resolve="ImmutableMultimap" />
            <node concept="3uibUv" id="5JQC2dmPy9o" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPy9p" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPy9q" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPy9s" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy9r" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="extra" />
              <node concept="3uibUv" id="5JQC2dmPy9t" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPy9v" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPy9u" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPy9w" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPy9x" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy9e" resolve="actual" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_Kk" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_Kj" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPy9m" resolve="mapping" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Kl" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~ImmutableMultimap.keySet():com.google.common.collect.ImmutableSet" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPy9$" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy9z" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missing" />
              <node concept="3uibUv" id="5JQC2dmPy9_" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPy9B" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPy9A" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPy9C" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPy9D" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy9i" resolve="expected" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPy9E" role="37wK5m">
                  <node concept="2OqwBi" id="5JQC2dmP_Kr" role="2Oq$k0">
                    <node concept="37vLTw" id="5JQC2dmP_Kq" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy9m" resolve="mapping" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Ks" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~ImmutableMultimap.inverse():com.google.common.collect.ImmutableMultimap" resolve="inverse" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPy9G" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~ImmutableMultimap.keySet():com.google.common.collect.ImmutableSet" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPy9I" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPy9H" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missingOrExtraMessage" />
              <node concept="3uibUv" id="5JQC2dmPy9J" role="1tU5fm">
                <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
                <node concept="3uibUv" id="5JQC2dmPy9K" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPy9L" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPya5" resolve="describeMissingOrExtra" />
                <node concept="37vLTw" id="5JQC2dmPy9M" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy9r" resolve="extra" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPy9N" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy9z" resolve="missing" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPy9O" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_Ky" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmP_Kx" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPy9H" resolve="missingOrExtraMessage" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_Kz" role="2OqNvi">
                <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPy9R" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPy9S" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPy9T" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPy9U" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains exactly one element that %s each element of &lt;%s&gt;. It %s" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPy9V" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPy9W" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPy9X" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy9i" resolve="expected" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_KD" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmP_KC" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPy9H" resolve="missingOrExtraMessage" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_KE" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPy9Z" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPya0" role="3cqZAk">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPya1" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPya2" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="10P_77" id="5JQC2dmPya3" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPya4" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEf" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEg" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of actual elements, a list of expected elements, and a many:many mapping between" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEh" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEi" role="1dT_Ay">
              <property role="1dT_AB" value="actual and expected elements specified as a multimap of indexes into the actual list to" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEj" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEk" role="1dT_Ay">
              <property role="1dT_AB" value="indexes into the expected list, checks that every actual element maps to at least one" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEl" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEm" role="1dT_Ay">
              <property role="1dT_AB" value="expected element and vice versa, and fails if this is not the case." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPya5" role="jymVt">
        <property role="TrG5h" value="describeMissingOrExtra" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPya6" role="3clF46">
          <property role="TrG5h" value="extra" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPya7" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPya9" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPya8" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyaa" role="3clF46">
          <property role="TrG5h" value="missing" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyab" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPyad" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyac" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyae" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPyaf" role="3cqZAp">
            <node concept="1Wc70l" id="5JQC2dmPyag" role="3clFbw">
              <node concept="3fqX7Q" id="5JQC2dmPyah" role="3uHU7B">
                <node concept="2OqwBi" id="5JQC2dmP_KK" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmP_KJ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyaa" resolve="missing" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_KL" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="3fqX7Q" id="5JQC2dmPyaj" role="3uHU7w">
                <node concept="2OqwBi" id="5JQC2dmP_KR" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmP_KQ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPya6" resolve="extra" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_KS" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPyav" role="9aQIa">
              <node concept="3fqX7Q" id="5JQC2dmPyaw" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmP_KY" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmP_KX" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyaa" resolve="missing" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_KZ" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPyaF" role="9aQIa">
                <node concept="3fqX7Q" id="5JQC2dmPyaG" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_L5" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_L4" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPya6" resolve="extra" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_L6" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                    </node>
                  </node>
                </node>
                <node concept="9aQIb" id="5JQC2dmPyaP" role="9aQIa">
                  <node concept="3clFbS" id="5JQC2dmPyaQ" role="9aQI4">
                    <node concept="3cpWs6" id="5JQC2dmPyaR" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dnssuV" role="3cqZAk">
                        <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                        <ref role="37wK5l" to="gyfg:~Optional.absent():com.google.common.base.Optional" resolve="absent" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyaJ" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dnBjOV" role="3cqZAp">
                    <node concept="2YIFZM" id="5JQC2dnBjOW" role="3cqZAk">
                      <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                      <ref role="37wK5l" to="gyfg:~Optional.of(java.lang.Object):com.google.common.base.Optional" resolve="of" />
                      <node concept="2YIFZM" id="5JQC2dnByGG" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                        <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                        <node concept="Xl_RD" id="5JQC2dnByGH" role="37wK5m">
                          <property role="Xl_RC" value="has unexpected elements &lt;%s&gt;" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dnByGI" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPya6" resolve="extra" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyaz" role="3clFbx">
                <node concept="3cpWs6" id="5JQC2dn_MWU" role="3cqZAp">
                  <node concept="2YIFZM" id="5JQC2dn_MWV" role="3cqZAk">
                    <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                    <ref role="37wK5l" to="gyfg:~Optional.of(java.lang.Object):com.google.common.base.Optional" resolve="of" />
                    <node concept="2YIFZM" id="5JQC2dn_MWW" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                      <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                      <node concept="Xl_RD" id="5JQC2dnA3s6" role="37wK5m">
                        <property role="Xl_RC" value="is missing an element that %s %s" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dnA3s7" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dnA3s8" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPybK" resolve="formatMissing" />
                        <node concept="37vLTw" id="5JQC2dnA3s9" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyaa" resolve="missing" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyam" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dnz521" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dnzL87" role="3cqZAk">
                  <ref role="37wK5l" to="gyfg:~Optional.of(java.lang.Object):com.google.common.base.Optional" resolve="of" />
                  <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                  <node concept="2YIFZM" id="5JQC2dn$JfA" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                    <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                    <node concept="Xl_RD" id="5JQC2dn$XxC" role="37wK5m">
                      <property role="Xl_RC" value="is missing an element that %s %s and has unexpected elements &lt;%s&gt;" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dn$XxD" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dn$XxE" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPybK" resolve="formatMissing" />
                      <node concept="37vLTw" id="5JQC2dn$XxF" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyaa" resolve="missing" />
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2dn$XxG" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPya6" resolve="extra" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyaT" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPyaU" role="3clF45">
          <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
          <node concept="3uibUv" id="5JQC2dmPyaV" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPyaW" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEn" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEo" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of extra elements and a list of missing elements, returns an absent value if" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEp" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEq" role="1dT_Ay">
              <property role="1dT_AB" value="both are empty, and otherwise returns a verb phrase (suitable for appearing after the subject" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEr" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEs" role="1dT_Ay">
              <property role="1dT_AB" value="of the verb) describing them." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyaX" role="jymVt">
        <property role="TrG5h" value="findNotIndexed" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPyaY" role="16eVyc">
          <property role="TrG5h" value="T" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPyaZ" role="3clF46">
          <property role="TrG5h" value="list" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyb0" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="16syzq" id="5JQC2dmPyb1" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPyaY" resolve="T" />
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyb2" role="3clF46">
          <property role="TrG5h" value="indexes" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyb3" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
            <node concept="3uibUv" id="5JQC2dmPyb4" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyb5" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPyb6" role="3cqZAp">
            <node concept="3clFbC" id="5JQC2dmPyb7" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_Ls" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmP_Lr" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyb2" resolve="indexes" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_Lt" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.size():int" resolve="size" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_Lz" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP_Ly" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyaZ" resolve="list" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_L$" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPybb" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPybc" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dnwA0f" role="3cqZAk">
                  <ref role="37wK5l" to="3o3z:~ImmutableList.of():com.google.common.collect.ImmutableList" resolve="of" />
                  <ref role="1Pybhc" to="3o3z:~ImmutableList" resolve="ImmutableList" />
                  <node concept="16syzq" id="5JQC2dnCsPM" role="3PaCim">
                    <ref role="16sUi3" node="5JQC2dmPyaY" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPybf" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPybe" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="notIndexed" />
              <node concept="3uibUv" id="5JQC2dmPybg" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="16syzq" id="5JQC2dmPybh" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPyaY" resolve="T" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dnymo$" role="33vP2m">
                <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
                <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              </node>
            </node>
          </node>
          <node concept="1Dw8fO" id="5JQC2dmPybj" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPybk" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="index" />
              <node concept="10Oyi0" id="5JQC2dmPybm" role="1tU5fm" />
              <node concept="3cmrfG" id="5JQC2dmPybn" role="33vP2m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="3eOVzh" id="5JQC2dmPybo" role="1Dwp0S">
              <node concept="37vLTw" id="5JQC2dmPybp" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPybk" resolve="index" />
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_LM" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP_LL" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyaZ" resolve="list" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_LN" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                </node>
              </node>
            </node>
            <node concept="3uNrnE" id="5JQC2dmPybs" role="1Dwrff">
              <node concept="37vLTw" id="5JQC2dmPybt" role="2$L3a6">
                <ref role="3cqZAo" node="5JQC2dmPybk" resolve="index" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPybv" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmPybw" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPybx" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_LT" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_LS" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyb2" resolve="indexes" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_LU" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                      <node concept="37vLTw" id="5JQC2dmP_LV" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPybk" resolve="index" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyb_" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPybA" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_M1" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP_M0" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPybe" resolve="notIndexed" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_M2" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                        <node concept="2OqwBi" id="5JQC2dmPCD1" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmPCD0" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPyaZ" resolve="list" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPCD2" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.get(int):java.lang.Object" resolve="get" />
                            <node concept="37vLTw" id="5JQC2dmPCD3" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPybk" resolve="index" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPybE" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPybF" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmPybe" resolve="notIndexed" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPybG" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPybH" role="3clF45">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="16syzq" id="5JQC2dmPybI" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPyaY" resolve="T" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPybJ" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEt" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEu" role="1dT_Ay">
              <property role="1dT_AB" value="Returns all the elements of the given list other than those with the given indexes. Assumes" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEv" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEw" role="1dT_Ay">
              <property role="1dT_AB" value="that all the given indexes really are valid indexes into the list." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPybK" role="jymVt">
        <property role="TrG5h" value="formatMissing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPybL" role="3clF46">
          <property role="TrG5h" value="missing" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPybM" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qTvmN" id="5JQC2dmPybN" role="11_B2D" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPybO" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPybP" role="3cqZAp">
            <node concept="3clFbC" id="5JQC2dmPybQ" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_Ma" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmP_M9" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPybL" resolve="missing" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_Mb" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                </node>
              </node>
              <node concept="3cmrfG" id="5JQC2dmPybS" role="3uHU7w">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPyc2" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPyc3" role="9aQI4">
                <node concept="3cpWs6" id="5JQC2dmPyc4" role="3cqZAp">
                  <node concept="3cpWs3" id="5JQC2dmPyc5" role="3cqZAk">
                    <node concept="3cpWs3" id="5JQC2dmPyc6" role="3uHU7B">
                      <node concept="Xl_RD" id="5JQC2dmPyc7" role="3uHU7B">
                        <property role="Xl_RC" value="each of &lt;" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPyc8" role="3uHU7w">
                        <ref role="3cqZAo" node="5JQC2dmPybL" resolve="missing" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPyc9" role="3uHU7w">
                      <property role="Xl_RC" value="&gt;" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPybU" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPybV" role="3cqZAp">
                <node concept="3cpWs3" id="5JQC2dmPybW" role="3cqZAk">
                  <node concept="3cpWs3" id="5JQC2dmPybX" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmPybY" role="3uHU7B">
                      <property role="Xl_RC" value="&lt;" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmP_Mh" role="3uHU7w">
                      <node concept="37vLTw" id="5JQC2dmP_Mg" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPybL" resolve="missing" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_Mi" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~List.get(int):java.lang.Object" resolve="get" />
                        <node concept="3cmrfG" id="5JQC2dmP_Mj" role="37wK5m">
                          <property role="3cmrfH" value="0" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPyc1" role="3uHU7w">
                    <property role="Xl_RC" value="&gt;" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyca" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPycb" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPycc" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEx" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEy" role="1dT_Ay">
              <property role="1dT_AB" value="Returns a description of the missing items suitable for inclusion in failure messages. If" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEz" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyE$" role="1dT_Ay">
              <property role="1dT_AB" value="there is a single item, returns {@code &quot;&lt;item&gt;&quot;}. Otherwise, returns {@code &quot;each of &lt;[item," />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyE_" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEA" role="1dT_Ay">
              <property role="1dT_AB" value="item, item]&gt;&quot;}." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPycd" role="jymVt">
        <property role="TrG5h" value="findMaximalOneToOneMapping" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyce" role="3clF46">
          <property role="TrG5h" value="edges" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPycf" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~ImmutableMultimap" resolve="ImmutableMultimap" />
            <node concept="3uibUv" id="5JQC2dmPycg" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPych" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyci" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPycj" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dmP_Mo" role="3cqZAk">
              <ref role="1Pybhc" node="5JQC2dmPznH" resolve="GraphMatching" />
              <ref role="37wK5l" node="5JQC2dmPzsx" resolve="maximumCardinalityBipartiteMatching" />
              <node concept="37vLTw" id="5JQC2dmP_Mp" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyce" resolve="edges" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPycm" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPycn" role="3clF45">
          <ref role="3uigEE" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
          <node concept="3uibUv" id="5JQC2dmPyco" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPycp" role="11_B2D">
            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
          </node>
        </node>
        <node concept="P$JXv" id="5JQC2dmPycq" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEC" role="1dT_Ay">
              <property role="1dT_AB" value="Given a many:many mapping between actual elements and expected elements, finds a 1:1 mapping" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyED" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEE" role="1dT_Ay">
              <property role="1dT_AB" value="which is the subset of that many:many mapping which includes the largest possible number of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEF" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEG" role="1dT_Ay">
              <property role="1dT_AB" value="elements. The input and output mappings are each described as a map or multimap where the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEI" role="1dT_Ay">
              <property role="1dT_AB" value="keys are indexes into the actual list and the values are indexes into the expected list. If" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEK" role="1dT_Ay">
              <property role="1dT_AB" value="there are multiple possible output mappings tying for the largest possible, this returns an" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEM" role="1dT_Ay">
              <property role="1dT_AB" value="arbitrary one." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPycr" role="jymVt">
        <property role="TrG5h" value="failIfOneToOneMappingHasMissingOrExtra" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPycs" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyct" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPycv" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPycu" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPycw" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPycx" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPycz" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPycy" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyc$" role="3clF46">
          <property role="TrG5h" value="mapping" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyc_" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~BiMap" resolve="BiMap" />
            <node concept="3uibUv" id="5JQC2dmPycA" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPycB" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPycC" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPycE" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPycD" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="extra" />
              <node concept="3uibUv" id="5JQC2dmPycF" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPycH" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPycG" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPycI" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPycJ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPycs" resolve="actual" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_Mv" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_Mu" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyc$" resolve="mapping" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Mw" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPycM" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPycL" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missing" />
              <node concept="3uibUv" id="5JQC2dmPycN" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPycP" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPycO" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPycQ" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPycR" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPycw" resolve="expected" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_MA" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_M_" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyc$" resolve="mapping" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_MB" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~BiMap.values():java.util.Set" resolve="values" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPycU" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPycT" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missingOrExtraMessage" />
              <node concept="3uibUv" id="5JQC2dmPycV" role="1tU5fm">
                <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
                <node concept="3uibUv" id="5JQC2dmPycW" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPycX" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPya5" resolve="describeMissingOrExtra" />
                <node concept="37vLTw" id="5JQC2dmPycY" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPycD" resolve="extra" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPycZ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPycL" resolve="missing" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyd0" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_MH" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmP_MG" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPycT" resolve="missingOrExtraMessage" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_MI" role="2OqNvi">
                <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyd3" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyd4" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyd5" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPyd6" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains exactly one element that %s each element of &lt;%s&gt;. It contains at least one element that matches each expected element, and every element it contains matches at least one expected element, but there was no 1:1 mapping between all the actual and expected elements. Using the most complete 1:1 mapping (or one such mapping, if there is a tie), it %s" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyd7" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyd8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyd9" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPycw" resolve="expected" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_MO" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmP_MN" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPycT" resolve="missingOrExtraMessage" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_MP" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPydb" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPydc" role="3cqZAk">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPydd" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPyde" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="10P_77" id="5JQC2dmPydf" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPydg" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEO" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of actual elements, a list of expected elements, and a 1:1 mapping between" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEQ" role="1dT_Ay">
              <property role="1dT_AB" value="actual and expected elements specified as a bimap of indexes into the actual list to indexes" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyER" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyES" role="1dT_Ay">
              <property role="1dT_AB" value="into the expected list, checks that every actual element maps to an expected element and vice" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyET" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEU" role="1dT_Ay">
              <property role="1dT_AB" value="versa, and fails if this is not the case." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPydh" role="jymVt">
        <property role="TrG5h" value="containsAllOf" />
        <property role="DiZV1" value="true" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPydi" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SafeVarargs" resolve="SafeVarargs" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPydk" role="3clF46">
          <property role="TrG5h" value="first" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPydl" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPydm" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPydn" role="3clF46">
          <property role="TrG5h" value="second" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPydo" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPydp" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPydq" role="3clF46">
          <property role="TrG5h" value="rest" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPydr" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="8X2XB" id="5JQC2dmPydt" role="1tU5fm">
            <node concept="16syzq" id="5JQC2dmPyds" role="8Xvag">
              <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPydu" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPydv" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPydw" role="3cqZAk">
              <ref role="37wK5l" node="5JQC2dmPydC" resolve="containsAllIn" />
              <node concept="2YIFZM" id="5JQC2dmQaFw" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
                <node concept="37vLTw" id="5JQC2dmQaFx" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydk" resolve="first" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFy" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydn" resolve="second" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFz" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydq" resolve="rest" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyd_" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPydA" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPydB" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyEV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEW" role="1dT_Ay">
              <property role="1dT_AB" value=" Attests that the subject contains elements that corresponds to all of the expected elements," />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyEY" role="1dT_Ay">
              <property role="1dT_AB" value=" i.e. that there is a 1:1 mapping between any subset of the actual elements and the expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyEZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF0" role="1dT_Ay">
              <property role="1dT_AB" value=" elements where each pair of elements correspond." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyF1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF2" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyF3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF4" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyF5" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF6" role="1dT_Ay">
              <property role="1dT_AB" value=" on the object returned by this method. The elements must appear in the given order within the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyF7" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF8" role="1dT_Ay">
              <property role="1dT_AB" value=" subject, but they are not required to be consecutive." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPydC" role="jymVt">
        <property role="TrG5h" value="containsAllIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPydE" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPydF" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPydH" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPydG" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPydI" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPydK" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPydJ" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actualList" />
              <node concept="3uibUv" id="5JQC2dmPydL" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="16syzq" id="5JQC2dmPydM" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaF$" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgC" resolve="iterableToList" />
                <node concept="1rXfSq" id="5JQC2dmQaF_" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPydQ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPydP" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedList" />
              <node concept="3uibUv" id="5JQC2dmPydR" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPydT" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPydS" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFA" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgC" resolve="iterableToList" />
                <node concept="37vLTw" id="5JQC2dmQaFB" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydE" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPydW" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPydX" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPyeI" resolve="correspondInOrderAllIn" />
              <node concept="2OqwBi" id="5JQC2dmP_MV" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmP_MU" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPydJ" resolve="actualList" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_MW" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.iterator():java.util.Iterator" resolve="iterator" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP_N2" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmP_N1" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPydP" resolve="expectedList" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_N3" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.iterator():java.util.Iterator" resolve="iterator" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPye1" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPye2" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFR" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyjW" resolve="IN_ORDER" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPye5" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPye4" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="candidateMapping" />
              <node concept="3uibUv" id="5JQC2dmPye6" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~ImmutableSetMultimap" resolve="ImmutableSetMultimap" />
                <node concept="3uibUv" id="5JQC2dmPye7" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPye8" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPye9" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPy8g" resolve="findCandidateMapping" />
                <node concept="37vLTw" id="5JQC2dmPyea" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydJ" resolve="actualList" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyeb" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydP" resolve="expectedList" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyec" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyed" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPyfF" resolve="failIfCandidateMappingHasMissing" />
              <node concept="37vLTw" id="5JQC2dmPyee" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPydP" resolve="expectedList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyef" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPye4" resolve="candidateMapping" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyeh" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPyei" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFS" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPyel" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyek" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="maximalOneToOneMapping" />
              <node concept="3uibUv" id="5JQC2dmPyem" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~ImmutableBiMap" resolve="ImmutableBiMap" />
                <node concept="3uibUv" id="5JQC2dmPyen" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPyeo" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPyep" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPycd" resolve="findMaximalOneToOneMapping" />
                <node concept="37vLTw" id="5JQC2dmPyeq" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPye4" resolve="candidateMapping" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyer" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyes" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPygj" resolve="failIfOneToOneMappingHasMissing" />
              <node concept="37vLTw" id="5JQC2dmPyet" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPydP" resolve="expectedList" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyeu" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyek" resolve="maximalOneToOneMapping" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyew" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPyex" role="3cqZAp">
                <node concept="10M0yZ" id="5JQC2dmQaFT" role="3cqZAk">
                  <ref role="1PxDUh" node="5JQC2dmPy3w" resolve="IterableSubject" />
                  <ref role="3cqZAo" node="5JQC2dmPyk8" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPyez" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmP_N4" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmP_Su" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmPy3I" resolve="IterableSubject.NotInOrder" />
                <node concept="3cpWs3" id="5JQC2dmP_Sv" role="37wK5m">
                  <node concept="3cpWs3" id="5JQC2dmP_Sw" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmP_Sx" role="3uHU7B">
                      <property role="Xl_RC" value="contains, in order, at least one element that " />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_Sy" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmP_Sz" role="3uHU7w">
                    <property role="Xl_RC" value=" each element of" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmP_SB" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPydE" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyeF" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPyeG" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPyeH" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyF9" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFa" role="1dT_Ay">
              <property role="1dT_AB" value=" Attests that the subject contains elements that corresponds to all of the expected elements," />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFb" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFc" role="1dT_Ay">
              <property role="1dT_AB" value=" i.e. that there is a 1:1 mapping between any subset of the actual elements and the expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFd" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFe" role="1dT_Ay">
              <property role="1dT_AB" value=" elements where each pair of elements correspond." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFf" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFg" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFh" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFi" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;To also test that the contents appear in the given order, make a call to {@code inOrder()}" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFj" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFk" role="1dT_Ay">
              <property role="1dT_AB" value=" on the object returned by this method. The elements must appear in the given order within the" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFl" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFm" role="1dT_Ay">
              <property role="1dT_AB" value=" subject, but they are not required to be consecutive." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyeI" role="jymVt">
        <property role="TrG5h" value="correspondInOrderAllIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyeJ" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyeK" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
            <node concept="3qUE_q" id="5JQC2dmPyeM" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyeL" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyeN" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyeO" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
            <node concept="3qUE_q" id="5JQC2dmPyeQ" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyeP" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyeR" role="3clF47">
          <node concept="2$JKZl" id="5JQC2dmPyf8" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_SH" role="2$JKZa">
              <node concept="37vLTw" id="5JQC2dmP_SG" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyeN" resolve="expected" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_SI" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyeU" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPyeW" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyeV" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="expectedElement" />
                  <node concept="16syzq" id="5JQC2dmPyeX" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_SO" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_SN" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyeN" resolve="expected" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_SP" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPyeZ" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPyf0" role="3clFbw">
                  <node concept="1rXfSq" id="5JQC2dmPyf1" role="3fr31v">
                    <ref role="37wK5l" node="5JQC2dmPyfe" resolve="findCorresponding" />
                    <node concept="37vLTw" id="5JQC2dmPyf2" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyeJ" resolve="actual" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyf3" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyeV" resolve="expectedElement" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyf5" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dmPyf6" role="3cqZAp">
                    <node concept="3clFbT" id="5JQC2dmPyf7" role="3cqZAk">
                      <property role="3clFbU" value="false" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPyf9" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPyfa" role="3cqZAk">
              <property role="3clFbU" value="true" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyfb" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPyfc" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyfd" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFn" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFo" role="1dT_Ay">
              <property role="1dT_AB" value="Returns whether all the elements of the expected iterator and any subset of the elements of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFp" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFq" role="1dT_Ay">
              <property role="1dT_AB" value="the actual iterator can be paired up in order, such that every pair of actual and expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFr" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFs" role="1dT_Ay">
              <property role="1dT_AB" value="elements satisfies the correspondence." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyfe" role="jymVt">
        <property role="TrG5h" value="findCorresponding" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyff" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyfg" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
            <node concept="3qUE_q" id="5JQC2dmPyfi" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyfh" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyfj" role="3clF46">
          <property role="TrG5h" value="expectedElement" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPyfk" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyfl" role="3clF47">
          <node concept="2$JKZl" id="5JQC2dmPyf_" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmP_SV" role="2$JKZa">
              <node concept="37vLTw" id="5JQC2dmP_SU" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyff" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmP_SW" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyfo" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPyfq" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyfp" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualElement" />
                  <node concept="16syzq" id="5JQC2dmPyfr" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP_T2" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP_T1" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyff" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_T3" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPyft" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP_T9" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP_T8" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Ta" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                    <node concept="37vLTw" id="5JQC2dmP_Tb" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyfp" resolve="actualElement" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP_Tc" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyfj" resolve="expectedElement" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyfy" role="3clFbx">
                  <node concept="3cpWs6" id="5JQC2dmPyfz" role="3cqZAp">
                    <node concept="3clFbT" id="5JQC2dmPyf$" role="3cqZAk">
                      <property role="3clFbU" value="true" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPyfA" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPyfB" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyfC" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPyfD" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyfE" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFt" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFu" role="1dT_Ay">
              <property role="1dT_AB" value="Advances the actual iterator looking for an element which corresponds to the expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFv" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFw" role="1dT_Ay">
              <property role="1dT_AB" value="element. Returns whether or not it finds one." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyfF" role="jymVt">
        <property role="TrG5h" value="failIfCandidateMappingHasMissing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyfG" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyfH" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPyfJ" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyfI" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyfK" role="3clF46">
          <property role="TrG5h" value="mapping" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyfL" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~ImmutableMultimap" resolve="ImmutableMultimap" />
            <node concept="3uibUv" id="5JQC2dmPyfM" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPyfN" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyfO" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPyfQ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyfP" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missing" />
              <node concept="3uibUv" id="5JQC2dmPyfR" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPyfT" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPyfS" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPyfU" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPyfV" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyfG" resolve="expected" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPyfW" role="37wK5m">
                  <node concept="2OqwBi" id="5JQC2dmP_Ti" role="2Oq$k0">
                    <node concept="37vLTw" id="5JQC2dmP_Th" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyfK" resolve="mapping" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_Tj" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~ImmutableMultimap.inverse():com.google.common.collect.ImmutableMultimap" resolve="inverse" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPyfY" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~ImmutableMultimap.keySet():com.google.common.collect.ImmutableSet" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyfZ" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPyg0" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_Tp" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_To" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyfP" resolve="missing" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_Tq" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyg3" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyg4" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyg5" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPyg6" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains at least one element that %s each element of &lt;%s&gt;. It is missing an element that %s %s" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyg7" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyg8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyg9" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyfG" resolve="expected" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyga" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPygb" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPybK" resolve="formatMissing" />
                    <node concept="37vLTw" id="5JQC2dmPygc" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyfP" resolve="missing" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPygd" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPyge" role="3cqZAk">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPygf" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPygg" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="10P_77" id="5JQC2dmPygh" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPygi" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFx" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFy" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of expected elements and a many:many mapping between actual and expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFz" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyF$" role="1dT_Ay">
              <property role="1dT_AB" value="elements specified as a multimap of indexes into an actual list to indexes into the expected" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyF_" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFA" role="1dT_Ay">
              <property role="1dT_AB" value="list, checks that every expected element maps to at least one actual element, and fails if" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFC" role="1dT_Ay">
              <property role="1dT_AB" value="this is not the case. Actual elements which do not map to any expected elements are ignored." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPygj" role="jymVt">
        <property role="TrG5h" value="failIfOneToOneMappingHasMissing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPygk" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPygl" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~List" resolve="List" />
            <node concept="3qUE_q" id="5JQC2dmPygn" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPygm" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPygo" role="3clF46">
          <property role="TrG5h" value="mapping" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPygp" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~BiMap" resolve="BiMap" />
            <node concept="3uibUv" id="5JQC2dmPygq" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPygr" role="11_B2D">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPygs" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPygu" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPygt" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="missing" />
              <node concept="3uibUv" id="5JQC2dmPygv" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3qUE_q" id="5JQC2dmPygx" role="11_B2D">
                  <node concept="16syzq" id="5JQC2dmPygw" role="3qUE_r">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
              <node concept="1rXfSq" id="5JQC2dmPygy" role="33vP2m">
                <ref role="37wK5l" node="5JQC2dmPyaX" resolve="findNotIndexed" />
                <node concept="37vLTw" id="5JQC2dmPygz" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPygk" resolve="expected" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP_Tw" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmP_Tv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPygo" resolve="mapping" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP_Tx" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~BiMap.values():java.util.Set" resolve="values" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyg_" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPygA" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_TB" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_TA" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPygt" resolve="missing" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_TC" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPygD" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPygE" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPygF" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPygG" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains at least one element that %s each element of &lt;%s&gt;. It contains at least one element that matches each expected element, but there was no 1:1 mapping between all the expected elements and any subset of the actual elements. Using the most complete 1:1 mapping (or one such mapping, if there is a tie), it is missing an element that %s %s" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPygH" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPygI" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPygJ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPygk" resolve="expected" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPygK" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPygL" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPybK" resolve="formatMissing" />
                    <node concept="37vLTw" id="5JQC2dmPygM" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPygt" resolve="missing" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPygN" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPygO" role="3cqZAk">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPygP" role="3cqZAp">
            <node concept="3clFbT" id="5JQC2dmPygQ" role="3cqZAk">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="10P_77" id="5JQC2dmPygR" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPygS" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFD" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFE" role="1dT_Ay">
              <property role="1dT_AB" value="Given a list of expected elements, and a 1:1 mapping between actual and expected elements" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFF" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFG" role="1dT_Ay">
              <property role="1dT_AB" value="specified as a bimap of indexes into an actual list to indexes into the expected list, checks" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFI" role="1dT_Ay">
              <property role="1dT_AB" value="that every expected element maps to an actual element. Actual elements which do not map to" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFK" role="1dT_Ay">
              <property role="1dT_AB" value="any expected elements are ignored." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPygT" role="jymVt">
        <property role="TrG5h" value="containsAnyOf" />
        <property role="DiZV1" value="true" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPygU" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SafeVarargs" resolve="SafeVarargs" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPygV" role="3clF46">
          <property role="TrG5h" value="first" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPygW" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPygX" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPygY" role="3clF46">
          <property role="TrG5h" value="second" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPygZ" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyh0" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyh1" role="3clF46">
          <property role="TrG5h" value="rest" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyh2" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="8X2XB" id="5JQC2dmPyh4" role="1tU5fm">
            <node concept="16syzq" id="5JQC2dmPyh3" role="8Xvag">
              <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyh5" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyh6" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyh7" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPyhx" resolve="containsAny" />
              <node concept="2YIFZM" id="5JQC2dmP_TH" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="Xl_RD" id="5JQC2dmP_TI" role="37wK5m">
                  <property role="Xl_RC" value="contains at least one element that %s any of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP_TJ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFC" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
                <node concept="37vLTw" id="5JQC2dmQaFD" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPygV" resolve="first" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFE" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPygY" resolve="second" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFF" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyh1" resolve="rest" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyhf" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyhg" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyhh" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFM" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that the subject contains at least one element that corresponds to at least one of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFO" role="1dT_Ay">
              <property role="1dT_AB" value="the expected elements." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyhi" role="jymVt">
        <property role="TrG5h" value="containsAnyIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyhj" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyhk" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPyhm" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyhl" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyhn" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyho" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyhp" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPyhx" resolve="containsAny" />
              <node concept="2YIFZM" id="5JQC2dmP_TR" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="Xl_RD" id="5JQC2dmP_TS" role="37wK5m">
                  <property role="Xl_RC" value="contains at least one element that %s any element in" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP_TT" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPyht" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyhj" resolve="expected" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyhu" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyhv" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyhw" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFQ" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that the subject contains at least one element that corresponds to at least one of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFS" role="1dT_Ay">
              <property role="1dT_AB" value="the expected elements." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyhx" role="jymVt">
        <property role="TrG5h" value="containsAny" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyhy" role="3clF46">
          <property role="TrG5h" value="failVerb" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyhz" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyh$" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyh_" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPyhB" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyhA" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyhC" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPyhE" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyhD" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actual" />
              <node concept="3uibUv" id="5JQC2dmPyhF" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                <node concept="16syzq" id="5JQC2dmPyhG" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFG" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
                <node concept="1rXfSq" id="5JQC2dmQaFH" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPyhJ" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPyi3" role="1DdaDG">
              <ref role="3cqZAo" node="5JQC2dmPyh$" resolve="expected" />
            </node>
            <node concept="3cpWsn" id="5JQC2dmPyi0" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedItem" />
              <node concept="16syzq" id="5JQC2dmPyi2" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyhL" role="2LFqv$">
              <node concept="1DcWWT" id="5JQC2dmPyhM" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPyhZ" role="1DdaDG">
                  <ref role="3cqZAo" node="5JQC2dmPyhD" resolve="actual" />
                </node>
                <node concept="3cpWsn" id="5JQC2dmPyhW" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualItem" />
                  <node concept="16syzq" id="5JQC2dmPyhY" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyhO" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPyhP" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_U2" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmP_U1" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_U3" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                        <node concept="37vLTw" id="5JQC2dmP_U4" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyhW" resolve="actualItem" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP_U5" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyi0" resolve="expectedItem" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyhU" role="3clFbx">
                      <node concept="3cpWs6" id="5JQC2dmPyhV" role="3cqZAp" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyi4" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyi5" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
              <node concept="37vLTw" id="5JQC2dmPyi6" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyhy" resolve="failVerb" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyi7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyh$" resolve="expected" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyi8" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyi9" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPyia" role="jymVt">
        <property role="TrG5h" value="containsNoneOf" />
        <property role="DiZV1" value="true" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyib" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SafeVarargs" resolve="SafeVarargs" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPyic" role="3clF46">
          <property role="TrG5h" value="firstExcluded" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyid" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyie" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyif" role="3clF46">
          <property role="TrG5h" value="secondExcluded" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyig" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyih" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyii" role="3clF46">
          <property role="TrG5h" value="restOfExcluded" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyij" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="8X2XB" id="5JQC2dmPyil" role="1tU5fm">
            <node concept="16syzq" id="5JQC2dmPyik" role="8Xvag">
              <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyim" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyin" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyio" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPyiI" resolve="containsNone" />
              <node concept="Xl_RD" id="5JQC2dmPyip" role="37wK5m">
                <property role="Xl_RC" value="any of" />
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFI" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
                <node concept="37vLTw" id="5JQC2dmQaFJ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyic" resolve="firstExcluded" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFK" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyif" resolve="secondExcluded" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQaFL" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyii" resolve="restOfExcluded" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyiu" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyiv" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyiw" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFU" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that the subject contains no elements that correspond to any of the given elements." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFW" role="1dT_Ay">
              <property role="1dT_AB" value="(Duplicates are irrelevant to this test, which fails if any of the subject elements" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyFX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyFY" role="1dT_Ay">
              <property role="1dT_AB" value="correspond to any of the given elements.)" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyix" role="jymVt">
        <property role="TrG5h" value="containsNoneIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyiy" role="3clF46">
          <property role="TrG5h" value="excluded" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyiz" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPyi_" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyi$" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyiA" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyiB" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPyiC" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPyiI" resolve="containsNone" />
              <node concept="Xl_RD" id="5JQC2dmPyiD" role="37wK5m">
                <property role="Xl_RC" value="any element in" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPyiE" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyiy" resolve="excluded" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyiF" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyiG" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyiH" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPyFZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyG0" role="1dT_Ay">
              <property role="1dT_AB" value="Attests that the subject contains no elements that correspond to any of the given elements." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyG1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyG2" role="1dT_Ay">
              <property role="1dT_AB" value="(Duplicates are irrelevant to this test, which fails if any of the subject elements" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPyG3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPyG4" role="1dT_Ay">
              <property role="1dT_AB" value="correspond to any of the given elements.)" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyiI" role="jymVt">
        <property role="TrG5h" value="containsNone" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyiJ" role="3clF46">
          <property role="TrG5h" value="excludedPrefix" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyiK" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyiL" role="3clF46">
          <property role="TrG5h" value="excluded" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyiM" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPyiO" role="11_B2D">
              <node concept="16syzq" id="5JQC2dmPyiN" role="3qUE_r">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyiP" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPyiR" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyiQ" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actual" />
              <node concept="3uibUv" id="5JQC2dmPyiS" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                <node concept="16syzq" id="5JQC2dmPyiT" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dmQaFM" role="33vP2m">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
                <node concept="1rXfSq" id="5JQC2dmQaFN" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPyjE" resolve="getCastActual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPyiX" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyiW" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="present" />
              <node concept="3uibUv" id="5JQC2dmPyiY" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                <node concept="16syzq" id="5JQC2dmPyiZ" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                </node>
              </node>
              <node concept="2ShNRf" id="5JQC2dmP_U6" role="33vP2m">
                <node concept="1pGfFk" id="5JQC2dmP_U7" role="2ShVmc">
                  <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                  <node concept="16syzq" id="5JQC2dnjl0r" role="1pMfVU">
                    <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPyj2" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dnjLku" role="1DdaDG">
              <ref role="1Pybhc" to="3o3z:~Sets" resolve="Sets" />
              <ref role="37wK5l" to="3o3z:~Sets.newLinkedHashSet(java.lang.Iterable):java.util.LinkedHashSet" resolve="newLinkedHashSet" />
              <node concept="37vLTw" id="5JQC2dnjNFx" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyiL" resolve="excluded" />
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPyjl" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="excludedItem" />
              <node concept="16syzq" id="5JQC2dnjpnF" role="1tU5fm">
                <ref role="16sUi3" node="5JQC2dmPy4p" resolve="E" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyj4" role="2LFqv$">
              <node concept="1DcWWT" id="5JQC2dmPyj5" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPyjk" role="1DdaDG">
                  <ref role="3cqZAo" node="5JQC2dmPyiQ" resolve="actual" />
                </node>
                <node concept="3cpWsn" id="5JQC2dmPyjh" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualItem" />
                  <node concept="16syzq" id="5JQC2dmPyjj" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyj7" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPyj8" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP_Ui" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmP_Uh" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP_Uj" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                        <node concept="37vLTw" id="5JQC2dmP_Uk" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyjh" resolve="actualItem" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP_Ul" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyjl" resolve="excludedItem" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyjd" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPyje" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmP_Ur" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmP_Uq" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPyiW" resolve="present" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_Us" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~Collection.add(java.lang.Object):boolean" resolve="add" />
                            <node concept="37vLTw" id="5JQC2dmP_Ut" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPyjl" resolve="excludedItem" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyjq" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPyjr" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmP_Uz" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmP_Uy" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyiW" resolve="present" />
                </node>
                <node concept="liA8E" id="5JQC2dmP_U$" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Collection.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyju" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyjv" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyjw" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPyjx" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains no element that %s %s &lt;%s&gt;. It contains at least one element that %s each of &lt;%s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyjy" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyjz" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyj$" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyiJ" resolve="excludedPrefix" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyj_" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyiL" resolve="excluded" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyjA" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPy4q" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyjB" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyiW" resolve="present" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyjC" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyjD" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPyjE" role="jymVt">
        <property role="TrG5h" value="getCastActual" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyjF" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
          <node concept="2B6LJw" id="5JQC2dmPyjG" role="2B76xF">
            <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
            <node concept="Xl_RD" id="5JQC2dmPyjH" role="2B70Vg">
              <property role="Xl_RC" value="unchecked" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyjI" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPyjJ" role="3cqZAp">
            <node concept="10QFUN" id="5JQC2dmPyjK" role="3cqZAk">
              <node concept="1rXfSq" id="5JQC2dmPyjL" role="10QFUP">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPyjM" role="10QFUM">
                <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                <node concept="16syzq" id="5JQC2dmPyjN" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyjO" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPyjP" role="3clF45">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPyjQ" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPy4o" resolve="A" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw7d">
    <property role="TrG5h" value="MultisetSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPw7e" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPw7f" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPw8o" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw8u" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw8v" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Multiset} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw8w" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw8x" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw8y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw8z" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPw7g" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPw7h" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPw7i" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw7j" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw7k" role="3clF46">
        <property role="TrG5h" value="multiset" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw7l" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPw7m" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multiset" resolve="Multiset" />
          <node concept="3qTvmN" id="5JQC2dmPw7n" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw7o" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_U_" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPykk" resolve="IterableSubject" />
          <node concept="37vLTw" id="5JQC2dmP_UA" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw7i" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_UB" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw7k" resolve="multiset" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw7s" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw7t" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPw7u" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw7v" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw7w" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPw7y" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPw7x" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw7z" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPw7$" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPw7_" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
            <node concept="37vLTw" id="5JQC2dmPw7A" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPw7u" resolve="format" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPw7B" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPw7w" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPw7C" role="3cqZAp">
          <node concept="Xjq3P" id="5JQC2dmPw7D" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw7E" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPw7F" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPw7d" resolve="MultisetSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw7G" role="jymVt">
      <property role="TrG5h" value="hasCount" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPw7H" role="3clF46">
        <property role="TrG5h" value="element" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw7I" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPw7J" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw7K" role="3clF46">
        <property role="TrG5h" value="expectedCount" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPw7L" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw7M" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPw7N" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do6zeF" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2do6zeG" role="37wK5m">
              <node concept="37vLTw" id="5JQC2do6zeH" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPw7K" resolve="expectedCount" />
              </node>
              <node concept="3cmrfG" id="5JQC2do6zeI" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2do6zeJ" role="37wK5m">
              <property role="Xl_RC" value="expectedCount(%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2do6zeK" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPw7K" resolve="expectedCount" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPw7V" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw7U" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualCount" />
            <node concept="10Oyi0" id="5JQC2dmPw7W" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPw7X" role="33vP2m">
              <node concept="1eOMI4" id="5JQC2dmPw82" role="2Oq$k0">
                <node concept="10QFUN" id="5JQC2dmPw7Y" role="1eOMHV">
                  <node concept="1rXfSq" id="5JQC2dmPw7Z" role="10QFUP">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPw80" role="10QFUM">
                    <ref role="3uigEE" to="3o3z:~Multiset" resolve="Multiset" />
                    <node concept="3qTvmN" id="5JQC2dmPw81" role="11_B2D" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPw83" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multiset.count(java.lang.Object):int" resolve="count" />
                <node concept="37vLTw" id="5JQC2dmPw84" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPw7H" resolve="element" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPw85" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPw86" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPw87" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPw7U" resolve="actualCount" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPw88" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPw7K" resolve="expectedCount" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw8a" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPw8b" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPw8c" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="3cpWs3" id="5JQC2dmPw8d" role="37wK5m">
                  <node concept="3cpWs3" id="5JQC2dmPw8e" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmPw8f" role="3uHU7B">
                      <property role="Xl_RC" value="has a count for &lt;" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPw8g" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPw7H" resolve="element" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPw8h" role="3uHU7w">
                    <property role="Xl_RC" value="&gt; of" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPw8i" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPw7K" resolve="expectedCount" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPw8j" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPw8k" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPw7U" resolve="actualCount" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw8l" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw8m" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw8n" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw8$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw8_" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the element does not have the given count. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw8A">
    <property role="TrG5h" value="DefaultSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPw8B" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPw8C" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPw8D" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPw8A" resolve="DefaultSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPw8E" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPw8F" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPw8G" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPw8H" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw8I" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw8J" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw8K" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPw8L" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw8M" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_UC" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmP_UD" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw8H" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_UE" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw8J" resolve="o" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw8Q" role="1B3o_S" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwj3">
    <property role="TrG5h" value="GuavaOptionalSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwj4" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwj5" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPwj6" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwj3" resolve="GuavaOptionalSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPwj7" role="11_B2D">
        <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
        <node concept="3qTvmN" id="5JQC2dmPwj8" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwkV" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwl0" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwl1" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for Guava {@link Optional} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwl2" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwl3" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwl4" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwl5" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwj9" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwja" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwjb" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwjc" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwjd" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwje" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwjf" role="1tU5fm">
          <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
          <node concept="3qTvmN" id="5JQC2dmPwjg" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwjh" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_UF" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmP_UG" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwjb" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_UH" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwjd" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwjl" role="jymVt">
      <property role="TrG5h" value="isPresent" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwjm" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwjn" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPwjo" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPwjp" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPwjq" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwjr" role="3uHU7w" />
            </node>
            <node concept="3fqX7Q" id="5JQC2dmPwjs" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPwjt" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPwju" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPwjv" role="2OqNvi">
                  <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwjx" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwjy" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwjz" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzF" resolve="failWithoutActual" />
                <node concept="Xl_RD" id="5JQC2dmPwj$" role="37wK5m">
                  <property role="Xl_RC" value="is present" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwj_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwjA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwjB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwl6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwl7" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link Optional}{@code &lt;T&gt;} is absent or the subject is null. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwjC" role="jymVt">
      <property role="TrG5h" value="isAbsent" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwjD" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwjE" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPwjF" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPwjG" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPwjH" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwjI" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwjJ" role="3uHU7w">
              <node concept="1rXfSq" id="5JQC2dmPwjK" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPwjL" role="2OqNvi">
                <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwjN" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwjO" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwjP" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwjQ" role="37wK5m">
                  <property role="Xl_RC" value="is absent" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwjR" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwjS" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwjT" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwl8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwl9" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link Optional}{@code &lt;T&gt;} is present or the subject is null.. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwjU" role="jymVt">
      <property role="TrG5h" value="hasValue" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwjV" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwjW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwjX" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwjY" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwjZ" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwk0" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwk1" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwk3" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPwk6" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmP_UI" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmP_UU" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~NullPointerException.&lt;init&gt;(java.lang.String)" resolve="NullPointerException" />
                  <node concept="Xl_RD" id="5JQC2dmP_UV" role="37wK5m">
                    <property role="Xl_RC" value="Optional cannot have a null value." />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwk7" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPwk8" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPwk9" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPwka" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwkb" role="3uHU7w" />
            </node>
            <node concept="3fqX7Q" id="5JQC2dmPwkc" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPwkd" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPwke" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPwkf" role="2OqNvi">
                  <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                </node>
              </node>
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwkm" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwkn" role="9aQI4">
              <node concept="3cpWs8" id="5JQC2dmPwkp" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPwko" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actual" />
                  <node concept="3uibUv" id="5JQC2dmPwkq" role="1tU5fm">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPwkr" role="33vP2m">
                    <node concept="1rXfSq" id="5JQC2dmPwks" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPwkt" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPwku" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPwkv" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmP_VE" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmP_VD" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwko" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP_VF" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Object.equals(java.lang.Object):boolean" resolve="equals" />
                      <node concept="37vLTw" id="5JQC2dmP_VG" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPwkz" role="3clFbx">
                  <node concept="3clFbJ" id="5JQC2dmPwk$" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmPwk_" role="3clFbw">
                      <node concept="2OqwBi" id="5JQC2dmP_VJ" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmP_VI" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwko" resolve="actual" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP_VK" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.toString():java.lang.String" resolve="toString" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwkB" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                        <node concept="2OqwBi" id="5JQC2dmP_VN" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmP_VM" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmP_VO" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Object.toString():java.lang.String" resolve="toString" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="9aQIb" id="5JQC2dmPwkM" role="9aQIa">
                      <node concept="3clFbS" id="5JQC2dmPwkN" role="9aQI4">
                        <node concept="3clFbF" id="5JQC2dmPwkO" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPwkP" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                            <node concept="Xl_RD" id="5JQC2dmPwkQ" role="37wK5m">
                              <property role="Xl_RC" value="has value" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPwkR" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPwkE" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPwkF" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPwkG" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmPwkH" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s (%s) has value &lt;%s&gt; (%s)" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmPwkI" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_VR" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmP_VQ" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPwko" resolve="actual" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_VS" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPwkK" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP_VV" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmP_VU" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP_VW" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwkh" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwki" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwkj" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwkk" role="37wK5m">
                  <property role="Xl_RC" value="has value" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwkl" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwjV" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwkS" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwkT" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwkU" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwla" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwlb" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the {@link Optional}{@code &lt;T&gt;} does not have the given value or the subject is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwlc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwld" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwle" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwlf" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;To make more complex assertions on the optional's value split your assertion in two:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwlg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwlh" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwli" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwlj" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwlk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwll" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(myOptional).isPresent();" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwlm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwln" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(myOptional.get()).contains(&quot;foo&quot;);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwlo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwlp" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$8g">
    <property role="TrG5h" value="LongSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmP$8h" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmP$8i" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmP$8j" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmP$8g" resolve="LongSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmP$8k" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$8H" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$8L" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$8M" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@code long} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$8N" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$8O" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$8P" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$8Q" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$8R" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$8S" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$8T" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$8U" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmP$8l" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$8m" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$8n" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$8o" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$8p" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$8q" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$8r" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$8s" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmP_VX" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmP_VY" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$8n" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmP_VZ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$8p" resolve="subject" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$8w" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$8x" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$8y" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmP$8z" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$8$" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$8_" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$8A" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$8B" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmP$8C" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmP$8D" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$8$" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$8E" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$8F" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$8G" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$8V" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$8W" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isEqualTo} instead. Long comparison is consistent with equality. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw9i">
    <property role="TrG5h" value="SubjectUtils" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3UR2Jj" id="5JQC2dmPwhP" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwi3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwi4" role="1dT_Ay">
          <property role="1dT_AB" value=" Utility methods used in {@code Subject&lt;T&gt;} implementors." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwi5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwi6" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwi7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwi8" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwi9" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwia" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Jens Nyman" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPw9m" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPw9n" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPw9o" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPw9p" role="1B3o_S" />
    </node>
    <node concept="Wx3nA" id="5JQC2dmPw9j" role="jymVt">
      <property role="TrG5h" value="HUMAN_UNDERSTANDABLE_EMPTY_STRING" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPw9k" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="Xl_RD" id="5JQC2dmPw9l" role="33vP2m">
        <property role="Xl_RC" value="\&quot;\&quot; (empty String)" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPw9q" role="jymVt">
      <property role="TrG5h" value="accumulate" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPw9r" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPw9s" role="3clF46">
        <property role="TrG5h" value="first" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPw9t" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw9u" role="3clF46">
        <property role="TrG5h" value="second" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPw9v" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw9w" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPw9y" role="1tU5fm">
          <node concept="16syzq" id="5JQC2dmPw9x" role="8Xvag">
            <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw9z" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPw9_" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw9$" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="items" />
            <node concept="3uibUv" id="5JQC2dmPw9A" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="16syzq" id="5JQC2dmPw9B" role="11_B2D">
                <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmP_W0" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPAxH" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;(int)" resolve="ArrayList" />
                <node concept="3cpWs3" id="5JQC2dmPAxI" role="37wK5m">
                  <node concept="3cmrfG" id="5JQC2dmPAxJ" role="3uHU7B">
                    <property role="3cmrfH" value="2" />
                  </node>
                  <node concept="1eOMI4" id="5JQC2dmPAxK" role="3uHU7w">
                    <node concept="3K4zz7" id="5JQC2dmPAxL" role="1eOMHV">
                      <node concept="1eOMI4" id="5JQC2dmPAxM" role="3K4Cdx">
                        <node concept="3clFbC" id="5JQC2dmPAxN" role="1eOMHV">
                          <node concept="37vLTw" id="5JQC2dmPAxO" role="3uHU7B">
                            <ref role="3cqZAo" node="5JQC2dmPw9w" resolve="rest" />
                          </node>
                          <node concept="10Nm6u" id="5JQC2dmPAxP" role="3uHU7w" />
                        </node>
                      </node>
                      <node concept="3cmrfG" id="5JQC2dmPAxQ" role="3K4E3e">
                        <property role="3cmrfH" value="1" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPCJw" role="3K4GZi">
                        <node concept="37vLTw" id="5JQC2dmPCJv" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPw9w" resolve="rest" />
                        </node>
                        <node concept="1Rwk04" id="5JQC2dmQb$o" role="2OqNvi" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="16syzq" id="5JQC2dnGboc" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPw9O" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPAy0" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPAxZ" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPw9$" resolve="items" />
            </node>
            <node concept="liA8E" id="5JQC2dmPAy1" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="5JQC2dmPAy2" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPw9s" resolve="first" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPw9R" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPAy5" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPAy4" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPw9$" resolve="items" />
            </node>
            <node concept="liA8E" id="5JQC2dmPAy6" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="5JQC2dmPAy7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPw9u" resolve="second" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPw9U" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPw9V" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPw9W" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPw9w" resolve="rest" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPw9X" role="3uHU7w" />
          </node>
          <node concept="9aQIb" id="5JQC2dmPwa3" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwa4" role="9aQI4">
              <node concept="3clFbF" id="5JQC2dmPwa5" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmPAya" role="3clFbG">
                  <node concept="37vLTw" id="5JQC2dmPAy9" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPw9$" resolve="items" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAyb" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.addAll(java.util.Collection):boolean" resolve="addAll" />
                    <node concept="2YIFZM" id="5JQC2dmPCJz" role="37wK5m">
                      <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                      <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2dmPCJ$" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPw9w" resolve="rest" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw9Z" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwa0" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPAyg" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPAyf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPw9$" resolve="items" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAyh" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="10Nm6u" id="5JQC2dmPAyi" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwa9" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwaa" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPw9$" resolve="items" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwab" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="16syzq" id="5JQC2dmPwac" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPw9r" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwad" role="jymVt">
      <property role="TrG5h" value="countOf" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwae" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwaf" role="3clF46">
        <property role="TrG5h" value="t" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPwag" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPwae" resolve="T" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwah" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwai" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPwaj" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwae" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwak" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwam" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwal" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="count" />
            <node concept="10Oyi0" id="5JQC2dmPwan" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPwao" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwap" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwaJ" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwah" resolve="items" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwaG" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="16syzq" id="5JQC2dmPwaI" role="1tU5fm">
              <ref role="16sUi3" node="5JQC2dmPwae" resolve="T" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwar" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPwas" role="3cqZAp">
              <node concept="3K4zz7" id="5JQC2dmPwaA" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPwat" role="3K4Cdx">
                  <node concept="37vLTw" id="5JQC2dmPwau" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPwaf" resolve="t" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPwav" role="3uHU7w" />
                </node>
                <node concept="1eOMI4" id="5JQC2dmPwaz" role="3K4E3e">
                  <node concept="3clFbC" id="5JQC2dmPwaw" role="1eOMHV">
                    <node concept="37vLTw" id="5JQC2dmPwax" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPwaG" resolve="item" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmPway" role="3uHU7w" />
                  </node>
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAyl" role="3K4GZi">
                  <node concept="37vLTw" id="5JQC2dmPAyk" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwaf" resolve="t" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAym" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Object.equals(java.lang.Object):boolean" resolve="equals" />
                    <node concept="37vLTw" id="5JQC2dmPAyn" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwaG" resolve="item" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwaC" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwaD" role="3cqZAp">
                  <node concept="3uNrnE" id="5JQC2dmPwaE" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPwaF" role="2$L3a6">
                      <ref role="3cqZAo" node="5JQC2dmPwal" resolve="count" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwaK" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwaL" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwal" resolve="count" />
          </node>
        </node>
      </node>
      <node concept="10Oyi0" id="5JQC2dmPwaM" role="3clF45" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwaN" role="jymVt">
      <property role="TrG5h" value="countDuplicates" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwaO" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwaP" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwaQ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPwaR" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwaO" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwaS" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwaU" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwaT" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="itemSet" />
            <node concept="3uibUv" id="5JQC2dmPwaV" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="16syzq" id="5JQC2dmPwaW" role="11_B2D">
                <ref role="16sUi3" node="5JQC2dmPwaO" resolve="T" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmPAyo" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPAyp" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="16syzq" id="5JQC2dnGnI9" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmPwaO" resolve="T" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwaZ" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwbe" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwaP" resolve="items" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwbb" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="16syzq" id="5JQC2dmPwbd" role="1tU5fm">
              <ref role="16sUi3" node="5JQC2dmPwaO" resolve="T" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwb1" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPwb2" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPwb3" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPAyt" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPAys" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwaT" resolve="itemSet" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAyu" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.contains(java.lang.Object):boolean" resolve="contains" />
                    <node concept="37vLTw" id="5JQC2dmPAyv" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwbb" resolve="item" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwb7" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwb8" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPAyy" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPAyx" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwaT" resolve="itemSet" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPAyz" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                      <node concept="37vLTw" id="5JQC2dmPAy$" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwbb" resolve="item" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwbg" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwbf" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="params" />
            <node concept="10Q1$e" id="5JQC2dmPwbi" role="1tU5fm">
              <node concept="3uibUv" id="5JQC2dmPwbh" role="10Q1$1">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmPwbn" role="33vP2m">
              <node concept="3$_iS1" id="5JQC2dmPwbl" role="2ShVmc">
                <node concept="3$GHV9" id="5JQC2dmPwbm" role="3$GQph">
                  <node concept="2OqwBi" id="5JQC2dmPAyB" role="3$I4v7">
                    <node concept="37vLTw" id="5JQC2dmPAyA" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwaT" resolve="itemSet" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPAyC" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                    </node>
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dmPwbj" role="3$_nBY">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwbp" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwbo" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="n" />
            <node concept="10Oyi0" id="5JQC2dmPwbq" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPwbr" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwbs" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwbV" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwaT" resolve="itemSet" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwbS" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="16syzq" id="5JQC2dmPwbU" role="1tU5fm">
              <ref role="16sUi3" node="5JQC2dmPwaO" resolve="T" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwbu" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPwbw" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwbv" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="count" />
                <node concept="10Oyi0" id="5JQC2dmPwbx" role="1tU5fm" />
                <node concept="1rXfSq" id="5JQC2dmPwby" role="33vP2m">
                  <ref role="37wK5l" node="5JQC2dmPwad" resolve="countOf" />
                  <node concept="37vLTw" id="5JQC2dmPwbz" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwbS" resolve="item" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwb$" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwaP" resolve="items" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPwb_" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPwbA" role="3clFbG">
                <node concept="AH0OO" id="5JQC2dmPwbB" role="37vLTJ">
                  <node concept="37vLTw" id="5JQC2dmPwbC" role="AHHXb">
                    <ref role="3cqZAo" node="5JQC2dmPwbf" resolve="params" />
                  </node>
                  <node concept="3uNrnE" id="5JQC2dmPwbD" role="AHEQo">
                    <node concept="37vLTw" id="5JQC2dmPwbE" role="2$L3a6">
                      <ref role="3cqZAo" node="5JQC2dmPwbo" resolve="n" />
                    </node>
                  </node>
                </node>
                <node concept="3K4zz7" id="5JQC2dmPwbR" role="37vLTx">
                  <node concept="1eOMI4" id="5JQC2dmPwbI" role="3K4Cdx">
                    <node concept="3eOSWO" id="5JQC2dmPwbF" role="1eOMHV">
                      <node concept="37vLTw" id="5JQC2dmPwbG" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPwbv" resolve="count" />
                      </node>
                      <node concept="3cmrfG" id="5JQC2dmPwbH" role="3uHU7w">
                        <property role="3cmrfH" value="1" />
                      </node>
                    </node>
                  </node>
                  <node concept="3cpWs3" id="5JQC2dmPwbJ" role="3K4E3e">
                    <node concept="3cpWs3" id="5JQC2dmPwbK" role="3uHU7B">
                      <node concept="3cpWs3" id="5JQC2dmPwbL" role="3uHU7B">
                        <node concept="37vLTw" id="5JQC2dmPwbM" role="3uHU7B">
                          <ref role="3cqZAo" node="5JQC2dmPwbS" resolve="item" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmPwbN" role="3uHU7w">
                          <property role="Xl_RC" value=" [" />
                        </node>
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPwbO" role="3uHU7w">
                        <ref role="3cqZAo" node="5JQC2dmPwbv" resolve="count" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPwbP" role="3uHU7w">
                      <property role="Xl_RC" value=" copies]" />
                    </node>
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwbQ" role="3K4GZi">
                    <ref role="3cqZAo" node="5JQC2dmPwbS" resolve="item" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwbW" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmPAyE" role="3cqZAk">
            <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
            <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
            <node concept="37vLTw" id="5JQC2dmPAyF" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwbf" resolve="params" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwbZ" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPwc0" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwc1" role="jymVt">
      <property role="TrG5h" value="countDuplicatesAndAddTypeInfo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwc2" role="3clF46">
        <property role="TrG5h" value="itemsIterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwc3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwc4" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwc5" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwc7" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwc6" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="items" />
            <node concept="3uibUv" id="5JQC2dmPwc8" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3qTvmN" id="5JQC2dmPwc9" role="11_B2D" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwca" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
              <node concept="37vLTw" id="5JQC2dmPwcb" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwc2" resolve="itemsIterable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwcd" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwcc" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="homogeneousTypeName" />
            <node concept="3uibUv" id="5JQC2dmPwce" role="1tU5fm">
              <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
              <node concept="3uibUv" id="5JQC2dmPwcf" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwcg" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPweY" resolve="getHomogeneousTypeName" />
              <node concept="37vLTw" id="5JQC2dmPwch" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwc6" resolve="items" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwci" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPwcu" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPAyI" role="3K4Cdx">
              <node concept="37vLTw" id="5JQC2dmPAyH" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPwcc" resolve="homogeneousTypeName" />
              </node>
              <node concept="liA8E" id="5JQC2dmPAyJ" role="2OqNvi">
                <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmPAyL" role="3K4E3e">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="Xl_RD" id="5JQC2dmPAyM" role="37wK5m">
                <property role="Xl_RC" value="%s (%s)" />
              </node>
              <node concept="1rXfSq" id="5JQC2dmPAyN" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                <node concept="37vLTw" id="5JQC2dmPAyO" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwc6" resolve="items" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmPC$W" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPC$V" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwcc" resolve="homogeneousTypeName" />
                </node>
                <node concept="liA8E" id="5JQC2dmPC$X" role="2OqNvi">
                  <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwcp" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPwcq" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                <node concept="1rXfSq" id="5JQC2dmPwcr" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwfN" resolve="addTypeInfoToEveryItem" />
                  <node concept="37vLTw" id="5JQC2dmPwcs" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwc6" resolve="items" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwct" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.toString():java.lang.String" resolve="toString" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwcv" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwcw" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwib" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwic" role="1dT_Ay">
            <property role="1dT_AB" value=" Makes a String representation of {@code items} with collapsed duplicates and additional class" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwid" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwie" role="1dT_Ay">
            <property role="1dT_AB" value=" info." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwif" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwig" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwih" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwii" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example: {@code countDuplicatesAndAddTypeInfo([1, 2, 2, 3]) == &quot;[1, 2 [3 copies]]" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwij" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwik" role="1dT_Ay">
            <property role="1dT_AB" value=" (java.lang.Integer)&quot;} and {@code countDuplicatesAndAddTypeInfo([1, 2L]) == &quot;[1" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwil" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwim" role="1dT_Ay">
            <property role="1dT_AB" value=" (java.lang.Integer), 2 (java.lang.Long)]&quot;}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwcx" role="jymVt">
      <property role="TrG5h" value="iterableToStringWithTypeInfo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwcy" role="3clF46">
        <property role="TrG5h" value="itemsIterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwcz" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwc$" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwc_" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwcB" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwcA" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="items" />
            <node concept="3uibUv" id="5JQC2dmPwcC" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
              <node concept="3qTvmN" id="5JQC2dmPwcD" role="11_B2D" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwcE" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwgg" resolve="iterableToCollection" />
              <node concept="37vLTw" id="5JQC2dmPwcF" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwcy" resolve="itemsIterable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwcH" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwcG" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="homogeneousTypeName" />
            <node concept="3uibUv" id="5JQC2dmPwcI" role="1tU5fm">
              <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
              <node concept="3uibUv" id="5JQC2dmPwcJ" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwcK" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPweY" resolve="getHomogeneousTypeName" />
              <node concept="37vLTw" id="5JQC2dmPwcL" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwcA" resolve="items" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwcM" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPAyV" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPAyU" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwcG" resolve="homogeneousTypeName" />
            </node>
            <node concept="liA8E" id="5JQC2dmPAyW" role="2OqNvi">
              <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwcV" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwcW" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwcX" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmPwcY" role="3cqZAk">
                  <node concept="1rXfSq" id="5JQC2dmPwcZ" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwfN" resolve="addTypeInfoToEveryItem" />
                    <node concept="37vLTw" id="5JQC2dmPwd0" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwcA" resolve="items" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwd1" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Object.toString():java.lang.String" resolve="toString" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwcP" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwcQ" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmPAyY" role="3cqZAk">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="Xl_RD" id="5JQC2dmPAyZ" role="37wK5m">
                  <property role="Xl_RC" value="%s (%s)" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPAz0" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwcA" resolve="items" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPCHQ" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPCHP" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwcG" resolve="homogeneousTypeName" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCHR" role="2OqNvi">
                    <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwd2" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwd3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwin" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwio" role="1dT_Ay">
            <property role="1dT_AB" value=" Makes a String representation of {@code items} with additional class info." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwip" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiq" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwir" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwis" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example: {@code iterableToStringWithTypeInfo([1, 2]) == &quot;[1, 2] (java.lang.Integer)&quot;} and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwit" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiu" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code iterableToStringWithTypeInfo([1, 2L]) == &quot;[1 (java.lang.Integer), 2 (java.lang.Long)]&quot;}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwd4" role="jymVt">
      <property role="TrG5h" value="retainMatchingToString" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwd5" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwd6" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwd7" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwd8" role="3clF46">
        <property role="TrG5h" value="itemsToCheck" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwd9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwda" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwdb" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwdd" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwdc" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="stringValueToItemsToCheck" />
            <node concept="3uibUv" id="5JQC2dmPwde" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
              <node concept="3uibUv" id="5JQC2dmPwdf" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPwdg" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnGstG" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~HashMultimap" resolve="HashMultimap" />
              <ref role="37wK5l" to="3o3z:~HashMultimap.create():com.google.common.collect.HashMultimap" resolve="create" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwdi" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwdt" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwd8" resolve="itemsToCheck" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwdq" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="itemToCheck" />
            <node concept="3uibUv" id="5JQC2dmPwds" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwdk" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPwdl" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPAz5" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPAz4" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwdc" resolve="stringValueToItemsToCheck" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAz6" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multimap.put(java.lang.Object,java.lang.Object):boolean" resolve="put" />
                  <node concept="2YIFZM" id="5JQC2dmPCyA" role="37wK5m">
                    <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
                    <ref role="37wK5l" to="wyt6:~String.valueOf(java.lang.Object):java.lang.String" resolve="valueOf" />
                    <node concept="37vLTw" id="5JQC2dmPCyB" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwdq" resolve="itemToCheck" />
                    </node>
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPAz9" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwdq" resolve="itemToCheck" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwdv" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwdu" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="result" />
            <node concept="3uibUv" id="5JQC2dmPwdw" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPwdx" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnGe3s" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwdz" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwdX" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwd5" resolve="items" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwdU" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="3uibUv" id="5JQC2dmPwdW" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwd_" role="2LFqv$">
            <node concept="1DcWWT" id="5JQC2dmPwdA" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPAzd" role="1DdaDG">
                <node concept="37vLTw" id="5JQC2dmPAzc" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwdc" resolve="stringValueToItemsToCheck" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAze" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~SetMultimap.get(java.lang.Object):java.util.Set" resolve="get" />
                  <node concept="2YIFZM" id="5JQC2dmPCEO" role="37wK5m">
                    <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
                    <ref role="37wK5l" to="wyt6:~String.valueOf(java.lang.Object):java.lang.String" resolve="valueOf" />
                    <node concept="37vLTw" id="5JQC2dmPCEP" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwdU" resolve="item" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWsn" id="5JQC2dmPwdO" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="itemToCheck" />
                <node concept="3uibUv" id="5JQC2dmPwdQ" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwdC" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmPwdD" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPwdE" role="3clFbw">
                    <node concept="2YIFZM" id="5JQC2dnJRol" role="3fr31v">
                      <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                      <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                      <node concept="37vLTw" id="5JQC2dnJRom" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwdO" resolve="itemToCheck" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dnJRon" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwdU" resolve="item" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwdJ" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPwdK" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPAzk" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPAzj" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwdu" resolve="result" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAzl" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPAzm" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwdU" resolve="item" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3zACq4" id="5JQC2dmPwdN" role="3cqZAp" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwdY" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwdZ" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwdu" resolve="result" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwe0" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPwe1" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPwe2" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwiv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiw" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a new collection containing all elements in {@code items} for which there exists at" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwix" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiy" role="1dT_Ay">
            <property role="1dT_AB" value=" least one element in {@code itemsToCheck} that has the same {@code toString()} value without" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwi$" role="1dT_Ay">
            <property role="1dT_AB" value=" being equal." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwi_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiA" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiC" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example: {@code retainMatchingToString([1L, 2L, 2L], [2, 3]) == [2L, 2L]}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwe3" role="jymVt">
      <property role="TrG5h" value="hasMatchingToStringPair" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwe4" role="3clF46">
        <property role="TrG5h" value="items1" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwe5" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwe6" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwe7" role="3clF46">
        <property role="TrG5h" value="items2" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwe8" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwe9" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwea" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPweb" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPwec" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPwed" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPwee" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                <node concept="37vLTw" id="5JQC2dmPwef" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwe4" resolve="items1" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPweg" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwe7" resolve="items2" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPweh" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="10P_77" id="5JQC2dmPwei" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwej" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwiD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiE" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns true if there is a pair of an item from {@code items1} and one in {@code items2} that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiG" role="1dT_Ay">
            <property role="1dT_AB" value=" has the same {@code toString()} value without being equal." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiI" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiK" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example: {@code hasMatchingToStringPair([1L, 2L], [1]) == true}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwek" role="jymVt">
      <property role="TrG5h" value="objectToTypeName" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwel" role="3clF46">
        <property role="TrG5h" value="item" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwem" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwen" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPweo" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwep" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPweq" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwel" resolve="item" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwer" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPwew" role="9aQIa">
            <node concept="2ZW3vV" id="5JQC2dmPwez" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPwex" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmPwel" resolve="item" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPwey" role="2ZW6by">
                <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPweR" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPweS" role="9aQI4">
                <node concept="3cpWs6" id="5JQC2dmPweT" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPweU" role="3cqZAk">
                    <node concept="2OqwBi" id="5JQC2dmPAzp" role="2Oq$k0">
                      <node concept="37vLTw" id="5JQC2dmPAzo" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPwel" resolve="item" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPAzq" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPweW" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPwe_" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmPweB" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPweA" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="entry" />
                  <node concept="3uibUv" id="5JQC2dmPweC" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                    <node concept="3qTvmN" id="5JQC2dmPweD" role="11_B2D" />
                    <node concept="3qTvmN" id="5JQC2dmPweE" role="11_B2D" />
                  </node>
                  <node concept="10QFUN" id="5JQC2dmPweF" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmPweG" role="10QFUP">
                      <ref role="3cqZAo" node="5JQC2dmPwel" resolve="item" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPweH" role="10QFUM">
                      <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                      <node concept="3qTvmN" id="5JQC2dmPweI" role="11_B2D" />
                      <node concept="3qTvmN" id="5JQC2dmPweJ" role="11_B2D" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPweK" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dmPAzs" role="3cqZAk">
                  <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                  <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                  <node concept="Xl_RD" id="5JQC2dmPAzt" role="37wK5m">
                    <property role="Xl_RC" value="Map.Entry&lt;%s, %s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPAzu" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                    <node concept="2OqwBi" id="5JQC2dmPCI7" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPCI6" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPweA" resolve="entry" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPCI8" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                      </node>
                    </node>
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPAzy" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                    <node concept="2OqwBi" id="5JQC2dmPCIb" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPCIa" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPweA" resolve="entry" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPCIc" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwet" role="3clFbx">
            <node concept="3SKdUt" id="5JQC2dmPwiM" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tjy" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tjz" role="1PaTwD">
                  <property role="3oM_SC" value="The" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tj$" role="1PaTwD">
                  <property role="3oM_SC" value="name" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8Tj_" role="1PaTwD">
                  <property role="3oM_SC" value="&quot;null" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjA" role="1PaTwD">
                  <property role="3oM_SC" value="type&quot;" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjB" role="1PaTwD">
                  <property role="3oM_SC" value="comes" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjC" role="1PaTwD">
                  <property role="3oM_SC" value="from" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjD" role="1PaTwD">
                  <property role="3oM_SC" value="the" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjE" role="1PaTwD">
                  <property role="3oM_SC" value="interface" />
                </node>
                <node concept="3oM_SD" id="1fGNp1n8TjF" role="1PaTwD">
                  <property role="3oM_SC" value="javax.lang.model.type.NullType." />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPweu" role="3cqZAp">
              <node concept="Xl_RD" id="5JQC2dmPwev" role="3cqZAk">
                <property role="Xl_RC" value="null type" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPweX" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPweY" role="jymVt">
      <property role="TrG5h" value="getHomogeneousTypeName" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPweZ" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwf0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwf1" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwf2" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwf4" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwf3" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="homogeneousTypeName" />
            <node concept="3uibUv" id="5JQC2dmPwf5" role="1tU5fm">
              <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
              <node concept="3uibUv" id="5JQC2dmPwf6" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnFQzw" role="33vP2m">
              <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
              <ref role="37wK5l" to="gyfg:~Optional.absent():com.google.common.base.Optional" resolve="absent" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwf8" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwfG" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPweZ" resolve="items" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwfD" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="3uibUv" id="5JQC2dmPwfF" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwfa" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPwfb" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmPwfc" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPwfd" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPwfD" resolve="item" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPwfe" role="3uHU7w" />
              </node>
              <node concept="3clFbJ" id="5JQC2dmPwfj" role="9aQIa">
                <node concept="3fqX7Q" id="5JQC2dmPwfk" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmPAzD" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmPAzC" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwf3" resolve="homogeneousTypeName" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPAzE" role="2OqNvi">
                      <ref role="37wK5l" to="gyfg:~Optional.isPresent():boolean" resolve="isPresent" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPwfu" role="9aQIa">
                  <node concept="3fqX7Q" id="5JQC2dmPwfv" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmPwfw" role="3fr31v">
                      <node concept="1rXfSq" id="5JQC2dmPwfx" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                        <node concept="37vLTw" id="5JQC2dmPwfy" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPwfD" resolve="item" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwfz" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                        <node concept="2OqwBi" id="5JQC2dmPAzH" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmPAzG" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPwf3" resolve="homogeneousTypeName" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPAzI" role="2OqNvi">
                            <ref role="37wK5l" to="gyfg:~Optional.get():java.lang.Object" resolve="get" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwfA" role="3clFbx">
                    <node concept="3SKdUt" id="5JQC2dmPwiU" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8TjG" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8TjH" role="1PaTwD">
                          <property role="3oM_SC" value="items" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TjI" role="1PaTwD">
                          <property role="3oM_SC" value="is" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TjJ" role="1PaTwD">
                          <property role="3oM_SC" value="a" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TjK" role="1PaTwD">
                          <property role="3oM_SC" value="heterogeneous" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TjL" role="1PaTwD">
                          <property role="3oM_SC" value="collection" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs6" id="5JQC2dmPwfB" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dnKdEq" role="3cqZAk">
                        <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                        <ref role="37wK5l" to="gyfg:~Optional.absent():com.google.common.base.Optional" resolve="absent" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPwfn" role="3clFbx">
                  <node concept="3SKdUt" id="5JQC2dmPwiS" role="3cqZAp">
                    <node concept="1PaTwC" id="1fGNp1n8TjM" role="3ndbpf">
                      <node concept="3oM_SD" id="1fGNp1n8TjN" role="1PaTwD">
                        <property role="3oM_SC" value="This" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TjO" role="1PaTwD">
                        <property role="3oM_SC" value="is" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TjP" role="1PaTwD">
                        <property role="3oM_SC" value="the" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TjQ" role="1PaTwD">
                        <property role="3oM_SC" value="first" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TjR" role="1PaTwD">
                        <property role="3oM_SC" value="item" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmPwfo" role="3cqZAp">
                    <node concept="37vLTI" id="5JQC2dmPwfp" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmPwfq" role="37vLTJ">
                        <ref role="3cqZAo" node="5JQC2dmPwf3" resolve="homogeneousTypeName" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dnFfI1" role="37vLTx">
                        <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                        <ref role="37wK5l" to="gyfg:~Optional.of(java.lang.Object):com.google.common.base.Optional" resolve="of" />
                        <node concept="1rXfSq" id="5JQC2dnFfI2" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                          <node concept="37vLTw" id="5JQC2dnFfI3" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwfD" resolve="item" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwfg" role="3clFbx">
                <node concept="3cpWs6" id="5JQC2dmPwfh" role="3cqZAp">
                  <node concept="2YIFZM" id="5JQC2dnFbGV" role="3cqZAk">
                    <ref role="1Pybhc" to="gyfg:~Optional" resolve="Optional" />
                    <ref role="37wK5l" to="gyfg:~Optional.absent():com.google.common.base.Optional" resolve="absent" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwfH" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwfI" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwf3" resolve="homogeneousTypeName" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwfJ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwfK" role="3clF45">
        <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
        <node concept="3uibUv" id="5JQC2dmPwfL" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPwfM" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwiN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiO" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the name of the single type of all given items or {@link Optional#absent()} if no such" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiQ" role="1dT_Ay">
            <property role="1dT_AB" value="type exists." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwfN" role="jymVt">
      <property role="TrG5h" value="addTypeInfoToEveryItem" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwfO" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwfP" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwfQ" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwfR" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwfT" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwfS" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="itemsWithTypeInfo" />
            <node concept="3uibUv" id="5JQC2dmPwfU" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPwfV" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dnG96S" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPwfX" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwga" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPwfO" resolve="items" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPwg7" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="item" />
            <node concept="3uibUv" id="5JQC2dmPwg9" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwfZ" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPwg0" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPAzP" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPAzO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwfS" resolve="itemsWithTypeInfo" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAzQ" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="2YIFZM" id="5JQC2dmPCH6" role="37wK5m">
                    <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                    <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                    <node concept="Xl_RD" id="5JQC2dmPCH7" role="37wK5m">
                      <property role="Xl_RC" value="%s (%s)" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPCH8" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwg7" resolve="item" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPCH9" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmPCHa" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwg7" resolve="item" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwgb" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwgc" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwfS" resolve="itemsWithTypeInfo" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwgd" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwge" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPwgf" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwgg" role="jymVt">
      <property role="TrG5h" value="iterableToCollection" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwgh" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwgi" role="3clF46">
        <property role="TrG5h" value="iterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwgj" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPwgk" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwgh" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwgl" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwgm" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmPwgp" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwgn" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmPwgi" resolve="iterable" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPwgo" role="2ZW6by">
              <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwgx" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwgy" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwgz" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dnKCdh" role="3cqZAk">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2dnKCdi" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwgi" resolve="iterable" />
                  </node>
                  <node concept="16syzq" id="5JQC2dnL4jH" role="3PaCim">
                    <ref role="16sUi3" node="5JQC2dmPwgh" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwgr" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwgs" role="3cqZAp">
              <node concept="10QFUN" id="5JQC2dmPwgt" role="3cqZAk">
                <node concept="37vLTw" id="5JQC2dmPwgu" role="10QFUP">
                  <ref role="3cqZAo" node="5JQC2dmPwgi" resolve="iterable" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPwgv" role="10QFUM">
                  <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                  <node concept="16syzq" id="5JQC2dmPwgw" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPwgh" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwgA" role="3clF45">
        <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
        <node concept="16syzq" id="5JQC2dmPwgB" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwgh" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwgC" role="jymVt">
      <property role="TrG5h" value="iterableToList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwgD" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwgE" role="3clF46">
        <property role="TrG5h" value="iterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwgF" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPwgG" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwgD" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwgH" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwgI" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmPwgL" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwgJ" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmPwgE" resolve="iterable" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPwgK" role="2ZW6by">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwgT" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwgU" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwgV" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dnGnBW" role="3cqZAk">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2dnGnBX" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwgE" resolve="iterable" />
                  </node>
                  <node concept="16syzq" id="5JQC2dnJX$S" role="3PaCim">
                    <ref role="16sUi3" node="5JQC2dmPwgD" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwgN" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwgO" role="3cqZAp">
              <node concept="10QFUN" id="5JQC2dmPwgP" role="3cqZAk">
                <node concept="37vLTw" id="5JQC2dmPwgQ" role="10QFUP">
                  <ref role="3cqZAo" node="5JQC2dmPwgE" resolve="iterable" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPwgR" role="10QFUM">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="16syzq" id="5JQC2dmPwgS" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPwgD" resolve="T" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwgY" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="16syzq" id="5JQC2dmPwgZ" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwgD" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwh0" role="jymVt">
      <property role="TrG5h" value="annotateEmptyStrings" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwh1" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwh2" role="3clF46">
        <property role="TrG5h" value="items" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwh3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="16syzq" id="5JQC2dmPwh4" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwh5" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwh6" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnGjj8" role="3clFbw">
            <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
            <ref role="37wK5l" to="3o3z:~Iterables.contains(java.lang.Iterable,java.lang.Object):boolean" resolve="contains" />
            <node concept="37vLTw" id="5JQC2dnGjj9" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwh2" resolve="items" />
            </node>
            <node concept="Xl_RD" id="5JQC2dnGjja" role="37wK5m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwhI" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwhJ" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwhK" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPwhL" role="3cqZAk">
                  <ref role="3cqZAo" node="5JQC2dmPwh2" resolve="items" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwhb" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPwhd" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwhc" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="annotatedItems" />
                <node concept="3uibUv" id="5JQC2dmPwhe" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="16syzq" id="5JQC2dmPwhf" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dnJnl3" role="33vP2m">
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                </node>
              </node>
            </node>
            <node concept="1DcWWT" id="5JQC2dmPwhh" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPwhF" role="1DdaDG">
                <ref role="3cqZAo" node="5JQC2dmPwh2" resolve="items" />
              </node>
              <node concept="3cpWsn" id="5JQC2dmPwhC" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="item" />
                <node concept="16syzq" id="5JQC2dmPwhE" role="1tU5fm">
                  <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwhj" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmPwhk" role="3cqZAp">
                  <node concept="2YIFZM" id="5JQC2dnK5VV" role="3clFbw">
                    <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                    <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                    <node concept="37vLTw" id="5JQC2dnK5VW" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwhC" resolve="item" />
                    </node>
                    <node concept="Xl_RD" id="5JQC2dnK5VX" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                  <node concept="9aQIb" id="5JQC2dmPwhz" role="9aQIa">
                    <node concept="3clFbS" id="5JQC2dmPwh$" role="9aQI4">
                      <node concept="3clFbF" id="5JQC2dmPwh_" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmPA$5" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmPA$4" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPwhc" resolve="annotatedItems" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPA$6" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                            <node concept="37vLTw" id="5JQC2dmPA$7" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwhC" resolve="item" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwhp" role="3clFbx">
                    <node concept="3cpWs8" id="5JQC2dmPwhr" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPwhq" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="newItem" />
                        <node concept="16syzq" id="5JQC2dmPwhs" role="1tU5fm">
                          <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
                        </node>
                        <node concept="10QFUN" id="5JQC2dmPwht" role="33vP2m">
                          <node concept="37vLTw" id="5JQC2dmPwhu" role="10QFUP">
                            <ref role="3cqZAo" node="5JQC2dmPw9j" resolve="HUMAN_UNDERSTANDABLE_EMPTY_STRING" />
                          </node>
                          <node concept="16syzq" id="5JQC2dmPwhv" role="10QFUM">
                            <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPwhw" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPA$a" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPA$9" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwhc" resolve="annotatedItems" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPA$b" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPA$c" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPwhq" resolve="newItem" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPwhG" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPwhH" role="3cqZAk">
                <ref role="3cqZAo" node="5JQC2dmPwhc" resolve="annotatedItems" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPwhM" role="3clF45">
        <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
        <node concept="16syzq" id="5JQC2dmPwhN" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwh1" resolve="T" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPwhO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwiV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiW" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns an iterable with all empty strings replaced by a non-empty human understandable" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwiY" role="1dT_Ay">
            <property role="1dT_AB" value=" indicator for an empty string." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwiZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwj0" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwj1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwj2" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Returns the given iterable if it contains no empty strings." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$9Z">
    <property role="TrG5h" value="PrimitiveDoubleArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmP$a0" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmP$bS" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmP$bT" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmP$9Z" resolve="PrimitiveDoubleArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmP$bV" role="11_B2D">
        <node concept="10P55v" id="5JQC2dmP$bU" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$l$" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$lO" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$lP" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code double[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$lQ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$lR" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$lS" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$lT" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmP$cq" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$cr" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$cs" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$ct" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$cu" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$cv" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmP$cx" role="1tU5fm">
          <node concept="10P55v" id="5JQC2dmP$cw" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$cy" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPA$d" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPA$e" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$cs" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPA$f" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$cu" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$cA" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$cB" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$cC" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$cD" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmP$cE" role="3cqZAk">
            <property role="Xl_RC" value="double" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmP$cF" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$cG" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$cH" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$cI" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$cJ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$cK" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doEo$p" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
            <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="5JQC2doEo$q" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmP$cN" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$cO" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmP$cP" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$cQ" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$cR" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$cS" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$cT" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doErEy" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$cU" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$cW" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$cV" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmP$cY" role="1tU5fm">
              <node concept="10P55v" id="5JQC2dmP$cX" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmP$cZ" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$d0" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmP$d1" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP$d2" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmP$cV" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$d3" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmP$cS" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$d5" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmP$d6" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmP$mB" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TjS" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TjT" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$d_" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$dA" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$dx" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmP$dy" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmP$dz" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmP$d$" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$cS" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$dt" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmP$dv" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$d8" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmP$da" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$d9" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmP$dc" role="1tU5fm">
                  <node concept="10P55v" id="5JQC2dmP$db" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmP$dd" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP$de" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$cS" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmP$dg" role="10QFUM">
                    <node concept="10P55v" id="5JQC2dmP$df" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$dh" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmP$di" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPA$Z" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(double[],double[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPA_0" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$cV" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPA_1" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$d9" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$dn" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$do" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$dp" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmP$dq" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doEOI5" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doEOI6" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$d9" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$dB" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$dC" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$dD" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$lU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$lV" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$lW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$lX" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$lY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$lZ" role="1dT_Ay">
            <property role="1dT_AB" value=" in the actual array, and in the same position, with element equality defined the same way that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m1" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Arrays.equals(double[], double[])} and {@link Double#equals(Object)} define it (which is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m3" role="1dT_Ay">
            <property role="1dT_AB" value=" different to the way that the {@code ==} operator on primitive {@code double} defines it). This" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m5" role="1dT_Ay">
            <property role="1dT_AB" value=" method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing any kind of arithmetic: use" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m7" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #usingTolerance} with a suitable tolerance in that case, e.g. {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m9" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualArray).usingTolerance(1.0e-10).containsExactly(expectedArray).inOrder()}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ma" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mb" role="1dT_Ay">
            <property role="1dT_AB" value=" (Remember that the exact result of floating point arithmetic is sensitive to apparently trivial" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$md" role="1dT_Ay">
            <property role="1dT_AB" value=" changes such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$me" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mf" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mh" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mj" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying values without modification from its input or returning" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ml" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant values." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mn" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mp" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mr" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ms" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mt" role="1dT_Ay">
            <property role="1dT_AB" value="       {@link Double#NaN} to be equal to themselves (contrast with {@code #usingTolerance(0.0)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mv" role="1dT_Ay">
            <property role="1dT_AB" value="       which does not)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mx" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0} to be equal to {@code 0.0} (contrast with" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$my" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mz" role="1dT_Ay">
            <property role="1dT_AB" value="       {@code #usingTolerance(0.0) which does)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$m$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$m_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$dE" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$dF" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$dG" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$dH" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$dI" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmP$dJ" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$dK" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$dM" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$dL" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmP$dO" role="1tU5fm">
              <node concept="10P55v" id="5JQC2dmP$dN" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmP$dP" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$dQ" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmP$dR" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP$dS" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmP$dL" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$dT" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmP$dG" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$dV" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmP$dW" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmP$n1" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TjU" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TjV" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$fa" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$fb" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$f6" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmP$f7" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmP$f8" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmP$f9" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$dG" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$f2" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmP$f4" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$dY" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmP$e0" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$dZ" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmP$e2" role="1tU5fm">
                  <node concept="10P55v" id="5JQC2dmP$e1" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmP$e3" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP$e4" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$dG" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmP$e6" role="10QFUM">
                    <node concept="10P55v" id="5JQC2dmP$e5" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$e7" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmP$e8" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPA_5" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPA_4" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$dZ" resolve="expectedArray" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$p" role="2OqNvi" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPA_9" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPA_8" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$dL" resolve="actual" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$q" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$ec" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$ed" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$ee" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$ef" role="37wK5m">
                      <property role="Xl_RC" value="Arrays are of different lengths. expected: %s, actual %s" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doEU5m" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doEU5n" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$dZ" resolve="expectedArray" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2doEAXm" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doEAXn" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$dL" resolve="actual" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$ek" role="3cqZAp" />
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmP$em" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$el" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="unequalIndices" />
                <node concept="3uibUv" id="5JQC2dmP$en" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmP$eo" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5JQC2dmPA_d" role="33vP2m">
                  <node concept="1pGfFk" id="5JQC2dmPA_e" role="2ShVmc">
                    <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                    <node concept="3uibUv" id="5JQC2doEzGS" role="1pMfVU">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="1Dw8fO" id="5JQC2dmP$er" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$es" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="i" />
                <node concept="10Oyi0" id="5JQC2dmP$eu" role="1tU5fm" />
                <node concept="3cmrfG" id="5JQC2dmP$ev" role="33vP2m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
              <node concept="3eOVzh" id="5JQC2dmP$ew" role="1Dwp0S">
                <node concept="37vLTw" id="5JQC2dmP$ex" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$es" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPA_i" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPA_h" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$dZ" resolve="expectedArray" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$r" role="2OqNvi" />
                </node>
              </node>
              <node concept="3uNrnE" id="5JQC2dmP$e$" role="1Dwrff">
                <node concept="37vLTw" id="5JQC2dmP$e_" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmP$es" resolve="i" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$eB" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmP$eC" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmP$eD" role="3clFbw">
                    <node concept="2YIFZM" id="5JQC2dmQaRW" role="3fr31v">
                      <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                      <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
                      <node concept="AH0OO" id="5JQC2dmQaRX" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQaRY" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmP$dL" resolve="actual" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQaRZ" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmP$es" resolve="i" />
                        </node>
                      </node>
                      <node concept="AH0OO" id="5JQC2dmQaS0" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQaS1" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmP$dZ" resolve="expectedArray" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQaS2" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmP$es" resolve="i" />
                        </node>
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQaS3" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$dI" resolve="tolerance" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$eN" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmP$eO" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPA_m" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPA_l" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$el" resolve="unequalIndices" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPA_n" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPA_o" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$es" resolve="i" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$eR" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmP$eS" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPA_r" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPA_q" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$el" resolve="unequalIndices" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPA_s" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$eV" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$eW" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$eX" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmP$eY" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doECZI" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doECZJ" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$dZ" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$f1" role="3cqZAp" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$fc" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$fd" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$fe" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$mC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mD" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mF" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is within {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mH" role="1dT_Ay">
            <property role="1dT_AB" value=" tolerance} of each element in the subject, and in the same position." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mJ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mL" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Behaviour for non-finite values ({@link Double#POSITIVE_INFINITY POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mN" role="1dT_Ay">
            <property role="1dT_AB" value=" Double#NEGATIVE_INFINITY NEGATIVE_INFINITY}, and {@link Double#NaN NaN}) is as follows: If the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mP" role="1dT_Ay">
            <property role="1dT_AB" value=" subject and the object of the assertion are the same array, the test will pass. If not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mR" role="1dT_Ay">
            <property role="1dT_AB" value=" (including if one is a clone of the other) then non-finite values are considered not equal so" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mT" role="1dT_Ay">
            <property role="1dT_AB" value=" the any non-finite value in either argument will cause the test to fail." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mV" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mX" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated use {@code usingTolerance(someTolerance).containsExactly(someValues).inOrder()}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$mY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$mZ" role="1dT_Ay">
            <property role="1dT_AB" value="     noting the different behaviour for non-finite values" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$ff" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$fg" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$fh" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$fi" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doEB8n" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$fj" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$fl" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$fk" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmP$fn" role="1tU5fm">
              <node concept="10P55v" id="5JQC2dmP$fm" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmP$fo" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$fS" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$fT" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$fR" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmP$nr" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8TjW" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8TjX" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TjY" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TjZ" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk0" role="1PaTwD">
                    <property role="3oM_SC" value="double[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk1" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk2" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk3" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk4" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk5" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk6" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk7" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tk8" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$fN" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmP$fP" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$fq" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmP$fs" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$fr" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmP$fu" role="1tU5fm">
                  <node concept="10P55v" id="5JQC2dmP$ft" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmP$fv" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP$fw" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$fh" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmP$fy" role="10QFUM">
                    <node concept="10P55v" id="5JQC2dmP$fx" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$fz" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmP$f$" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmP$f_" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmP$fA" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmP$fk" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP$fB" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmP$fh" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPA_v" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(double[],double[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPA_w" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$fk" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPA_x" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$fr" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$fG" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$fH" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$fI" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$fJ" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$fK" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doEVBl" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doEVBm" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$fr" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$fU" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$fV" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$fW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$n2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$n3" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$n4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$n5" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$n6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$n7" role="1dT_Ay">
            <property role="1dT_AB" value=" in the actual array, and in the same position, with element equality defined the same way that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$n8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$n9" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Arrays.equals(double[], double[])} and {@link Double#equals(Object)} define it (which is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$na" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nb" role="1dT_Ay">
            <property role="1dT_AB" value=" different to the way that the {@code ==} operator on primitive {@code double} defines it). See" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nd" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #isEqualTo(Object)} for advice on when exact equality is recommended." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ne" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nf" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ng" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nh" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ni" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nj" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nl" role="1dT_Ay">
            <property role="1dT_AB" value="       {@link Double#NaN} to be equal to themselves." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nn" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0} to be equal to {@code 0.0}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$no" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$np" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$fX" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$fY" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$fZ" role="3clF46">
        <property role="TrG5h" value="expectedArray" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$g0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$g1" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmP$g2" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$g3" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$g5" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$g4" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmP$g7" role="1tU5fm">
              <node concept="10P55v" id="5JQC2dmP$g6" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmP$g8" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$hp" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$hq" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$ho" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmP$nR" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tk9" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tka" role="1PaTwD">
                    <property role="3oM_SC" value="Unequal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tkb" role="1PaTwD">
                    <property role="3oM_SC" value="since" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tkc" role="1PaTwD">
                    <property role="3oM_SC" value="they" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tkd" role="1PaTwD">
                    <property role="3oM_SC" value="are" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tke" role="1PaTwD">
                    <property role="3oM_SC" value="of" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tkf" role="1PaTwD">
                    <property role="3oM_SC" value="different" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tkg" role="1PaTwD">
                    <property role="3oM_SC" value="types." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$hk" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmP$hm" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$ga" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmP$gc" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$gb" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expected" />
                <node concept="10Q1$e" id="5JQC2dmP$ge" role="1tU5fm">
                  <node concept="10P55v" id="5JQC2dmP$gd" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmP$gf" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP$gg" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$fZ" resolve="expectedArray" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmP$gi" role="10QFUM">
                    <node concept="10P55v" id="5JQC2dmP$gh" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$gj" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmP$gk" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmP$gl" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$g4" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$gm" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$go" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$gp" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$gq" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$gr" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$gs" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doENdV" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doENdW" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$gv" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$gw" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmP$gx" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPA_A" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPA__" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$s" role="2OqNvi" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPA_E" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPA_D" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$g4" resolve="actual" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$t" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$g_" role="3clFbx">
                <node concept="3cpWs6" id="5JQC2dmP$gA" role="3cqZAp" />
                <node concept="3SKdUt" id="5JQC2dmP$nP" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tkh" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tki" role="1PaTwD">
                      <property role="3oM_SC" value="Unequal-lengthed" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tkj" role="1PaTwD">
                      <property role="3oM_SC" value="arrays" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tkk" role="1PaTwD">
                      <property role="3oM_SC" value="are" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tkl" role="1PaTwD">
                      <property role="3oM_SC" value="not" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tkm" role="1PaTwD">
                      <property role="3oM_SC" value="equal." />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmP$gC" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$gB" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="unequalIndices" />
                <node concept="3uibUv" id="5JQC2dmP$gD" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmP$gE" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5JQC2dmPA_G" role="33vP2m">
                  <node concept="1pGfFk" id="5JQC2dmPA_H" role="2ShVmc">
                    <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                    <node concept="3uibUv" id="5JQC2doELxE" role="1pMfVU">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="1Dw8fO" id="5JQC2dmP$gH" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$gI" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="i" />
                <node concept="10Oyi0" id="5JQC2dmP$gK" role="1tU5fm" />
                <node concept="3cmrfG" id="5JQC2dmP$gL" role="33vP2m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
              <node concept="3eOVzh" id="5JQC2dmP$gM" role="1Dwp0S">
                <node concept="37vLTw" id="5JQC2dmP$gN" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$gI" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPA_L" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPA_K" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$u" role="2OqNvi" />
                </node>
              </node>
              <node concept="3uNrnE" id="5JQC2dmP$gQ" role="1Dwrff">
                <node concept="37vLTw" id="5JQC2dmP$gR" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmP$gI" resolve="i" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$gT" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmP$gU" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmP$gV" role="3clFbw">
                    <node concept="2YIFZM" id="5JQC2dmQaS4" role="3fr31v">
                      <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                      <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
                      <node concept="AH0OO" id="5JQC2dmQaS5" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQaS6" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmP$g4" resolve="actual" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQaS7" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmP$gI" resolve="i" />
                        </node>
                      </node>
                      <node concept="AH0OO" id="5JQC2dmQaS8" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQaS9" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQaSa" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmP$gI" resolve="i" />
                        </node>
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQaSb" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$g1" resolve="tolerance" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$h5" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmP$h6" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPA_P" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPA_O" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$gB" resolve="unequalIndices" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPA_Q" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPA_R" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$gI" resolve="i" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$h9" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPA_U" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPA_T" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$gB" resolve="unequalIndices" />
                </node>
                <node concept="liA8E" id="5JQC2dmPA_V" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$hc" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$hd" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$he" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$hf" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$hg" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doFeXy" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                      <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doFeXz" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$gb" resolve="expected" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$hj" role="3cqZAp" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$hr" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$hs" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$ht" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$ns" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nt" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nv" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is within {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nx" role="1dT_Ay">
            <property role="1dT_AB" value=" tolerance} of each element in the subject, and in the same position." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ny" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nz" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$n$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$n_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Behaviour for non-finite values ({@link Double#POSITIVE_INFINITY POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nB" role="1dT_Ay">
            <property role="1dT_AB" value=" Double#NEGATIVE_INFINITY NEGATIVE_INFINITY}, and {@link Double#NaN NaN}) is as follows: If the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nD" role="1dT_Ay">
            <property role="1dT_AB" value=" subject and the object of the assertion are the same array, the test will fail. If not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nF" role="1dT_Ay">
            <property role="1dT_AB" value=" (including if one is a clone of the other) then non-finite values are considered not equal so" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nH" role="1dT_Ay">
            <property role="1dT_AB" value=" the any non-finite value in either argument will cause the test to pass." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nJ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nL" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Write a for loop over the values looking for mismatches (see this implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nN" role="1dT_Ay">
            <property role="1dT_AB" value="     for an example)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmP$a1" role="jymVt">
      <property role="TrG5h" value="TolerantPrimitiveDoubleArrayComparison" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="true" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmP$a2" role="1B3o_S" />
      <node concept="3UR2Jj" id="5JQC2dmP$aN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$nS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nT" role="1dT_Ay">
            <property role="1dT_AB" value="A partially specified proposition about an approximate relationship to a {@code double[]}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$nU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$nV" role="1dT_Ay">
            <property role="1dT_AB" value="subject using a tolerance." />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmP$a3" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$a4" role="3clF45" />
        <node concept="3clFbS" id="5JQC2dmP$a5" role="3clF47" />
        <node concept="3Tm6S6" id="5JQC2dmP$a6" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$a7" role="jymVt">
        <property role="TrG5h" value="of" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmP$a8" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="8X2XB" id="5JQC2dmP$aa" role="1tU5fm">
            <node concept="10P55v" id="5JQC2dmP$a9" role="8Xvag" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$ab" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$ac" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmP$ad" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmP$aj" resolve="ofElementsIn" />
              <node concept="2YIFZM" id="5JQC2doFGfr" role="37wK5m">
                <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                <node concept="37vLTw" id="5JQC2doFGfs" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$a8" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$ag" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$ah" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmP$ai" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmP$nW" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$nX" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the values in the subject were expected to be within the tolerance of the given" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$nY" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$nZ" role="1dT_Ay">
              <property role="1dT_AB" value="values but were not &lt;i&gt;or&lt;/i&gt; if they were expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$o0" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$o1" role="1dT_Ay">
              <property role="1dT_AB" value="were. The subject and tolerance are specified earlier in the fluent call chain." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$aj" role="jymVt">
        <property role="TrG5h" value="ofElementsIn" />
        <property role="1EzhhJ" value="true" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmP$ak" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$al" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmP$an" role="11_B2D">
              <node concept="3uibUv" id="5JQC2dmP$am" role="3qUE_r">
                <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$ao" role="3clF47" />
        <node concept="3Tm1VV" id="5JQC2dmP$ap" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$aq" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmP$ar" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmP$o2" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$o3" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the values in the subject were expected to be within the tolerance of the given" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$o4" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$o5" role="1dT_Ay">
              <property role="1dT_AB" value="values but were not &lt;i&gt;or&lt;/i&gt; if they were expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$o6" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$o7" role="1dT_Ay">
              <property role="1dT_AB" value="were. The subject and tolerance are specified earlier in the fluent call chain. The values" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$o8" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$o9" role="1dT_Ay">
              <property role="1dT_AB" value="will be cast to doubles if necessary, which might lose precision." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$as" role="jymVt">
        <property role="TrG5h" value="equals" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$at" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmP$au" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$av" role="3clF46">
          <property role="TrG5h" value="o" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$aw" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmP$ax" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$ay" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$a_" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPAA0" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPAA_" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPAAA" role="37wK5m">
                  <property role="Xl_RC" value="If you meant to compare double arrays, use .of() or .ofElementsIn() instead." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$aA" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmP$aB" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmP$aC" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmP$oa" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$ob" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$oc" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$od" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported on" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$oe" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$of" role="1dT_Ay">
              <property role="1dT_AB" value="    TolerantPrimitiveDoubleArrayComparison. If you meant to compare double arrays, use {@link" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$og" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$oh" role="1dT_Ay">
              <property role="1dT_AB" value="    #of} or {@link #ofElementsIn} instead." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$aD" role="jymVt">
        <property role="TrG5h" value="hashCode" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$aE" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmP$aF" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$aG" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$aJ" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPAAB" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPAAP" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPAAQ" role="37wK5m">
                  <property role="Xl_RC" value="Subject.hashCode() is not supported." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$aK" role="1B3o_S" />
        <node concept="10Oyi0" id="5JQC2dmP$aL" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmP$aM" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmP$oi" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$oj" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$ok" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$ol" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported on" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmP$om" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmP$on" role="1dT_Ay">
              <property role="1dT_AB" value="    TolerantPrimitiveDoubleArrayComparison" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$hu" role="jymVt">
      <property role="TrG5h" value="hasValuesWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$hv" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$hw" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10P55v" id="5JQC2dmP$hx" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$hy" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$hz" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$h$" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmP$h_" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmP$hA" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmP$a1" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
                <ref role="37wK5l" node="5JQC2dmP$a3" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
                <node concept="3clFb_" id="5JQC2dmP$hB" role="jymVt">
                  <property role="TrG5h" value="ofElementsIn" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmP$hC" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmP$hD" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmP$hE" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                      <node concept="3qUE_q" id="5JQC2dmP$hG" role="11_B2D">
                        <node concept="3uibUv" id="5JQC2dmP$hF" role="3qUE_r">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$hH" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmP$hI" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmQaSc" role="3clFbG">
                        <ref role="1Pybhc" node="5JQC2dmPzId" resolve="DoubleSubject" />
                        <ref role="37wK5l" node="5JQC2dmPzL4" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmQaSd" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$hw" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$hM" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$hL" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="10Q1$e" id="5JQC2dmP$hO" role="1tU5fm">
                          <node concept="10P55v" id="5JQC2dmP$hN" role="10Q1$1" />
                        </node>
                        <node concept="2YIFZM" id="5JQC2doErU4" role="33vP2m">
                          <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                          <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                          <node concept="1rXfSq" id="5JQC2doErU5" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$hS" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$hR" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="mismatches" />
                        <node concept="3uibUv" id="5JQC2dmP$hT" role="1tU5fm">
                          <ref role="3uigEE" to="33ny:~List" resolve="List" />
                          <node concept="3uibUv" id="5JQC2dmP$hU" role="11_B2D">
                            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                          </node>
                        </node>
                        <node concept="2ShNRf" id="5JQC2dmPAAR" role="33vP2m">
                          <node concept="1pGfFk" id="5JQC2dmPAAS" role="2ShVmc">
                            <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                            <node concept="3uibUv" id="5JQC2doFOk4" role="1pMfVU">
                              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$hY" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$hX" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedCount" />
                        <node concept="10Oyi0" id="5JQC2dmP$hZ" role="1tU5fm" />
                        <node concept="3cmrfG" id="5JQC2dmP$i0" role="33vP2m">
                          <property role="3cmrfH" value="0" />
                        </node>
                      </node>
                    </node>
                    <node concept="1DcWWT" id="5JQC2dmP$i1" role="3cqZAp">
                      <node concept="37vLTw" id="5JQC2dmP$ir" role="1DdaDG">
                        <ref role="3cqZAo" node="5JQC2dmP$hD" resolve="expected" />
                      </node>
                      <node concept="3cpWsn" id="5JQC2dmP$io" role="1Duv9x">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedValue" />
                        <node concept="3uibUv" id="5JQC2dmP$iq" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$i3" role="2LFqv$">
                        <node concept="3SKdUt" id="5JQC2dmP$oP" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Tkn" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Tko" role="1PaTwD">
                              <property role="3oM_SC" value="if" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkp" role="1PaTwD">
                              <property role="3oM_SC" value="expected" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkq" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkr" role="1PaTwD">
                              <property role="3oM_SC" value="longer" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tks" role="1PaTwD">
                              <property role="3oM_SC" value="than" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkt" role="1PaTwD">
                              <property role="3oM_SC" value="actual," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tku" role="1PaTwD">
                              <property role="3oM_SC" value="we" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkv" role="1PaTwD">
                              <property role="3oM_SC" value="can" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkw" role="1PaTwD">
                              <property role="3oM_SC" value="skip" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkx" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tky" role="1PaTwD">
                              <property role="3oM_SC" value="excess" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tkz" role="1PaTwD">
                              <property role="3oM_SC" value="values:" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tk$" role="1PaTwD">
                              <property role="3oM_SC" value="this" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tk_" role="1PaTwD">
                              <property role="3oM_SC" value="case" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkA" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkB" role="1PaTwD">
                              <property role="3oM_SC" value="covered" />
                            </node>
                          </node>
                        </node>
                        <node concept="3SKdUt" id="5JQC2dmP$oR" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8TkC" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8TkD" role="1PaTwD">
                              <property role="3oM_SC" value="by" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkE" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkF" role="1PaTwD">
                              <property role="3oM_SC" value="length" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkG" role="1PaTwD">
                              <property role="3oM_SC" value="check" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkH" role="1PaTwD">
                              <property role="3oM_SC" value="below" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmP$i4" role="3cqZAp">
                          <node concept="1Wc70l" id="5JQC2dmP$i5" role="3clFbw">
                            <node concept="3eOVzh" id="5JQC2dmP$i6" role="3uHU7B">
                              <node concept="37vLTw" id="5JQC2dmP$i7" role="3uHU7B">
                                <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmPAAZ" role="3uHU7w">
                                <node concept="37vLTw" id="5JQC2dmPAAY" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmP$hL" resolve="actual" />
                                </node>
                                <node concept="1Rwk04" id="5JQC2dmQb$v" role="2OqNvi" />
                              </node>
                            </node>
                            <node concept="3fqX7Q" id="5JQC2dmP$i9" role="3uHU7w">
                              <node concept="2YIFZM" id="5JQC2dmQaSe" role="3fr31v">
                                <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                                <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
                                <node concept="AH0OO" id="5JQC2dmQaSf" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmQaSg" role="AHHXb">
                                    <ref role="3cqZAo" node="5JQC2dmP$hL" resolve="actual" />
                                  </node>
                                  <node concept="37vLTw" id="5JQC2dmQaSh" role="AHEQo">
                                    <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                                  </node>
                                </node>
                                <node concept="2OqwBi" id="5JQC2dmQaSi" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmQaSj" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmP$io" resolve="expectedValue" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2dmQaSk" role="2OqNvi">
                                    <ref role="37wK5l" to="wyt6:~Number.doubleValue():double" resolve="doubleValue" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2dmQaSl" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmP$hw" resolve="tolerance" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmP$ih" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmP$ii" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmPAB9" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmPAB8" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmP$hR" resolve="mismatches" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPABa" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                                  <node concept="37vLTw" id="5JQC2dmPABb" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmP$il" role="3cqZAp">
                          <node concept="3uNrnE" id="5JQC2dmP$im" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmP$in" role="2$L3a6">
                              <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$is" role="3cqZAp">
                      <node concept="3y3z36" id="5JQC2dmP$it" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPABf" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPABe" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmP$hL" resolve="actual" />
                          </node>
                          <node concept="1Rwk04" id="5JQC2dmQb$w" role="2OqNvi" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$iv" role="3uHU7w">
                          <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$ix" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmP$iy" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmP$iz" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmP$i$" role="37wK5m">
                              <property role="Xl_RC" value="Not true that %s has values within %s of &lt;%s&gt;. Expected length &lt;%s&gt; but got &lt;%s&gt;" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmP$i_" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$iA" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$hw" resolve="tolerance" />
                            </node>
                            <node concept="2YIFZM" id="5JQC2doE_q4" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="5JQC2doE_q5" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$hD" resolve="expected" />
                              </node>
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$iD" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$hX" resolve="expectedCount" />
                            </node>
                            <node concept="2OqwBi" id="5JQC2dmPABm" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPABl" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmP$hL" resolve="actual" />
                              </node>
                              <node concept="1Rwk04" id="5JQC2dmQb$x" role="2OqNvi" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmP$iF" role="3cqZAp" />
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$iG" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmP$iH" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPABr" role="3fr31v">
                          <node concept="37vLTw" id="5JQC2dmPABq" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmP$hR" resolve="mismatches" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPABs" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$iK" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmP$iL" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmP$iM" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                            <node concept="3cpWs3" id="5JQC2dmP$iN" role="37wK5m">
                              <node concept="3cpWs3" id="5JQC2dmP$iO" role="3uHU7B">
                                <node concept="Xl_RD" id="5JQC2dmP$iP" role="3uHU7B">
                                  <property role="Xl_RC" value="has values within " />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmP$iQ" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmP$hw" resolve="tolerance" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmP$iR" role="3uHU7w">
                                <property role="Xl_RC" value=" of" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="5JQC2doFyc8" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="5JQC2doFyc9" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$hD" resolve="expected" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmP$iU" role="37wK5m">
                              <property role="Xl_RC" value="differs at indexes" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$iV" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$hR" resolve="mismatches" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmP$iW" role="3cqZAp" />
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmP$iX" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmP$iY" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$iZ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$j0" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$a1" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$j1" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$oo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$op" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject and object are arrays both (a) of the same length, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$or" role="1dT_Ay">
            <property role="1dT_AB" value=" (b) where the values at all corresponding positions in each array are finite values within" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$os" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ot" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code tolerance} of each other, that is {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ou" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ov" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actual[i]).isWithin(tolerance).of(expected[i])} passes for all {@code i} (see the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ow" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ox" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link DoubleSubject#isWithin isWithin} assertion for doubles)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oz" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$o$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$o_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if any value in either the subject array or the object array is {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oB" role="1dT_Ay">
            <property role="1dT_AB" value=" Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oD" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oF" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oH" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oJ" role="1dT_Ay">
            <property role="1dT_AB" value="     Double#NaN}, {@link Double#POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oL" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Use {@link #usingTolerance}, e.g. {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oN" role="1dT_Ay">
            <property role="1dT_AB" value="     assertThat(doubleArray).usingTolerance(1e-5).containsExactly(1.2, 3.4, 5.6).inOrder();}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$j2" role="jymVt">
      <property role="TrG5h" value="hasValuesNotWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$j3" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$j4" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10P55v" id="5JQC2dmP$j5" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$j6" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$j7" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$j8" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmP$j9" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmP$ja" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmP$a1" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
                <ref role="37wK5l" node="5JQC2dmP$a3" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
                <node concept="3clFb_" id="5JQC2dmP$jb" role="jymVt">
                  <property role="TrG5h" value="ofElementsIn" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmP$jc" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmP$jd" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmP$je" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                      <node concept="3qUE_q" id="5JQC2dmP$jg" role="11_B2D">
                        <node concept="3uibUv" id="5JQC2dmP$jf" role="3qUE_r">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$jh" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmP$ji" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmQaSm" role="3clFbG">
                        <ref role="1Pybhc" node="5JQC2dmPzId" resolve="DoubleSubject" />
                        <ref role="37wK5l" node="5JQC2dmPzL4" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmQaSn" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$j4" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$jm" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$jl" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="10Q1$e" id="5JQC2dmP$jo" role="1tU5fm">
                          <node concept="10P55v" id="5JQC2dmP$jn" role="10Q1$1" />
                        </node>
                        <node concept="2YIFZM" id="5JQC2doFBy0" role="33vP2m">
                          <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                          <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                          <node concept="1rXfSq" id="5JQC2doFBy1" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$js" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$jr" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedCount" />
                        <node concept="10Oyi0" id="5JQC2dmP$jt" role="1tU5fm" />
                        <node concept="3cmrfG" id="5JQC2dmP$ju" role="33vP2m">
                          <property role="3cmrfH" value="0" />
                        </node>
                      </node>
                    </node>
                    <node concept="1DcWWT" id="5JQC2dmP$jv" role="3cqZAp">
                      <node concept="37vLTw" id="5JQC2dmP$jQ" role="1DdaDG">
                        <ref role="3cqZAo" node="5JQC2dmP$jd" resolve="expected" />
                      </node>
                      <node concept="3cpWsn" id="5JQC2dmP$jN" role="1Duv9x">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedValue" />
                        <node concept="3uibUv" id="5JQC2dmP$jP" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$jx" role="2LFqv$">
                        <node concept="3SKdUt" id="5JQC2dmP$pn" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8TkI" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8TkJ" role="1PaTwD">
                              <property role="3oM_SC" value="if" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkK" role="1PaTwD">
                              <property role="3oM_SC" value="expected" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkL" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkM" role="1PaTwD">
                              <property role="3oM_SC" value="longer" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkN" role="1PaTwD">
                              <property role="3oM_SC" value="than" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkO" role="1PaTwD">
                              <property role="3oM_SC" value="actual," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkP" role="1PaTwD">
                              <property role="3oM_SC" value="we" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkQ" role="1PaTwD">
                              <property role="3oM_SC" value="can" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkR" role="1PaTwD">
                              <property role="3oM_SC" value="skip" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkS" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkT" role="1PaTwD">
                              <property role="3oM_SC" value="excess" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkU" role="1PaTwD">
                              <property role="3oM_SC" value="values:" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkV" role="1PaTwD">
                              <property role="3oM_SC" value="this" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkW" role="1PaTwD">
                              <property role="3oM_SC" value="case" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkX" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TkY" role="1PaTwD">
                              <property role="3oM_SC" value="covered" />
                            </node>
                          </node>
                        </node>
                        <node concept="3SKdUt" id="5JQC2dmP$pp" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8TkZ" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Tl0" role="1PaTwD">
                              <property role="3oM_SC" value="by" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tl1" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tl2" role="1PaTwD">
                              <property role="3oM_SC" value="length" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tl3" role="1PaTwD">
                              <property role="3oM_SC" value="check" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tl4" role="1PaTwD">
                              <property role="3oM_SC" value="below" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmP$jy" role="3cqZAp">
                          <node concept="1Wc70l" id="5JQC2dmP$jz" role="3clFbw">
                            <node concept="3eOVzh" id="5JQC2dmP$j$" role="3uHU7B">
                              <node concept="37vLTw" id="5JQC2dmP$j_" role="3uHU7B">
                                <ref role="3cqZAo" node="5JQC2dmP$jr" resolve="expectedCount" />
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmPAB$" role="3uHU7w">
                                <node concept="37vLTw" id="5JQC2dmPABz" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmP$jl" resolve="actual" />
                                </node>
                                <node concept="1Rwk04" id="5JQC2dmQb$y" role="2OqNvi" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="5JQC2dmQaSo" role="3uHU7w">
                              <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                              <ref role="37wK5l" node="5JQC2dmPwOW" resolve="notEqualWithinTolerance" />
                              <node concept="AH0OO" id="5JQC2dmQaSp" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmQaSq" role="AHHXb">
                                  <ref role="3cqZAo" node="5JQC2dmP$jl" resolve="actual" />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmQaSr" role="AHEQo">
                                  <ref role="3cqZAo" node="5JQC2dmP$jr" resolve="expectedCount" />
                                </node>
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmQaSs" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmQaSt" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmP$jN" resolve="expectedValue" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmQaSu" role="2OqNvi">
                                  <ref role="37wK5l" to="wyt6:~Number.doubleValue():double" resolve="doubleValue" />
                                </node>
                              </node>
                              <node concept="37vLTw" id="5JQC2dmQaSv" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$j4" resolve="tolerance" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmP$jI" role="3clFbx">
                            <node concept="3cpWs6" id="5JQC2dmP$jJ" role="3cqZAp" />
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmP$jK" role="3cqZAp">
                          <node concept="3uNrnE" id="5JQC2dmP$jL" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmP$jM" role="2$L3a6">
                              <ref role="3cqZAo" node="5JQC2dmP$jr" resolve="expectedCount" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmP$pr" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tl5" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tl6" role="1PaTwD">
                          <property role="3oM_SC" value="By" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tl7" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tl8" role="1PaTwD">
                          <property role="3oM_SC" value="method" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tl9" role="1PaTwD">
                          <property role="3oM_SC" value="contract," />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tla" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlb" role="1PaTwD">
                          <property role="3oM_SC" value="assertion" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlc" role="1PaTwD">
                          <property role="3oM_SC" value="passes" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tld" role="1PaTwD">
                          <property role="3oM_SC" value="if" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tle" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlf" role="1PaTwD">
                          <property role="3oM_SC" value="lengths" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlg" role="1PaTwD">
                          <property role="3oM_SC" value="are" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlh" role="1PaTwD">
                          <property role="3oM_SC" value="different." />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tli" role="1PaTwD">
                          <property role="3oM_SC" value="This" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlj" role="1PaTwD">
                          <property role="3oM_SC" value="is" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlk" role="1PaTwD">
                          <property role="3oM_SC" value="so" />
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmP$pt" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tll" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tlm" role="1PaTwD">
                          <property role="3oM_SC" value="that" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tln" role="1PaTwD">
                          <property role="3oM_SC" value="hasValuesNotWithin" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlo" role="1PaTwD">
                          <property role="3oM_SC" value="behaves" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlp" role="1PaTwD">
                          <property role="3oM_SC" value="like" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlq" role="1PaTwD">
                          <property role="3oM_SC" value="isNotEqualTo" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlr" role="1PaTwD">
                          <property role="3oM_SC" value="with" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tls" role="1PaTwD">
                          <property role="3oM_SC" value="a" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlt" role="1PaTwD">
                          <property role="3oM_SC" value="tolerance" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlu" role="1PaTwD">
                          <property role="3oM_SC" value="(and" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlv" role="1PaTwD">
                          <property role="3oM_SC" value="different" />
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmP$pv" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tlw" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tlx" role="1PaTwD">
                          <property role="3oM_SC" value="handling" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tly" role="1PaTwD">
                          <property role="3oM_SC" value="of" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tlz" role="1PaTwD">
                          <property role="3oM_SC" value="non-finite" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tl$" role="1PaTwD">
                          <property role="3oM_SC" value="values)." />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$jR" role="3cqZAp">
                      <node concept="3clFbC" id="5JQC2dmP$jS" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPABI" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPABH" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmP$jl" resolve="actual" />
                          </node>
                          <node concept="1Rwk04" id="5JQC2dmQb$z" role="2OqNvi" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$jU" role="3uHU7w">
                          <ref role="3cqZAo" node="5JQC2dmP$jr" resolve="expectedCount" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$jW" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmP$jX" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmP$jY" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                            <node concept="3cpWs3" id="5JQC2dmP$jZ" role="37wK5m">
                              <node concept="3cpWs3" id="5JQC2dmP$k0" role="3uHU7B">
                                <node concept="Xl_RD" id="5JQC2dmP$k1" role="3uHU7B">
                                  <property role="Xl_RC" value="has values not within " />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmP$k2" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmP$j4" resolve="tolerance" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmP$k3" role="3uHU7w">
                                <property role="Xl_RC" value=" of" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="5JQC2doFDjp" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="5JQC2doFDjq" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$jd" resolve="expected" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmP$k6" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmP$k7" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$k8" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$k9" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$a1" resolve="PrimitiveDoubleArraySubject.TolerantPrimitiveDoubleArrayComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$ka" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$oS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oT" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject and object are arrays either (a) of the different" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oV" role="1dT_Ay">
            <property role="1dT_AB" value=" lengths, or (b) of the same length but where the values at at least one corresponding position" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oX" role="1dT_Ay">
            <property role="1dT_AB" value=" in each array are finite values not within {@code tolerance} of each other, that is {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$oY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$oZ" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actual[i]).isNotWithin(tolerance).of(expected[i])} passes for at least one {@code i}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p1" role="1dT_Ay">
            <property role="1dT_AB" value=" (see the {@link DoubleSubject#isNotWithin isNotWithin} assertion for doubles)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p3" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p5" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;In the case (b), a pair of subject and object values will not cause the test to pass if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p7" role="1dT_Ay">
            <property role="1dT_AB" value=" either of them is {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, or {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p9" role="1dT_Ay">
            <property role="1dT_AB" value=" Double#NaN}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pb" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pd" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an exclusive lower bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pf" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ph" role="1dT_Ay">
            <property role="1dT_AB" value="     Double.NaN}, {@code Double.POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pj" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Write a for loop over the values looking for mismatches (see this implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pl" role="1dT_Ay">
            <property role="1dT_AB" value="     for an example)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$kb" role="jymVt">
      <property role="TrG5h" value="usingTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$kc" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmP$kd" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$ke" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$kf" role="3cqZAp">
          <node concept="10Nm6u" id="wYVAq3lnbA" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$kk" role="1B3o_S" />
      <node concept="3uibUv" id="wYVAq3lxpX" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy4m" resolve="IterableSubject.UsingCorrespondence" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$km" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$pw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$px" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the elements of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$py" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pz" role="1dT_Ay">
            <property role="1dT_AB" value=" the array under test) are compared to expected elements using a {@link Correspondence} which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$p$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$p_" role="1dT_Ay">
            <property role="1dT_AB" value=" considers values to correspond if they are finite values within {@code tolerance} of each" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pB" role="1dT_Ay">
            <property role="1dT_AB" value=" other. The proposition is actually executed by continuing the method chain. For example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pD" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pF" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pH" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualDoubleArray).usingTolerance(1.0e-5).contains(3.14159);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pJ" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pL" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pN" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pP" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does not consider values to correspond if either value is infinite or NaN." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pR" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@code -0.0} to be within any tolerance of {@code 0.0}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pT" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The expected values provided later in the chain will be {@link Number} instances which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pV" role="1dT_Ay">
            <property role="1dT_AB" value="       will be converted to doubles, which may result in a loss of precision for some numeric" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pX" role="1dT_Ay">
            <property role="1dT_AB" value="       types." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$pY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$pZ" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The subsequent methods in the chain may throw a {@link NullPointerException} if any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q1" role="1dT_Ay">
            <property role="1dT_AB" value="       expected {@link Number} instance is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q3" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q5" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q7" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the double values of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q9" role="1dT_Ay">
            <property role="1dT_AB" value="     actual and expected numbers, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qb" role="1dT_Ay">
            <property role="1dT_AB" value="     Double#NaN}, {@link Double#POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmP$bW" role="jymVt">
      <property role="TrG5h" value="EXACT_EQUALITY_CORRESPONDENCE" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmP$bX" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
        <node concept="3uibUv" id="5JQC2dmP$bY" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$bZ" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="2ShNRf" id="5JQC2dmP$c0" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmP$c1" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmP$c2" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmPxpk" resolve="Correspondence" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmP$c3" role="jymVt">
              <property role="TrG5h" value="compare" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmP$c4" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmP$c5" role="3clF46">
                <property role="TrG5h" value="actual" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmP$c6" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
                </node>
                <node concept="2AHcQZ" id="5JQC2doFulr" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmP$c7" role="3clF46">
                <property role="TrG5h" value="expected" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmP$c8" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                </node>
                <node concept="2AHcQZ" id="5JQC2doFzHF" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$c9" role="3clF47">
                <node concept="3cpWs6" id="5JQC2dmP$ca" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPADV" role="3cqZAk">
                    <node concept="37vLTw" id="5JQC2dmPADU" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$c5" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPADW" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Double.equals(java.lang.Object):boolean" resolve="equals" />
                      <node concept="1rXfSq" id="5JQC2dmPADX" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmP$kn" resolve="checkedToDouble" />
                        <node concept="37vLTw" id="5JQC2dmPADY" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$c7" resolve="expected" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmP$ce" role="1B3o_S" />
              <node concept="10P_77" id="5JQC2dmP$cf" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmP$cg" role="jymVt">
              <property role="TrG5h" value="toString" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmP$ch" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="3clFbS" id="5JQC2dmP$ci" role="3clF47">
                <node concept="3cpWs6" id="5JQC2dmP$cj" role="3cqZAp">
                  <node concept="Xl_RD" id="5JQC2dmP$ck" role="3cqZAk">
                    <property role="Xl_RC" value="is exactly equal to" />
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmP$cl" role="1B3o_S" />
              <node concept="3uibUv" id="5JQC2dmP$cm" role="3clF45">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="3uibUv" id="5JQC2dmP$cn" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
            </node>
            <node concept="3uibUv" id="5JQC2dmP$co" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$cp" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$kn" role="jymVt">
      <property role="TrG5h" value="checkedToDouble" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$ko" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$kp" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$kq" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$kr" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doEG_p" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2doEG_q" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2doGCZp" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doGH0Q" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="22lmx$" id="5JQC2dmP$kw" role="37wK5m">
              <node concept="22lmx$" id="5JQC2dmP$kx" role="3uHU7B">
                <node concept="22lmx$" id="5JQC2dmP$ky" role="3uHU7B">
                  <node concept="2ZW3vV" id="5JQC2dmP$k_" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP$kz" role="2ZW6bz">
                      <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmP$k$" role="2ZW6by">
                      <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
                    </node>
                  </node>
                  <node concept="2ZW3vV" id="5JQC2dmP$kC" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmP$kA" role="2ZW6bz">
                      <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmP$kB" role="2ZW6by">
                      <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
                    </node>
                  </node>
                </node>
                <node concept="2ZW3vV" id="5JQC2dmP$kF" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmP$kD" role="2ZW6bz">
                    <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmP$kE" role="2ZW6by">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
              </node>
              <node concept="2ZW3vV" id="5JQC2dmP$kI" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmP$kG" role="2ZW6bz">
                  <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                </node>
                <node concept="3uibUv" id="5JQC2dmP$kH" role="2ZW6by">
                  <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmP$kJ" role="37wK5m">
              <property role="Xl_RC" value="Expected value in assertion using exact double equality was of unsupported type %s (it may not have an exact double representation)" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPAE9" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPAE8" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
              </node>
              <node concept="liA8E" id="5JQC2dmPAEa" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$kL" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmP$kO" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP$kM" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
            </node>
            <node concept="3uibUv" id="5JQC2dmP$kN" role="2ZW6by">
              <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$kQ" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$kR" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2doEI4Z" role="3clFbG">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
                <node concept="2dkUwp" id="5JQC2doEI50" role="37wK5m">
                  <node concept="2YIFZM" id="5JQC2doEI51" role="3uHU7B">
                    <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
                    <ref role="37wK5l" to="wyt6:~Math.abs(long):long" resolve="abs" />
                    <node concept="10QFUN" id="5JQC2doEI52" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2doEI53" role="10QFUP">
                        <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                      </node>
                      <node concept="3uibUv" id="5JQC2doEI54" role="10QFUM">
                        <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
                      </node>
                    </node>
                  </node>
                  <node concept="1GRDU$" id="5JQC2doEI55" role="3uHU7w">
                    <node concept="1adDum" id="5JQC2doEI56" role="3uHU7B">
                      <property role="1adDun" value="1L" />
                    </node>
                    <node concept="3cmrfG" id="5JQC2doEI57" role="3uHU7w">
                      <property role="3cmrfH" value="53" />
                    </node>
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2doEI58" role="37wK5m">
                  <property role="Xl_RC" value="Expected value %s in assertion using exact double equality was a long with an absolute value greater than 2^52 which has no exact double representation" />
                </node>
                <node concept="37vLTw" id="5JQC2doEI59" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$l3" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPAEi" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPAEh" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmP$ko" resolve="expected" />
            </node>
            <node concept="liA8E" id="5JQC2dmPAEj" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Number.doubleValue():double" resolve="doubleValue" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$l5" role="1B3o_S" />
      <node concept="10P55v" id="5JQC2dmP$l6" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$l7" role="jymVt">
      <property role="TrG5h" value="usingExactEquality" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$l8" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$l9" role="3cqZAp">
          <node concept="10Nm6u" id="wYVAq3lkIE" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$ld" role="1B3o_S" />
      <node concept="3uibUv" id="wYVAq3lvzL" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy4m" resolve="IterableSubject.UsingCorrespondence" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$lf" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$qc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qd" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the elements of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qf" role="1dT_Ay">
            <property role="1dT_AB" value=" the array under test) are compared to expected elements using a {@link Correspondence} which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qh" role="1dT_Ay">
            <property role="1dT_AB" value=" considers values to correspond if they are exactly equal, with equality defined by {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qj" role="1dT_Ay">
            <property role="1dT_AB" value=" Double#equals}. This method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ql" role="1dT_Ay">
            <property role="1dT_AB" value=" kind of arithmetic: use {@link #usingTolerance} with a suitable tolerance in that case." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qn" role="1dT_Ay">
            <property role="1dT_AB" value=" (Remember that the exact result of floating point arithmetic is sensitive to apparently trivial" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qp" role="1dT_Ay">
            <property role="1dT_AB" value=" changes such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qr" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qt" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qv" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying a value without modification from its input or returning a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qx" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant value. The proposition is actually executed by continuing the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qz" role="1dT_Ay">
            <property role="1dT_AB" value=" method chain. For example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$q$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$q_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;   {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qB" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualDoubleArray).usingExactEquality().contains(3.14159);}&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qD" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qF" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;For convenience, some subsequent methods accept expected values as {@link Number} instances." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qH" role="1dT_Ay">
            <property role="1dT_AB" value=" These numbers must be either of type {@link Double}, {@link Float}, {@link Integer}, or {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qJ" role="1dT_Ay">
            <property role="1dT_AB" value=" Long}, and if they are {@link Long} then their absolute values must not exceed 2^53 which is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qL" role="1dT_Ay">
            <property role="1dT_AB" value=" just over 9e15. (This restriction ensures that the expected values have exact {@link Double}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qN" role="1dT_Ay">
            <property role="1dT_AB" value=" representations: using exact equality makes no sense if they do not.)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qP" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qR" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qT" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qV" role="1dT_Ay">
            <property role="1dT_AB" value="       {@link Double#NaN} to be equal to themselves (contrast with {@code #usingTolerance(0.0)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qX" role="1dT_Ay">
            <property role="1dT_AB" value="       which does not)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$qY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$qZ" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0} to be equal to {@code 0.0} (contrast with" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$r0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$r1" role="1dT_Ay">
            <property role="1dT_AB" value="       {@code #usingTolerance(0.0) which does not)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$r2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$r3" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The subsequent methods in the chain may throw a {@link NullPointerException} if any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$r4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$r5" role="1dT_Ay">
            <property role="1dT_AB" value="       expected {@link Double} instance is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$r6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$r7" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2tJIrI" id="wYVAq3lte4" role="jymVt" />
    <node concept="3clFb_" id="5JQC2dmP$lg" role="jymVt">
      <property role="TrG5h" value="iterableSubject" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$lh" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$li" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmP$lx" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmP$lj" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmP$lk" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$ll" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$lm" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmP$ln" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmP$lo" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmP$lp" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmP$lq" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmP$cH" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmP$lr" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmP$ls" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$lt" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmP$lu" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$lv" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmP$lw" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmP$cH" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$ly" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$lz" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPxxz">
    <property role="TrG5h" value="ObjectArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPxx$" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPxx_" role="16eVyc">
      <property role="TrG5h" value="T" />
    </node>
    <node concept="3uibUv" id="5JQC2dmPxxA" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPxxB" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPxxz" resolve="ObjectArraySubject" />
        <node concept="16syzq" id="5JQC2dmPxxC" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPxx_" resolve="T" />
        </node>
      </node>
      <node concept="10Q1$e" id="5JQC2dmPxxE" role="11_B2D">
        <node concept="16syzq" id="5JQC2dmPxxD" role="10Q1$1">
          <ref role="16sUi3" node="5JQC2dmPxx_" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPxEY" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxFh" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxFi" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code Object[]} and more generically {@code T[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxFj" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxFk" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxFl" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxFm" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber" />
        </node>
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmPxxF" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="typeName" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPxxH" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxxI" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPxxJ" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="numberOfDimensions" />
      <property role="3TUv4t" value="true" />
      <node concept="10Oyi0" id="5JQC2dmPxxL" role="1tU5fm" />
      <node concept="3Tm6S6" id="5JQC2dmPxxM" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPx$z" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPx$$" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPx$_" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPx$A" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPx$B" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx$C" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx$E" role="1tU5fm">
          <node concept="16syzq" id="5JQC2dmPx$D" role="10Q1$1">
            <ref role="16sUi3" node="5JQC2dmPxx_" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx$F" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAGA" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPAGB" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPx$_" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAGC" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPx$B" resolve="o" />
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPx$G" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPx$H" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPx$I" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxxF" resolve="typeName" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPx$J" role="37vLTx">
              <ref role="37wK5l" node="5JQC2dmPx_v" resolve="typeNameFromInstance" />
              <node concept="37vLTw" id="5JQC2dmPx$K" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx$B" resolve="o" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPx$L" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPx$M" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPx$N" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPxxJ" resolve="numberOfDimensions" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPx$O" role="37vLTx">
              <ref role="37wK5l" node="5JQC2dmPxAm" resolve="numberOfDimensions" />
              <node concept="37vLTw" id="5JQC2dmPx$P" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx$B" resolve="o" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPx$T" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPx$U" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPx$V" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx$W" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPx$X" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPxxF" resolve="typeName" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPx$Y" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx$Z" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPx_0" role="jymVt">
      <property role="TrG5h" value="brackets" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPx_1" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPx_2" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx_3" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do62Jl" role="3cqZAk">
            <ref role="1Pybhc" to="gyfg:~Strings" resolve="Strings" />
            <ref role="37wK5l" to="gyfg:~Strings.repeat(java.lang.String,int):java.lang.String" resolve="repeat" />
            <node concept="Xl_RD" id="5JQC2do62Jm" role="37wK5m">
              <property role="Xl_RC" value="[]" />
            </node>
            <node concept="37vLTw" id="5JQC2do62Jn" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxxJ" resolve="numberOfDimensions" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPx_7" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPx_8" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPx_9" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPx_a" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx_b" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do50rj" role="3cqZAk">
            <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
            <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
            <node concept="1rXfSq" id="5JQC2do50rk" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPx_i" resolve="stringableIterable" />
              <node concept="1rXfSq" id="5JQC2do50rl" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPx_f" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx_g" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3qTvmN" id="5JQC2dmPx_h" role="11_B2D" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx_i" role="jymVt">
      <property role="TrG5h" value="stringableIterable" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx_j" role="3clF46">
        <property role="TrG5h" value="array" />
        <property role="3TUv4t" value="false" />
        <node concept="10Q1$e" id="5JQC2dmPx_l" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPx_k" role="10Q1$1">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx_m" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx_n" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do4eJi" role="3cqZAk">
            <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
            <ref role="37wK5l" to="3o3z:~Iterables.transform(java.lang.Iterable,com.google.common.base.Function):java.lang.Iterable" resolve="transform" />
            <node concept="2YIFZM" id="5JQC2do5xWQ" role="37wK5m">
              <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
              <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
              <node concept="37vLTw" id="5JQC2do5xWR" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx_j" resolve="array" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2do4eJl" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxxN" resolve="STRINGIFY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPx_s" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx_t" role="3clF45">
        <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
        <node concept="3qTvmN" id="5JQC2dmPx_u" role="11_B2D" />
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPxxN" role="jymVt">
      <property role="TrG5h" value="STRINGIFY" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPxxO" role="1tU5fm">
        <ref role="3uigEE" to="gyfg:~Function" resolve="Function" />
        <node concept="3uibUv" id="5JQC2dmPxxP" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxxQ" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="2ShNRf" id="5JQC2dmPxxR" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPxxS" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPxxT" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <ref role="1Y3XeK" to="gyfg:~Function" resolve="Function" />
            <node concept="3clFb_" id="5JQC2dmPxxU" role="jymVt">
              <property role="TrG5h" value="apply" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPxxV" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPxxW" role="3clF46">
                <property role="TrG5h" value="input" />
                <property role="3TUv4t" value="false" />
                <node concept="2AHcQZ" id="5JQC2dmPxxX" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPxxY" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxxZ" role="3clF47">
                <node concept="3clFbJ" id="5JQC2dmPxy0" role="3cqZAp">
                  <node concept="1Wc70l" id="5JQC2dmPxy1" role="3clFbw">
                    <node concept="3y3z36" id="5JQC2dmPxy2" role="3uHU7B">
                      <node concept="37vLTw" id="5JQC2dmPxy3" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                      </node>
                      <node concept="10Nm6u" id="5JQC2dmPxy4" role="3uHU7w" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPxy5" role="3uHU7w">
                      <node concept="2OqwBi" id="5JQC2dmPAHC" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPAHB" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAHD" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxy7" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxy9" role="3clFbx">
                    <node concept="3cpWs8" id="5JQC2dmPxyb" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxya" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="iterable" />
                        <node concept="3uibUv" id="5JQC2dmPxyc" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                          <node concept="3qTvmN" id="5JQC2dmPxyd" role="11_B2D" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxye" role="3cqZAp">
                      <node concept="3clFbC" id="5JQC2dmPxyf" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPAHI" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPAHH" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPAHJ" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                          </node>
                        </node>
                        <node concept="2MthRn" id="5JQC2dmPxyj" role="3uHU7w">
                          <node concept="10Q1$e" id="5JQC2dmPxyi" role="2MthRo">
                            <node concept="10P_77" id="5JQC2dmPxyh" role="10Q1$1" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbJ" id="5JQC2dmPxyu" role="9aQIa">
                        <node concept="3clFbC" id="5JQC2dmPxyv" role="3clFbw">
                          <node concept="2OqwBi" id="5JQC2dmPAHO" role="3uHU7B">
                            <node concept="37vLTw" id="5JQC2dmPAHN" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPAHP" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="2MthRn" id="5JQC2dmPxyz" role="3uHU7w">
                            <node concept="10Q1$e" id="5JQC2dmPxyy" role="2MthRo">
                              <node concept="10Oyi0" id="5JQC2dmPxyx" role="10Q1$1" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmPxyI" role="9aQIa">
                          <node concept="3clFbC" id="5JQC2dmPxyJ" role="3clFbw">
                            <node concept="2OqwBi" id="5JQC2dmPAHU" role="3uHU7B">
                              <node concept="37vLTw" id="5JQC2dmPAHT" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmPAHV" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                              </node>
                            </node>
                            <node concept="2MthRn" id="5JQC2dmPxyN" role="3uHU7w">
                              <node concept="10Q1$e" id="5JQC2dmPxyM" role="2MthRo">
                                <node concept="3cpWsb" id="5JQC2dmPxyL" role="10Q1$1" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbJ" id="5JQC2dmPxyY" role="9aQIa">
                            <node concept="3clFbC" id="5JQC2dmPxyZ" role="3clFbw">
                              <node concept="2OqwBi" id="5JQC2dmPAI0" role="3uHU7B">
                                <node concept="37vLTw" id="5JQC2dmPAHZ" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPAI1" role="2OqNvi">
                                  <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                </node>
                              </node>
                              <node concept="2MthRn" id="5JQC2dmPxz3" role="3uHU7w">
                                <node concept="10Q1$e" id="5JQC2dmPxz2" role="2MthRo">
                                  <node concept="10N3zO" id="5JQC2dmPxz1" role="10Q1$1" />
                                </node>
                              </node>
                            </node>
                            <node concept="3clFbJ" id="5JQC2dmPxze" role="9aQIa">
                              <node concept="3clFbC" id="5JQC2dmPxzf" role="3clFbw">
                                <node concept="2OqwBi" id="5JQC2dmPAI6" role="3uHU7B">
                                  <node concept="37vLTw" id="5JQC2dmPAI5" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2dmPAI7" role="2OqNvi">
                                    <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                  </node>
                                </node>
                                <node concept="2MthRn" id="5JQC2dmPxzj" role="3uHU7w">
                                  <node concept="10Q1$e" id="5JQC2dmPxzi" role="2MthRo">
                                    <node concept="10PrrI" id="5JQC2dmPxzh" role="10Q1$1" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbJ" id="5JQC2dmPxzu" role="9aQIa">
                                <node concept="3clFbC" id="5JQC2dmPxzv" role="3clFbw">
                                  <node concept="2OqwBi" id="5JQC2dmPAIc" role="3uHU7B">
                                    <node concept="37vLTw" id="5JQC2dmPAIb" role="2Oq$k0">
                                      <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                    </node>
                                    <node concept="liA8E" id="5JQC2dmPAId" role="2OqNvi">
                                      <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                    </node>
                                  </node>
                                  <node concept="2MthRn" id="5JQC2dmPxzz" role="3uHU7w">
                                    <node concept="10Q1$e" id="5JQC2dmPxzy" role="2MthRo">
                                      <node concept="10P55v" id="5JQC2dmPxzx" role="10Q1$1" />
                                    </node>
                                  </node>
                                </node>
                                <node concept="3clFbJ" id="5JQC2dmPxzI" role="9aQIa">
                                  <node concept="3clFbC" id="5JQC2dmPxzJ" role="3clFbw">
                                    <node concept="2OqwBi" id="5JQC2dmPAIi" role="3uHU7B">
                                      <node concept="37vLTw" id="5JQC2dmPAIh" role="2Oq$k0">
                                        <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                      </node>
                                      <node concept="liA8E" id="5JQC2dmPAIj" role="2OqNvi">
                                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                      </node>
                                    </node>
                                    <node concept="2MthRn" id="5JQC2dmPxzN" role="3uHU7w">
                                      <node concept="10Q1$e" id="5JQC2dmPxzM" role="2MthRo">
                                        <node concept="10OMs4" id="5JQC2dmPxzL" role="10Q1$1" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFbJ" id="5JQC2dmPxzY" role="9aQIa">
                                    <node concept="3clFbC" id="5JQC2dmPxzZ" role="3clFbw">
                                      <node concept="2OqwBi" id="5JQC2dmPAIo" role="3uHU7B">
                                        <node concept="37vLTw" id="5JQC2dmPAIn" role="2Oq$k0">
                                          <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                        </node>
                                        <node concept="liA8E" id="5JQC2dmPAIp" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                        </node>
                                      </node>
                                      <node concept="2MthRn" id="5JQC2dmPx$3" role="3uHU7w">
                                        <node concept="10Q1$e" id="5JQC2dmPx$2" role="2MthRo">
                                          <node concept="10Pfzv" id="5JQC2dmPx$1" role="10Q1$1" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="9aQIb" id="5JQC2dmPx$e" role="9aQIa">
                                      <node concept="3clFbS" id="5JQC2dmPx$f" role="9aQI4">
                                        <node concept="3clFbF" id="5JQC2dmPx$g" role="3cqZAp">
                                          <node concept="37vLTI" id="5JQC2dmPx$h" role="3clFbG">
                                            <node concept="37vLTw" id="5JQC2dmPx$i" role="37vLTJ">
                                              <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                            </node>
                                            <node concept="2YIFZM" id="5JQC2dmPAIt" role="37vLTx">
                                              <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                                              <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                                              <node concept="10QFUN" id="5JQC2dmPAIu" role="37wK5m">
                                                <node concept="37vLTw" id="5JQC2dmPAIv" role="10QFUP">
                                                  <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                                </node>
                                                <node concept="10Q1$e" id="5JQC2dmPAIw" role="10QFUM">
                                                  <node concept="3uibUv" id="5JQC2dmPAIx" role="10Q1$1">
                                                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFbS" id="5JQC2dmPx$5" role="3clFbx">
                                      <node concept="3clFbF" id="5JQC2dmPx$6" role="3cqZAp">
                                        <node concept="37vLTI" id="5JQC2dmPx$7" role="3clFbG">
                                          <node concept="37vLTw" id="5JQC2dmPx$8" role="37vLTJ">
                                            <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                          </node>
                                          <node concept="2YIFZM" id="5JQC2do4Gvj" role="37vLTx">
                                            <ref role="1Pybhc" to="gxwn:~Chars" resolve="Chars" />
                                            <ref role="37wK5l" to="gxwn:~Chars.asList(char...):java.util.List" resolve="asList" />
                                            <node concept="10QFUN" id="5JQC2do4Gvk" role="37wK5m">
                                              <node concept="37vLTw" id="5JQC2do4Gvl" role="10QFUP">
                                                <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                              </node>
                                              <node concept="10Q1$e" id="5JQC2do4Gvm" role="10QFUM">
                                                <node concept="10Pfzv" id="5JQC2do4Gvn" role="10Q1$1" />
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFbS" id="5JQC2dmPxzP" role="3clFbx">
                                    <node concept="3clFbF" id="5JQC2dmPxzQ" role="3cqZAp">
                                      <node concept="37vLTI" id="5JQC2dmPxzR" role="3clFbG">
                                        <node concept="37vLTw" id="5JQC2dmPxzS" role="37vLTJ">
                                          <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                        </node>
                                        <node concept="2YIFZM" id="5JQC2do44Fm" role="37vLTx">
                                          <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                                          <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                                          <node concept="10QFUN" id="5JQC2do44Fn" role="37wK5m">
                                            <node concept="37vLTw" id="5JQC2do44Fo" role="10QFUP">
                                              <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                            </node>
                                            <node concept="10Q1$e" id="5JQC2do44Fp" role="10QFUM">
                                              <node concept="10OMs4" id="5JQC2do44Fq" role="10Q1$1" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node concept="3clFbS" id="5JQC2dmPxz_" role="3clFbx">
                                  <node concept="3clFbF" id="5JQC2dmPxzA" role="3cqZAp">
                                    <node concept="37vLTI" id="5JQC2dmPxzB" role="3clFbG">
                                      <node concept="37vLTw" id="5JQC2dmPxzC" role="37vLTJ">
                                        <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                      </node>
                                      <node concept="2YIFZM" id="5JQC2do47fj" role="37vLTx">
                                        <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
                                        <ref role="37wK5l" to="gxwn:~Doubles.asList(double...):java.util.List" resolve="asList" />
                                        <node concept="10QFUN" id="5JQC2do47fk" role="37wK5m">
                                          <node concept="37vLTw" id="5JQC2do47fl" role="10QFUP">
                                            <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                          </node>
                                          <node concept="10Q1$e" id="5JQC2do47fm" role="10QFUM">
                                            <node concept="10P55v" id="5JQC2do47fn" role="10Q1$1" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbS" id="5JQC2dmPxzl" role="3clFbx">
                                <node concept="3clFbF" id="5JQC2dmPxzm" role="3cqZAp">
                                  <node concept="37vLTI" id="5JQC2dmPxzn" role="3clFbG">
                                    <node concept="37vLTw" id="5JQC2dmPxzo" role="37vLTJ">
                                      <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                    </node>
                                    <node concept="2YIFZM" id="5JQC2do4UUY" role="37vLTx">
                                      <ref role="1Pybhc" to="gxwn:~Bytes" resolve="Bytes" />
                                      <ref role="37wK5l" to="gxwn:~Bytes.asList(byte...):java.util.List" resolve="asList" />
                                      <node concept="10QFUN" id="5JQC2do4UUZ" role="37wK5m">
                                        <node concept="37vLTw" id="5JQC2do4UV0" role="10QFUP">
                                          <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                        </node>
                                        <node concept="10Q1$e" id="5JQC2do4UV1" role="10QFUM">
                                          <node concept="10PrrI" id="5JQC2do4UV2" role="10Q1$1" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3clFbS" id="5JQC2dmPxz5" role="3clFbx">
                              <node concept="3clFbF" id="5JQC2dmPxz6" role="3cqZAp">
                                <node concept="37vLTI" id="5JQC2dmPxz7" role="3clFbG">
                                  <node concept="37vLTw" id="5JQC2dmPxz8" role="37vLTJ">
                                    <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                  </node>
                                  <node concept="2YIFZM" id="5JQC2do4rPz" role="37vLTx">
                                    <ref role="1Pybhc" to="gxwn:~Shorts" resolve="Shorts" />
                                    <ref role="37wK5l" to="gxwn:~Shorts.asList(short...):java.util.List" resolve="asList" />
                                    <node concept="10QFUN" id="5JQC2do4rP$" role="37wK5m">
                                      <node concept="37vLTw" id="5JQC2do4rP_" role="10QFUP">
                                        <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                      </node>
                                      <node concept="10Q1$e" id="5JQC2do4rPA" role="10QFUM">
                                        <node concept="10N3zO" id="5JQC2do4rPB" role="10Q1$1" />
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPxyP" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmPxyQ" role="3cqZAp">
                              <node concept="37vLTI" id="5JQC2dmPxyR" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmPxyS" role="37vLTJ">
                                  <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                                </node>
                                <node concept="2YIFZM" id="5JQC2do4E$X" role="37vLTx">
                                  <ref role="1Pybhc" to="gxwn:~Longs" resolve="Longs" />
                                  <ref role="37wK5l" to="gxwn:~Longs.asList(long...):java.util.List" resolve="asList" />
                                  <node concept="10QFUN" id="5JQC2do4E$Y" role="37wK5m">
                                    <node concept="37vLTw" id="5JQC2do4E$Z" role="10QFUP">
                                      <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                    </node>
                                    <node concept="10Q1$e" id="5JQC2do4E_0" role="10QFUM">
                                      <node concept="3cpWsb" id="5JQC2do4E_1" role="10Q1$1" />
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPxy_" role="3clFbx">
                          <node concept="3clFbF" id="5JQC2dmPxyA" role="3cqZAp">
                            <node concept="37vLTI" id="5JQC2dmPxyB" role="3clFbG">
                              <node concept="37vLTw" id="5JQC2dmPxyC" role="37vLTJ">
                                <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                              </node>
                              <node concept="2YIFZM" id="5JQC2do4cPe" role="37vLTx">
                                <ref role="1Pybhc" to="gxwn:~Ints" resolve="Ints" />
                                <ref role="37wK5l" to="gxwn:~Ints.asList(int...):java.util.List" resolve="asList" />
                                <node concept="10QFUN" id="5JQC2do4cPf" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2do4cPg" role="10QFUP">
                                    <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                  </node>
                                  <node concept="10Q1$e" id="5JQC2do4cPh" role="10QFUM">
                                    <node concept="10Oyi0" id="5JQC2do4cPi" role="10Q1$1" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxyl" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxym" role="3cqZAp">
                          <node concept="37vLTI" id="5JQC2dmPxyn" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPxyo" role="37vLTJ">
                              <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                            </node>
                            <node concept="2YIFZM" id="5JQC2do4IKh" role="37vLTx">
                              <ref role="1Pybhc" to="gxwn:~Booleans" resolve="Booleans" />
                              <ref role="37wK5l" to="gxwn:~Booleans.asList(boolean...):java.util.List" resolve="asList" />
                              <node concept="10QFUN" id="5JQC2do4IKi" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2do4IKj" role="10QFUP">
                                  <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                                </node>
                                <node concept="10Q1$e" id="5JQC2do4IKk" role="10QFUM">
                                  <node concept="10P_77" id="5JQC2do4IKl" role="10Q1$1" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs6" id="5JQC2dmPx$o" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2do5_Li" role="3cqZAk">
                        <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                        <ref role="37wK5l" to="3o3z:~Iterables.transform(java.lang.Iterable,com.google.common.base.Function):java.lang.Iterable" resolve="transform" />
                        <node concept="37vLTw" id="5JQC2do5_Lj" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxya" resolve="iterable" />
                        </node>
                        <node concept="10M0yZ" id="5JQC2do5_Lk" role="37wK5m">
                          <ref role="1PxDUh" node="5JQC2dmPxxz" resolve="ObjectArraySubject" />
                          <ref role="3cqZAo" node="5JQC2dmPxxN" resolve="STRINGIFY" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPx$s" role="3cqZAp">
                  <node concept="37vLTw" id="5JQC2dmPx$t" role="3cqZAk">
                    <ref role="3cqZAo" node="5JQC2dmPxxW" resolve="input" />
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPx$u" role="1B3o_S" />
              <node concept="3uibUv" id="5JQC2dmPx$v" role="3clF45">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="3uibUv" id="5JQC2dmPx$w" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPx$x" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPx$y" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx_v" role="jymVt">
      <property role="TrG5h" value="typeNameFromInstance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx_w" role="3clF46">
        <property role="TrG5h" value="instance" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPx_x" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx_y" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPx_z" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPx_$" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPx__" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPx_w" resolve="instance" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPx_A" role="3uHU7w" />
          </node>
          <node concept="9aQIb" id="5JQC2dmPx_F" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPx_G" role="9aQI4">
              <node concept="3clFbJ" id="5JQC2dmPx_H" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPx_I" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmPx_J" role="3fr31v">
                    <node concept="2OqwBi" id="5JQC2dmPAJ0" role="2Oq$k0">
                      <node concept="37vLTw" id="5JQC2dmPAIZ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPx_w" resolve="instance" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPAJ1" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPx_L" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPx_N" role="3clFbx">
                  <node concept="YS8fn" id="5JQC2dmPx_U" role="3cqZAp">
                    <node concept="2ShNRf" id="5JQC2dmPAJ2" role="YScLw">
                      <node concept="1pGfFk" id="5JQC2dmPAJs" role="2ShVmc">
                        <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;(java.lang.String)" resolve="IllegalArgumentException" />
                        <node concept="3cpWs3" id="5JQC2dmPAJt" role="37wK5m">
                          <node concept="2OqwBi" id="5JQC2dmPAJu" role="3uHU7B">
                            <node concept="2OqwBi" id="5JQC2dmPCEL" role="2Oq$k0">
                              <node concept="37vLTw" id="5JQC2dmPCEK" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPx_w" resolve="instance" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmPCEM" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPAJw" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                            </node>
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPAJx" role="3uHU7w">
                            <property role="Xl_RC" value=" instance passed into T[] subject." />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPx_W" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPx_V" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="type" />
                  <node concept="3uibUv" id="5JQC2dmPx_X" role="1tU5fm">
                    <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
                    <node concept="3qTvmN" id="5JQC2dmPx_Y" role="11_B2D" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPx_Z" role="33vP2m">
                    <node concept="2OqwBi" id="5JQC2dmPAJH" role="2Oq$k0">
                      <node concept="37vLTw" id="5JQC2dmPAJG" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPx_w" resolve="instance" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPAJI" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPxA1" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.getComponentType():java.lang.Class" resolve="getComponentType" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPxA2" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmPAJM" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmPAJL" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPx_V" resolve="type" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAJN" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.isPrimitive():boolean" resolve="isPrimitive" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPxA5" role="3clFbx">
                  <node concept="YS8fn" id="5JQC2dmPxA8" role="3cqZAp">
                    <node concept="2ShNRf" id="5JQC2dmPAJO" role="YScLw">
                      <node concept="1pGfFk" id="5JQC2dmPAK2" role="2ShVmc">
                        <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;(java.lang.String)" resolve="IllegalArgumentException" />
                        <node concept="Xl_RD" id="5JQC2dmPAK3" role="37wK5m">
                          <property role="Xl_RC" value="Primitive array passed into T[] subject." />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="2$JKZl" id="5JQC2dmPxAg" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmPAK7" role="2$JKZa">
                  <node concept="37vLTw" id="5JQC2dmPAK6" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPx_V" resolve="type" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAK8" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPxAb" role="2LFqv$">
                  <node concept="3clFbF" id="5JQC2dmPxAc" role="3cqZAp">
                    <node concept="37vLTI" id="5JQC2dmPxAd" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmPxAe" role="37vLTJ">
                        <ref role="3cqZAo" node="5JQC2dmPx_V" resolve="type" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPAKc" role="37vLTx">
                        <node concept="37vLTw" id="5JQC2dmPAKb" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPx_V" resolve="type" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAKd" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Class.getComponentType():java.lang.Class" resolve="getComponentType" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPxAh" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2do4aDH" role="3cqZAk">
                  <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
                  <ref role="37wK5l" node="5JQC2dmPxHw" resolve="compressType" />
                  <node concept="2OqwBi" id="5JQC2do5f5v" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2do5f5u" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPx_V" resolve="type" />
                    </node>
                    <node concept="liA8E" id="5JQC2do5f5w" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.toString():java.lang.String" resolve="toString" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPx_C" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPx_D" role="3cqZAp">
              <node concept="Xl_RD" id="5JQC2dmPx_E" role="3cqZAk">
                <property role="Xl_RC" value="null reference of unknown array type" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxAk" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxAl" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxAm" role="jymVt">
      <property role="TrG5h" value="numberOfDimensions" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxAn" role="3clF46">
        <property role="TrG5h" value="instance" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxAo" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxAp" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxAq" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPxAr" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxAs" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxAn" resolve="instance" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPxAt" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPxAv" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPxAw" role="3cqZAp">
              <node concept="3cmrfG" id="5JQC2dmPxAx" role="3cqZAk">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxAz" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxAy" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="type" />
            <node concept="3uibUv" id="5JQC2dmPxA$" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
              <node concept="3qTvmN" id="5JQC2dmPxA_" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPAKj" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmPAKi" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxAn" resolve="instance" />
              </node>
              <node concept="liA8E" id="5JQC2dmPAKk" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxAC" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxAB" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="dimensions" />
            <node concept="10Oyi0" id="5JQC2dmPxAD" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPxAE" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPxAP" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPAKo" role="2$JKZa">
            <node concept="37vLTw" id="5JQC2dmPAKn" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxAy" resolve="type" />
            </node>
            <node concept="liA8E" id="5JQC2dmPAKp" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxAH" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPxAI" role="3cqZAp">
              <node concept="3uNrnE" id="5JQC2dmPxAJ" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPxAK" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPxAB" resolve="dimensions" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPxAL" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPxAM" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPxAN" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPxAy" resolve="type" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAKt" role="37vLTx">
                  <node concept="37vLTw" id="5JQC2dmPAKs" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxAy" resolve="type" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAKu" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getComponentType():java.lang.Class" resolve="getComponentType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxAQ" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPxAR" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPxAB" resolve="dimensions" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxAS" role="1B3o_S" />
      <node concept="10Oyi0" id="5JQC2dmPxAT" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPxAU" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxAV" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxAW" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxAX" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2do5keq" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxAY" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxB0" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxAZ" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxB2" role="1tU5fm">
              <node concept="3uibUv" id="5JQC2dmPxB1" role="10Q1$1">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxB3" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxB4" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPxB5" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxB6" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxAZ" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxB7" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxAW" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxB9" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPxBa" role="3cqZAp" />
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxBZ" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxC0" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxBV" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPxBW" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPxBX" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPxBY" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxAW" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPxBR" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPxBT" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxBc" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxBe" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxBd" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPxBg" role="1tU5fm">
                  <node concept="3uibUv" id="5JQC2dmPxBf" role="10Q1$1">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="10QFUN" id="5JQC2dmPxBh" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxBi" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxAW" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxBk" role="10QFUM">
                    <node concept="3uibUv" id="5JQC2dmPxBj" role="10Q1$1">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxBl" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPxBm" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPAKy" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPAKx" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxAZ" resolve="actual" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$$" role="2OqNvi" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAKB" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPAKA" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxBd" resolve="expectedArray" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$_" role="2OqNvi" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPxBx" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPxBy" role="9aQI4">
                  <node concept="3cpWs8" id="5JQC2dmPxB$" role="3cqZAp">
                    <node concept="3cpWsn" id="5JQC2dmPxBz" role="3cpWs9">
                      <property role="3TUv4t" value="false" />
                      <property role="TrG5h" value="index" />
                      <node concept="3uibUv" id="5JQC2dmPxB_" role="1tU5fm">
                        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPxBA" role="33vP2m">
                        <ref role="37wK5l" node="5JQC2dmPxC4" resolve="checkArrayEqualsRecursive" />
                        <node concept="37vLTw" id="5JQC2dmPxBB" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxBd" resolve="expectedArray" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxBC" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxAZ" resolve="actual" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmPxBD" role="37wK5m">
                          <property role="Xl_RC" value="" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmPxBE" role="3cqZAp">
                    <node concept="3y3z36" id="5JQC2dmPxBF" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmPxBG" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPxBz" resolve="index" />
                      </node>
                      <node concept="10Nm6u" id="5JQC2dmPxBH" role="3uHU7w" />
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPxBJ" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPxBK" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPxBL" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                          <node concept="Xl_RD" id="5JQC2dmPxBM" role="37wK5m">
                            <property role="Xl_RC" value="is equal to" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmPxBN" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPx_i" resolve="stringableIterable" />
                            <node concept="37vLTw" id="5JQC2dmPxBO" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxBd" resolve="expectedArray" />
                            </node>
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPxBP" role="37wK5m">
                            <property role="Xl_RC" value="differs at index" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxBQ" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxBz" resolve="index" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxBq" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxBr" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxBs" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxBt" role="37wK5m">
                      <property role="Xl_RC" value="%s has length %s. Expected length is %s" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxBu" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPAKG" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPAKF" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPxAZ" resolve="actual" />
                      </node>
                      <node concept="1Rwk04" id="5JQC2dmQb$A" role="2OqNvi" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPAKL" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPAKK" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPxBd" resolve="expectedArray" />
                      </node>
                      <node concept="1Rwk04" id="5JQC2dmQb$B" role="2OqNvi" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxC1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxC2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxC3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxFn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxFo" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the provided Object[] is an array of the same length and type, and contains" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxFp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxFq" role="1dT_Ay">
            <property role="1dT_AB" value="elements such that each element in {@code expected} is equal to each element in the subject," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxFr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxFs" role="1dT_Ay">
            <property role="1dT_AB" value="and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxC4" role="jymVt">
      <property role="TrG5h" value="checkArrayEqualsRecursive" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxC5" role="2AJF6D">
        <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxC6" role="3clF46">
        <property role="TrG5h" value="expectedArray" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxC7" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxC8" role="3clF46">
        <property role="TrG5h" value="actualArray" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxC9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxCa" role="3clF46">
        <property role="TrG5h" value="lastIndex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxCb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxCc" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxCe" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxCd" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualLength" />
            <node concept="10Oyi0" id="5JQC2dmPxCf" role="1tU5fm" />
            <node concept="2YIFZM" id="5JQC2do4gVg" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
              <ref role="37wK5l" node="5JQC2dmPxKc" resolve="getArrayLength" />
              <node concept="37vLTw" id="5JQC2do4gVh" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxC8" resolve="actualArray" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxCj" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxCi" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedLength" />
            <node concept="10Oyi0" id="5JQC2dmPxCk" role="1tU5fm" />
            <node concept="2YIFZM" id="5JQC2do4iJl" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
              <ref role="37wK5l" node="5JQC2dmPxKc" resolve="getArrayLength" />
              <node concept="37vLTw" id="5JQC2do4iJm" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxC6" resolve="expectedArray" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5JQC2dmPxCn" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxCo" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmPxCq" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPxCr" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="22lmx$" id="5JQC2dmPxCs" role="1Dwp0S">
            <node concept="3eOVzh" id="5JQC2dmPxCt" role="3uHU7B">
              <node concept="37vLTw" id="5JQC2dmPxCu" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPxCv" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPxCd" resolve="actualLength" />
              </node>
            </node>
            <node concept="3eOVzh" id="5JQC2dmPxCw" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPxCx" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPxCy" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPxCi" resolve="expectedLength" />
              </node>
            </node>
          </node>
          <node concept="3uNrnE" id="5JQC2dmPxC$" role="1Dwrff">
            <node concept="37vLTw" id="5JQC2dmPxC_" role="2$L3a6">
              <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxCB" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPxCD" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxCC" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="index" />
                <node concept="3uibUv" id="5JQC2dmPxCE" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
                <node concept="3cpWs3" id="5JQC2dmPxCF" role="33vP2m">
                  <node concept="3cpWs3" id="5JQC2dmPxCG" role="3uHU7B">
                    <node concept="3cpWs3" id="5JQC2dmPxCH" role="3uHU7B">
                      <node concept="37vLTw" id="5JQC2dmPxCI" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPxCa" resolve="lastIndex" />
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPxCJ" role="3uHU7w">
                        <property role="Xl_RC" value="[" />
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPxCK" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPxCL" role="3uHU7w">
                    <property role="Xl_RC" value="]" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxCM" role="3cqZAp">
              <node concept="1Wc70l" id="5JQC2dmPxCN" role="3clFbw">
                <node concept="3eOVzh" id="5JQC2dmPxCO" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPxCP" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxCQ" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPxCi" resolve="expectedLength" />
                  </node>
                </node>
                <node concept="3eOVzh" id="5JQC2dmPxCR" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPxCS" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxCT" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPxCd" resolve="actualLength" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxCV" role="3clFbx">
                <node concept="3cpWs8" id="5JQC2dmPxCX" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPxCW" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="expected" />
                    <node concept="3uibUv" id="5JQC2dmPxCY" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2do4mf3" role="33vP2m">
                      <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
                      <ref role="37wK5l" node="5JQC2dmPxKl" resolve="getFromArray" />
                      <node concept="37vLTw" id="5JQC2do4mf4" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxC6" resolve="expectedArray" />
                      </node>
                      <node concept="37vLTw" id="5JQC2do4mf5" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPxD3" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPxD2" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="actual" />
                    <node concept="3uibUv" id="5JQC2dmPxD4" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2do4ONq" role="33vP2m">
                      <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
                      <ref role="37wK5l" node="5JQC2dmPxKl" resolve="getFromArray" />
                      <node concept="37vLTw" id="5JQC2do4ONr" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxC8" resolve="actualArray" />
                      </node>
                      <node concept="37vLTw" id="5JQC2do4ONs" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxCo" resolve="i" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPxD8" role="3cqZAp">
                  <node concept="1Wc70l" id="5JQC2dmPxD9" role="3clFbw">
                    <node concept="1Wc70l" id="5JQC2dmPxDa" role="3uHU7B">
                      <node concept="1Wc70l" id="5JQC2dmPxDb" role="3uHU7B">
                        <node concept="3y3z36" id="5JQC2dmPxDc" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPxDd" role="3uHU7B">
                            <ref role="3cqZAo" node="5JQC2dmPxD2" resolve="actual" />
                          </node>
                          <node concept="10Nm6u" id="5JQC2dmPxDe" role="3uHU7w" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPxDf" role="3uHU7w">
                          <node concept="2OqwBi" id="5JQC2dmPAKY" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmPAKX" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPxD2" resolve="actual" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPAKZ" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPxDh" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
                          </node>
                        </node>
                      </node>
                      <node concept="3y3z36" id="5JQC2dmPxDi" role="3uHU7w">
                        <node concept="37vLTw" id="5JQC2dmPxDj" role="3uHU7B">
                          <ref role="3cqZAo" node="5JQC2dmPxCW" resolve="expected" />
                        </node>
                        <node concept="10Nm6u" id="5JQC2dmPxDk" role="3uHU7w" />
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPxDl" role="3uHU7w">
                      <node concept="2OqwBi" id="5JQC2dmPAL3" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPAL2" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxCW" resolve="expected" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAL4" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPxDn" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmPxDE" role="9aQIa">
                    <node concept="2YIFZM" id="5JQC2do4X3_" role="3clFbw">
                      <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                      <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                      <node concept="37vLTw" id="5JQC2do4X3A" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxD2" resolve="actual" />
                      </node>
                      <node concept="37vLTw" id="5JQC2do4X3B" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxCW" resolve="expected" />
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPxDJ" role="3clFbx">
                      <node concept="3N13vt" id="5JQC2dmPxDK" role="3cqZAp" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxDp" role="3clFbx">
                    <node concept="3cpWs8" id="5JQC2dmPxDr" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxDq" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="result" />
                        <node concept="3uibUv" id="5JQC2dmPxDs" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPxDt" role="33vP2m">
                          <ref role="37wK5l" node="5JQC2dmPxC4" resolve="checkArrayEqualsRecursive" />
                          <node concept="37vLTw" id="5JQC2dmPxDu" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxCW" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxDv" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxD2" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPxDw" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxCC" resolve="index" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxDx" role="3cqZAp">
                      <node concept="3y3z36" id="5JQC2dmPxDy" role="3clFbw">
                        <node concept="37vLTw" id="5JQC2dmPxDz" role="3uHU7B">
                          <ref role="3cqZAo" node="5JQC2dmPxDq" resolve="result" />
                        </node>
                        <node concept="10Nm6u" id="5JQC2dmPxD$" role="3uHU7w" />
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxDA" role="3clFbx">
                        <node concept="3cpWs6" id="5JQC2dmPxDB" role="3cqZAp">
                          <node concept="37vLTw" id="5JQC2dmPxDC" role="3cqZAk">
                            <ref role="3cqZAo" node="5JQC2dmPxDq" resolve="result" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3N13vt" id="5JQC2dmPxDD" role="3cqZAp" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPxDL" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPxDM" role="3cqZAk">
                <ref role="3cqZAo" node="5JQC2dmPxCC" resolve="index" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxDN" role="3cqZAp">
          <node concept="10Nm6u" id="5JQC2dmPxDO" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxDP" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxDQ" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxDR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxFt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxFu" role="1dT_Ay">
            <property role="1dT_AB" value="Returns null if the arrays are equal, recursively. If not equal, returns the string of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxFv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxFw" role="1dT_Ay">
            <property role="1dT_AB" value="index at which they're different." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxDS" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxDT" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxDU" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxDV" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2do5fgU" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxDW" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxDY" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxDX" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxE0" role="1tU5fm">
              <node concept="3uibUv" id="5JQC2dmPxDZ" role="10Q1$1">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxE1" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxE$" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxE_" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxEz" role="TDEfX" />
            <node concept="3cpWsn" id="5JQC2dmPxEv" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPxEx" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxE3" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxE5" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxE4" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPxE7" role="1tU5fm">
                  <node concept="3uibUv" id="5JQC2dmPxE6" role="10Q1$1">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="10QFUN" id="5JQC2dmPxE8" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxE9" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxDU" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxEb" role="10QFUM">
                    <node concept="3uibUv" id="5JQC2dmPxEa" role="10Q1$1">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxEc" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPxEd" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPxEe" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPxEf" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPxDX" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxEg" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPxDU" resolve="expected" />
                  </node>
                </node>
                <node concept="3clFbC" id="5JQC2dmPxEh" role="3uHU7w">
                  <node concept="1rXfSq" id="5JQC2dmPxEi" role="3uHU7B">
                    <ref role="37wK5l" node="5JQC2dmPxC4" resolve="checkArrayEqualsRecursive" />
                    <node concept="37vLTw" id="5JQC2dmPxEj" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxE4" resolve="expectedArray" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPxEk" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxDX" resolve="actual" />
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPxEl" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPxEm" role="3uHU7w" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxEo" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxEp" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxEq" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxEr" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxEs" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxEt" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPx_i" resolve="stringableIterable" />
                      <node concept="37vLTw" id="5JQC2dmPxEu" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxE4" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxEA" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxEB" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPxEC" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxED" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxEE" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPxEV" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPxEF" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPxEG" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPxEH" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPxEI" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPxEJ" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPxEK" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPxEL" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="2YIFZM" id="5JQC2dmPAL9" role="37wK5m">
                    <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                    <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                    <node concept="1rXfSq" id="5JQC2dmPALa" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxEO" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPxEP" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPxEQ" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPxER" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxES" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="2YIFZM" id="5JQC2dmPALh" role="37wK5m">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.asList(java.lang.Object...):java.util.List" resolve="asList" />
                  <node concept="1rXfSq" id="5JQC2dmPALi" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxEW" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxEX" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwRB">
    <property role="TrG5h" value="SetMultimapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwRC" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwRD" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwSl" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwSr" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwSs" role="1dT_Ay">
          <property role="1dT_AB" value=" Type-specific extensions of {@link com.google.common.collect.Multimap} subjects for {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwSt" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwSu" role="1dT_Ay">
          <property role="1dT_AB" value=" com.google.common.collect.SetMultimap} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwSv" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwSw" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwSx" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwSy" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Daniel Ploch" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwRE" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwRF" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwRG" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwRH" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwRI" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwRJ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwRK" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPwRL" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPwRM" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwRN" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPALn" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPz1A" resolve="MultimapSubject" />
          <node concept="37vLTw" id="5JQC2dmPALo" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwRG" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPALp" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwRI" resolve="multimap" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwRR" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwRS" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwRT" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwRU" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwRV" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPwRX" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwRW" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwRY" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwRZ" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPwS0" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
            <node concept="37vLTw" id="5JQC2dmPwS1" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwRT" resolve="format" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwS2" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwRV" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwS3" role="3cqZAp">
          <node concept="Xjq3P" id="5JQC2dmPwS4" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwS5" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwS6" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwRB" resolve="SetMultimapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwS7" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwS8" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwS9" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwSa" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwSb" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPwSc" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPwSd" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwSe" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwSf" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPwSg" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPz6m" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPwSh" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwS9" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwSi" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwSj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwSk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwSz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwS$" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@code #isEqualTo} A ListMultimap can never compare equal with a SetMultimap if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwS_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwSA" role="1dT_Ay">
            <property role="1dT_AB" value="    either Multimap is non-empty, because {@link java.util.List} and {@link java.util.Set} can" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwSB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwSC" role="1dT_Ay">
            <property role="1dT_AB" value="    never compare equal. Prefer {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwSD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwSE" role="1dT_Ay">
            <property role="1dT_AB" value="    MultimapSubject#containsExactlyEntriesIn(com.google.common.collect.Multimap)} instead." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwSF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwSG" role="1dT_Ay">
            <property role="1dT_AB" value="    Consult {@link com.google.common.collect.Multimap#equals} for more information." />
          </node>
        </node>
      </node>
    </node>
    <node concept="1lrU7d" id="5JQC2dmPwSm" role="lGtFl">
      <node concept="u1fJn" id="5JQC2dmPwSn" role="u1e2Z">
        <property role="u1fJ8" value="true" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.truth" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwSo" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.collect.ListMultimap" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwSp" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="com.google.common.collect.SetMultimap" />
      </node>
      <node concept="u1fJn" id="5JQC2dmPwSq" role="u1e2Z">
        <property role="u1fJ8" value="false" />
        <property role="1XWMmp" value="false" />
        <property role="1CJj6V" value="javax.annotation.Nullable" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPvCr">
    <property role="TrG5h" value="FloatSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPvCs" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPvD2" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmPvD3" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPvCr" resolve="FloatSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPvD4" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPvHt" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPvHA" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvHB" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Float} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvHC" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvHD" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvHE" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvHF" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPvD5" role="jymVt">
      <property role="TrG5h" value="NEG_ZERO_BITS" />
      <property role="3TUv4t" value="true" />
      <node concept="10Oyi0" id="5JQC2dmPvD6" role="1tU5fm" />
      <node concept="2YIFZM" id="5JQC2dmQaXN" role="33vP2m">
        <ref role="1Pybhc" to="wyt6:~Float" resolve="Float" />
        <ref role="37wK5l" to="wyt6:~Float.floatToIntBits(float):int" resolve="floatToIntBits" />
        <node concept="1ZRNhn" id="5JQC2dmQaXO" role="37wK5m">
          <node concept="2$xPTn" id="5JQC2dmQaXP" role="2$L3a6">
            <property role="2$xPTl" value="0.0f" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvDa" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPvDb" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPvDc" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPvDd" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvDe" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPvDf" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvDg" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPvDh" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvDi" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPALq" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmPALr" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPvDd" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPALs" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPvDf" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPvCt" role="jymVt">
      <property role="TrG5h" value="TolerantFloatComparison" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="true" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPvCu" role="1B3o_S" />
      <node concept="3UR2Jj" id="5JQC2dmPvD1" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvHG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvHH" role="1dT_Ay">
            <property role="1dT_AB" value="A partially specified proposition about an approximate relationship to a {@code float} subject" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvHI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvHJ" role="1dT_Ay">
            <property role="1dT_AB" value="using a tolerance." />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmPvCv" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPvCw" role="3clF45" />
        <node concept="3clFbS" id="5JQC2dmPvCx" role="3clF47" />
        <node concept="3Tm6S6" id="5JQC2dmPvCy" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPvCz" role="jymVt">
        <property role="TrG5h" value="of" />
        <property role="1EzhhJ" value="true" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPvC$" role="3clF46">
          <property role="TrG5h" value="expectedFloat" />
          <property role="3TUv4t" value="false" />
          <node concept="10OMs4" id="5JQC2dmPvC_" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPvCA" role="3clF47" />
        <node concept="3Tm1VV" id="5JQC2dmPvCB" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPvCC" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPvCD" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPvHK" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHL" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the subject was expected to be within the tolerance of the given value but was not" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPvHM" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHN" role="1dT_Ay">
              <property role="1dT_AB" value="&lt;i&gt;or&lt;/i&gt; if it was expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but was. The subject and" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPvHO" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHP" role="1dT_Ay">
              <property role="1dT_AB" value="tolerance are specified earlier in the fluent call chain." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPvCE" role="jymVt">
        <property role="TrG5h" value="equals" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvCF" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPvCG" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPvCH" role="3clF46">
          <property role="TrG5h" value="o" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPvCI" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPvCJ" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPvCK" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPvCN" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPALt" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPALF" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPALG" role="37wK5m">
                  <property role="Xl_RC" value="If you meant to compare floats, use .of(float) instead." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPvCO" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPvCP" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPvCQ" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPvHQ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHR" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPvHS" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHT" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported on TolerantFloatComparison. If you" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPvHU" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHV" role="1dT_Ay">
              <property role="1dT_AB" value="    meant to compare floats, use {@link #of(float)} instead." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPvCR" role="jymVt">
        <property role="TrG5h" value="hashCode" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvCS" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPvCT" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPvCU" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPvCX" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPALH" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPALV" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPALW" role="37wK5m">
                  <property role="Xl_RC" value="Subject.hashCode() is not supported." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPvCY" role="1B3o_S" />
        <node concept="10Oyi0" id="5JQC2dmPvCZ" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPvD0" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPvHW" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHX" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPvHY" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPvHZ" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported on TolerantFloatComparison" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvDm" role="jymVt">
      <property role="TrG5h" value="isWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvDn" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10OMs4" id="5JQC2dmPvDo" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPvDp" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPvDq" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPvDr" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPvDs" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPvDt" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPvCt" resolve="FloatSubject.TolerantFloatComparison" />
                <ref role="37wK5l" node="5JQC2dmPvCv" resolve="FloatSubject.TolerantFloatComparison" />
                <node concept="3clFb_" id="5JQC2dmPvDu" role="jymVt">
                  <property role="TrG5h" value="of" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPvDv" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPvDw" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="10OMs4" id="5JQC2dmPvDx" role="1tU5fm" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPvDy" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPvD$" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPvDz" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="3uibUv" id="5JQC2dmPvD_" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPvDA" role="33vP2m">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvDB" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dn8afe" role="3clFbG">
                        <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                        <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
                        <node concept="37vLTw" id="5JQC2dn8aff" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvDz" resolve="actual" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dn8afg" role="37wK5m">
                          <property role="Xl_RC" value="actual value cannot be null. tolerance=%s expected=%s" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dn8afh" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvDn" resolve="tolerance" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dn8afi" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvDw" resolve="expected" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvDH" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPvDI" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPvFi" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmPvDJ" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvDn" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPvDK" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPvDL" role="3clFbw">
                        <node concept="2YIFZM" id="5JQC2dmQaXQ" role="3fr31v">
                          <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                          <ref role="37wK5l" node="5JQC2dmPwOA" resolve="equalWithinTolerance" />
                          <node concept="37vLTw" id="5JQC2dmQaXR" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvDz" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQaXS" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvDw" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQaXT" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvDn" resolve="tolerance" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPvDR" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPvDS" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPvDT" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPvDU" role="37wK5m">
                              <property role="Xl_RC" value="%s and &lt;%s&gt; should have been finite values within &lt;%s&gt; of each other" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPvDV" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPvDW" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPvDw" resolve="expected" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPvDX" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPvDn" resolve="tolerance" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPvDY" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPvDZ" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvE0" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvE1" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvCt" resolve="FloatSubject.TolerantFloatComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvE2" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvI0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI1" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject is a finite number within the given tolerance of an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvI2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI3" role="1dT_Ay">
            <property role="1dT_AB" value=" expected value that will be provided in the next call in the fluent chain." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvI4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI5" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvI6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI7" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if either the subject or the object is {@link Float#POSITIVE_INFINITY}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvI8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI9" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Float#NEGATIVE_INFINITY}, or {@link Float#NaN}. To check for those values, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIb" role="1dT_Ay">
            <property role="1dT_AB" value=" #isPositiveInfinity}, {@link #isNegativeInfinity}, {@link #isNaN}, or (with more generality)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvId" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #isEqualTo}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIf" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIh" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will pass if both values are zero, even if one is {@code 0.0f} and the other is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIj" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code -0.0f}. Use {@code #isEqualTo} to assert that a value is exactly {@code 0.0f} or that it" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIl" role="1dT_Ay">
            <property role="1dT_AB" value=" is exactly {@code -0.0f}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIn" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIp" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;You can use a tolerance of {@code 0.0f} to assert the exact equality of finite floats, but" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIr" role="1dT_Ay">
            <property role="1dT_AB" value=" often {@link #isEqualTo} is preferable (note the different behaviours around non-finite values" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIt" role="1dT_Ay">
            <property role="1dT_AB" value=" and {@code -0.0f}). See the documentation on {@link #isEqualTo} for advice on when exact" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIv" role="1dT_Ay">
            <property role="1dT_AB" value=" equality assertions are appropriate." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIx" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIz" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvI$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvI_" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIB" role="1dT_Ay">
            <property role="1dT_AB" value="     Float#NaN}, {@link Float#POSITIVE_INFINITY}, or negative, including {@code -0.0f}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvE3" role="jymVt">
      <property role="TrG5h" value="isNotWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvE4" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10OMs4" id="5JQC2dmPvE5" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPvE6" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPvE7" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPvE8" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPvE9" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPvEa" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPvCt" resolve="FloatSubject.TolerantFloatComparison" />
                <ref role="37wK5l" node="5JQC2dmPvCv" resolve="FloatSubject.TolerantFloatComparison" />
                <node concept="3clFb_" id="5JQC2dmPvEb" role="jymVt">
                  <property role="TrG5h" value="of" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPvEc" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPvEd" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="10OMs4" id="5JQC2dmPvEe" role="1tU5fm" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPvEf" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPvEh" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPvEg" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="3uibUv" id="5JQC2dmPvEi" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPvEj" role="33vP2m">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvEk" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dn7e8g" role="3clFbG">
                        <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                        <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
                        <node concept="37vLTw" id="5JQC2dn7e8h" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvEg" resolve="actual" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dn7e8i" role="37wK5m">
                          <property role="Xl_RC" value="actual value cannot be null. tolerance=%s expected=%s" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dn7e8j" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvE4" resolve="tolerance" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dn7e8k" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvEd" resolve="expected" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPvEq" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPvEr" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPvFi" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmPvEs" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPvE4" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPvEt" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPvEu" role="3clFbw">
                        <node concept="2YIFZM" id="5JQC2dmQaXU" role="3fr31v">
                          <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                          <ref role="37wK5l" node="5JQC2dmPwPr" resolve="notEqualWithinTolerance" />
                          <node concept="37vLTw" id="5JQC2dmQaXV" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvEg" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQaXW" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvEd" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQaXX" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPvE4" resolve="tolerance" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPvE$" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPvE_" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPvEA" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPvEB" role="37wK5m">
                              <property role="Xl_RC" value="%s and &lt;%s&gt; should have been finite values not within &lt;%s&gt; of each other" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPvEC" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPvED" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPvEd" resolve="expected" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPvEE" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPvE4" resolve="tolerance" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPvEF" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPvEG" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvEH" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvEI" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvCt" resolve="FloatSubject.TolerantFloatComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPvEJ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvIC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvID" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject is a finite number not within the given tolerance of an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIF" role="1dT_Ay">
            <property role="1dT_AB" value=" expected value that will be provided in the next call in the fluent chain." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIH" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvII" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIJ" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if either the subject or the object is {@link Float#POSITIVE_INFINITY}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIL" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Float#NEGATIVE_INFINITY}, or {@link Float#NaN}. See {@link #isFinite}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIN" role="1dT_Ay">
            <property role="1dT_AB" value=" #isNotNaN}, or {@link #isNotEqualTo} for checks with other behaviours." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIP" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIR" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if both values are zero, even if one is {@code 0.0f} and the other is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIT" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code -0.0f}. Use {@code #isNotEqualTo} for a test which fails for a value of exactly zero" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIV" role="1dT_Ay">
            <property role="1dT_AB" value=" with one sign but passes for zero with the opposite sign." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIX" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvIY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvIZ" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;You can use a tolerance of {@code 0.0f} to assert the exact non-equality of finite floats," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ1" role="1dT_Ay">
            <property role="1dT_AB" value=" but sometimes {@link #isNotEqualTo} is preferable (note the different behaviours around" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ3" role="1dT_Ay">
            <property role="1dT_AB" value=" non-finite values and {@code -0.0f})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ5" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ7" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an exclusive lower bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ9" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJb" role="1dT_Ay">
            <property role="1dT_AB" value="     Float.NaN}, {@code Float.POSITIVE_INFINITY}, or negative, including {@code -0.0f}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvEK" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvEL" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvEM" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPvEN" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvEO" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvEP" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPvEQ" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnk" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPvER" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvEL" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvES" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvET" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvEU" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJd" role="1dT_Ay">
            <property role="1dT_AB" value=" Asserts that the subject is exactly equal to the given value, with equality defined as by" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJf" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code Float#equals}. This method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJh" role="1dT_Ay">
            <property role="1dT_AB" value=" any kind of arithmetic: use {@link #isWithin} with a suitable tolerance in that case. (Remember" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJj" role="1dT_Ay">
            <property role="1dT_AB" value=" that the exact result of floating point arithmetic is sensitive to apparently trivial changes" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJl" role="1dT_Ay">
            <property role="1dT_AB" value=" such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJn" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJp" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJr" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying a value without modification from its input or returning a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJt" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant value." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJv" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJx" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The assertion {@code isEqualTo(0.0f)} fails for an input of {@code -0.0f}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJz" role="1dT_Ay">
            <property role="1dT_AB" value=" vice versa. For an assertion that passes for either {@code 0.0f} or {@code -0.0f}, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJ$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJ_" role="1dT_Ay">
            <property role="1dT_AB" value=" #isZero}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvEV" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvEW" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvEX" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPvEY" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvEZ" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvF0" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPvF1" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnx" resolve="isNotEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPvF2" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvEW" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvF3" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvF4" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvF5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJB" role="1dT_Ay">
            <property role="1dT_AB" value=" Asserts that the subject is not exactly equal to the given value, with equality defined as by" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJD" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code Float#equals}. See {@link #isEqualTo} for advice on when exact equality is recommended." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJF" role="1dT_Ay">
            <property role="1dT_AB" value=" Use {@link #isNotWithin} for an assertion with a tolerance." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJH" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJJ" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The assertion {@code isNotEqualTo(0.0f)} passes for {@code -0.0f}, and vice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJL" role="1dT_Ay">
            <property role="1dT_AB" value=" versa. For an assertion that fails for either {@code 0.0f} or {@code -0.0f}, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJN" role="1dT_Ay">
            <property role="1dT_AB" value=" #isNonZero}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvF6" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPvF7" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPvF8" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPvF9" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvFa" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvFb" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvFc" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPvFd" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmPvFe" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvF9" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvFf" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvFg" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvFh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJP" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isWithin} or {@link #isEqualTo} instead (see documentation for advice)." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPvFi" role="jymVt">
      <property role="TrG5h" value="checkTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvFj" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPvFk" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPvFl" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvFm" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn7UzK" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="3fqX7Q" id="5JQC2dn7UzL" role="37wK5m">
              <node concept="2YIFZM" id="5JQC2dn7UzM" role="3fr31v">
                <ref role="1Pybhc" to="wyt6:~Float" resolve="Float" />
                <ref role="37wK5l" to="wyt6:~Float.isNaN(float):boolean" resolve="isNaN" />
                <node concept="37vLTw" id="5JQC2dn7UzN" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dn7UzO" role="37wK5m">
              <property role="Xl_RC" value="tolerance cannot be NaN" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvFs" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn81RM" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dn81RN" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dn81RO" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
              </node>
              <node concept="2$xPTn" id="5JQC2dn81RP" role="3uHU7w">
                <property role="2$xPTl" value="0.0f" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dn81RQ" role="37wK5m">
              <property role="Xl_RC" value="tolerance (%s) cannot be negative" />
            </node>
            <node concept="37vLTw" id="5JQC2dn81RR" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvFz" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn8ilH" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="3y3z36" id="5JQC2dn8ilI" role="37wK5m">
              <node concept="2YIFZM" id="5JQC2dn8ilJ" role="3uHU7B">
                <ref role="1Pybhc" to="wyt6:~Float" resolve="Float" />
                <ref role="37wK5l" to="wyt6:~Float.floatToIntBits(float):int" resolve="floatToIntBits" />
                <node concept="37vLTw" id="5JQC2dn8ilK" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dn8ilL" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPvD5" resolve="NEG_ZERO_BITS" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dn8ilM" role="37wK5m">
              <property role="Xl_RC" value="tolerance (%s) cannot be negative" />
            </node>
            <node concept="37vLTw" id="5JQC2dn8ilN" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPvFF" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn6ZCa" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="3y3z36" id="5JQC2dn6ZCb" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dn6ZCc" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPvFj" resolve="tolerance" />
              </node>
              <node concept="10M0yZ" id="5JQC2dn6ZCd" role="3uHU7w">
                <ref role="1PxDUh" to="wyt6:~Float" resolve="Float" />
                <ref role="3cqZAo" to="wyt6:~Float.POSITIVE_INFINITY" resolve="POSITIVE_INFINITY" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dn6ZCe" role="37wK5m">
              <property role="Xl_RC" value="tolerance cannot be POSITIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3cqZAl" id="5JQC2dmPvFL" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvFM" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJR" role="1dT_Ay">
            <property role="1dT_AB" value="Ensures that the given tolerance is a non-negative finite value, i.e. not {@code Float.NaN}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJT" role="1dT_Ay">
            <property role="1dT_AB" value="{@code Float.POSITIVE_INFINITY}, or negative, including {@code -0.0f}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvFN" role="jymVt">
      <property role="TrG5h" value="isZero" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvFO" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvFP" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPvFQ" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPvFR" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPvFS" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPvFT" role="3uHU7w" />
            </node>
            <node concept="3y3z36" id="5JQC2dmPvFU" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPvFV" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPvFW" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPvFX" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Float.floatValue():float" resolve="floatValue" />
                </node>
              </node>
              <node concept="2$xPTn" id="5JQC2dmPvFY" role="3uHU7w">
                <property role="2$xPTl" value="0.0f" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPvG0" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPvG1" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPvG2" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPvG3" role="37wK5m">
                  <property role="Xl_RC" value="is zero" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvG4" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvG5" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvG6" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJV" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is zero (i.e. it is either {@code 0.0f} or {@code -0.0f}). " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvG7" role="jymVt">
      <property role="TrG5h" value="isNonZero" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvG8" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvG9" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPvGa" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPvGb" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPvGc" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPvGd" role="3uHU7w" />
            </node>
            <node concept="3clFbC" id="5JQC2dmPvGe" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPvGf" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPvGg" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPvGh" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Float.floatValue():float" resolve="floatValue" />
                </node>
              </node>
              <node concept="2$xPTn" id="5JQC2dmPvGi" role="3uHU7w">
                <property role="2$xPTl" value="0.0f" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPvGk" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPvGl" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPvGm" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPvGn" role="37wK5m">
                  <property role="Xl_RC" value="is non-zero" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvGo" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvGp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvGq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvJW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJX" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is a non-null value other than zero (i.e. it is not {@code 0.0f}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvJY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvJZ" role="1dT_Ay">
            <property role="1dT_AB" value="{@code -0.0f} or {@code null})." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvGr" role="jymVt">
      <property role="TrG5h" value="isPositiveInfinity" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvGs" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvGt" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPvGu" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPvEK" resolve="isEqualTo" />
            <node concept="10M0yZ" id="5JQC2dmQaY1" role="37wK5m">
              <ref role="1PxDUh" to="wyt6:~Float" resolve="Float" />
              <ref role="3cqZAo" to="wyt6:~Float.POSITIVE_INFINITY" resolve="POSITIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvGw" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvGx" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvGy" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvK0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvK1" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Float#POSITIVE_INFINITY}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvGz" role="jymVt">
      <property role="TrG5h" value="isNegativeInfinity" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvG$" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvG_" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPvGA" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPvEK" resolve="isEqualTo" />
            <node concept="10M0yZ" id="5JQC2dmQaY2" role="37wK5m">
              <ref role="1PxDUh" to="wyt6:~Float" resolve="Float" />
              <ref role="3cqZAo" to="wyt6:~Float.NEGATIVE_INFINITY" resolve="NEGATIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvGC" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvGD" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvGE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvK2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvK3" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Float#NEGATIVE_INFINITY}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvGF" role="jymVt">
      <property role="TrG5h" value="isNaN" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvGG" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPvGH" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPvGI" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPvEK" resolve="isEqualTo" />
            <node concept="10M0yZ" id="5JQC2dmQaY3" role="37wK5m">
              <ref role="1PxDUh" to="wyt6:~Float" resolve="Float" />
              <ref role="3cqZAo" to="wyt6:~Float.NaN" resolve="NaN" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvGK" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvGL" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvGM" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvK4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvK5" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Float#NaN}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvGN" role="jymVt">
      <property role="TrG5h" value="isFinite" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvGO" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvGP" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPvGQ" role="3clFbw">
            <node concept="22lmx$" id="5JQC2dmPvGR" role="3uHU7B">
              <node concept="3clFbC" id="5JQC2dmPvGS" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPvGT" role="3uHU7B">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPvGU" role="3uHU7w" />
              </node>
              <node concept="2OqwBi" id="5JQC2dmPvGV" role="3uHU7w">
                <node concept="1rXfSq" id="5JQC2dmPvGW" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPvGX" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Float.isNaN():boolean" resolve="isNaN" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPvGY" role="3uHU7w">
              <node concept="1rXfSq" id="5JQC2dmPvGZ" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPvH0" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Float.isInfinite():boolean" resolve="isInfinite" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPvH2" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPvH3" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPvH4" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPvH5" role="37wK5m">
                  <property role="Xl_RC" value="%s should have been finite" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPvH6" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvH7" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvH8" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvH9" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvK6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvK7" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is finite, i.e. not {@link Float#POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvK8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvK9" role="1dT_Ay">
            <property role="1dT_AB" value="Float#NEGATIVE_INFINITY}, or {@link Float#NaN}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvHa" role="jymVt">
      <property role="TrG5h" value="isNotNaN" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPvHb" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvHc" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPvHd" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPvHe" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPvHf" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPvHg" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPvHh" role="3uHU7w">
              <node concept="1rXfSq" id="5JQC2dmPvHi" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPvHj" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Float.isNaN():boolean" resolve="isNaN" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPvHl" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPvHm" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPvHn" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPvHo" role="37wK5m">
                  <property role="Xl_RC" value="%s should not have been NaN" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPvHp" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvHq" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvHr" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvHs" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvKa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvKb" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is a non-null value other than {@link Float#NaN} (but it may be {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvKc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvKd" role="1dT_Ay">
            <property role="1dT_AB" value="Float#POSITIVE_INFINITY} or {@link Float#NEGATIVE_INFINITY})." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwV4">
    <property role="TrG5h" value="PrimitiveLongArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwV5" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwV6" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPwV7" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwV4" resolve="PrimitiveLongArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPwV9" role="11_B2D">
        <node concept="3cpWsb" id="5JQC2dmPwV8" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwXs" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwXz" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwX$" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code long[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwX_" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwXA" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwXB" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwXC" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwVa" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwVb" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwVc" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwVd" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwVe" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwVf" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPwVh" role="1tU5fm">
          <node concept="3cpWsb" id="5JQC2dmPwVg" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwVi" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAMU" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPAMV" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwVc" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAMW" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwVe" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwVm" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwVn" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwVo" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwVp" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPwVq" role="3cqZAk">
            <property role="Xl_RC" value="long" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwVr" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwVs" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwVt" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwVu" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwVv" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwVw" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq3ae4o" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Longs" resolve="Longs" />
            <ref role="37wK5l" to="gxwn:~Longs.asList(long...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="wYVAq3ae4p" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwVz" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwV$" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPwV_" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwVA" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwVB" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwVC" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwVD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3adD9" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwVE" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwVG" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwVF" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPwVI" role="1tU5fm">
              <node concept="3cpWsb" id="5JQC2dmPwVH" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwVJ" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwVK" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwVL" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwVM" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwVF" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwVN" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwVC" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwVP" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwVQ" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPwXK" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tl_" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TlA" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPwWl" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPwWm" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPwWh" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPwWi" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPwWj" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPwWk" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwVC" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPwWd" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPwWf" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwVS" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPwVU" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwVT" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPwVW" role="1tU5fm">
                  <node concept="3cpWsb" id="5JQC2dmPwVV" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPwVX" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPwVY" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPwVC" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPwW0" role="10QFUM">
                    <node concept="3cpWsb" id="5JQC2dmPwVZ" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPwW1" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPwW2" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPANG" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(long[],long[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPANH" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwVF" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPANI" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwVT" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwW7" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwW8" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwW9" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPwWa" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3admX" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Longs" resolve="Longs" />
                      <ref role="37wK5l" to="gxwn:~Longs.asList(long...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3admY" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwVT" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwWn" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwWo" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwWp" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwXD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXE" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwXF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXG" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwXH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXI" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwWq" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwWr" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwWs" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwWt" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3agys" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwWu" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwWw" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwWv" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPwWy" role="1tU5fm">
              <node concept="3cpWsb" id="5JQC2dmPwWx" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwWz" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPwX3" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPwX4" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPwX2" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPwXS" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8TlB" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8TlC" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlD" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlE" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlF" role="1PaTwD">
                    <property role="3oM_SC" value="long[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlG" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlH" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlI" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlJ" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlK" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlL" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlM" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TlN" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPwWY" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPwX0" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwW_" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPwWB" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPwWA" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPwWD" role="1tU5fm">
                  <node concept="3cpWsb" id="5JQC2dmPwWC" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPwWE" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPwWF" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPwWs" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPwWH" role="10QFUM">
                    <node concept="3cpWsb" id="5JQC2dmPwWG" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPwWI" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPwWJ" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPwWK" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPwWL" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPwWv" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwWM" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPwWs" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPANL" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(long[],long[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPANM" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwWv" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPANN" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwWA" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwWR" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPwWS" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwWT" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPwWU" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPwWV" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3alQ1" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Longs" resolve="Longs" />
                      <ref role="37wK5l" to="gxwn:~Longs.asList(long...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3alQ2" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwWA" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwX5" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwX6" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwX7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwXL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXM" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwXN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXO" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwXP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwXQ" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwX8" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwX9" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwXa" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPwXp" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPwXb" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPwXc" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwXd" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwXe" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPwXf" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPwXg" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPwXh" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPwXi" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwVt" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwXj" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPwXk" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwXl" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPwXm" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPwXn" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPwXo" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwVt" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwXq" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwXr" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPyK1">
    <property role="TrG5h" value="StringSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPyK2" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPyK3" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmPyK4" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPyK1" resolve="StringSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPyK5" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPySK" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPySS" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyST" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for string subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPySU" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPySV" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPySW" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPySX" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPySY" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPySZ" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPyK6" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPyK7" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPyK8" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyK9" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyKa" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyKb" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyKc" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyKd" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPANP" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmPANQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyK8" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPANR" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyKa" resolve="string" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyKh" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPyKi" role="jymVt">
      <property role="TrG5h" value="actualCustomStringRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyKj" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyKk" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyKl" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPyKm" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
            <node concept="1rXfSq" id="5JQC2dmPyKn" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPyKo" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyKp" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyKq" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyKr" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyKs" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyKt" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyKu" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyKv" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyKw" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyKx" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyKy" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyKz" role="3uHU7w" />
          </node>
          <node concept="9aQIb" id="5JQC2dmPyLa" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPyLb" role="9aQI4">
              <node concept="3clFbJ" id="5JQC2dmPyLc" role="3cqZAp">
                <node concept="3clFbC" id="5JQC2dmPyLd" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmPyLe" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPyLf" role="3uHU7w" />
                </node>
                <node concept="3clFbJ" id="5JQC2dmPyLk" role="9aQIa">
                  <node concept="3fqX7Q" id="5JQC2dmPyLl" role="3clFbw">
                    <node concept="1eOMI4" id="5JQC2dmPyLp" role="3fr31v">
                      <node concept="2ZW3vV" id="5JQC2dmPyLo" role="1eOMHV">
                        <node concept="37vLTw" id="5JQC2dmPyLm" role="2ZW6bz">
                          <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                        </node>
                        <node concept="3uibUv" id="5JQC2dmPyLn" role="2ZW6by">
                          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmPyL$" role="9aQIa">
                    <node concept="3fqX7Q" id="5JQC2dmPyL_" role="3clFbw">
                      <node concept="2OqwBi" id="5JQC2dmPyLA" role="3fr31v">
                        <node concept="1rXfSq" id="5JQC2dmPyLB" role="2Oq$k0">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPyLC" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                          <node concept="37vLTw" id="5JQC2dmPyLD" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyLF" role="3clFbx">
                      <node concept="3clFbJ" id="5JQC2dmPyLG" role="3cqZAp">
                        <node concept="3y3z36" id="5JQC2dmPyLH" role="3clFbw">
                          <node concept="1rXfSq" id="5JQC2dmPyLI" role="3uHU7B">
                            <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                          </node>
                          <node concept="10Nm6u" id="5JQC2dmPyLJ" role="3uHU7w" />
                        </node>
                        <node concept="9aQIb" id="5JQC2dmPyLX" role="9aQIa">
                          <node concept="3clFbS" id="5JQC2dmPyLY" role="9aQI4">
                            <node concept="3clFbF" id="5JQC2dmPyLZ" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmPAOG" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmPAOF" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPAOH" role="2OqNvi">
                                  <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                                  <node concept="Xl_RD" id="5JQC2dmPAOI" role="37wK5m">
                                    <property role="Xl_RC" value="" />
                                  </node>
                                  <node concept="10QFUN" id="5JQC2dmPAOJ" role="37wK5m">
                                    <node concept="37vLTw" id="5JQC2dmPAOK" role="10QFUP">
                                      <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                                    </node>
                                    <node concept="3uibUv" id="5JQC2dmPAOL" role="10QFUM">
                                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                                    </node>
                                  </node>
                                  <node concept="1rXfSq" id="5JQC2dmPAOM" role="37wK5m">
                                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbS" id="5JQC2dmPyLL" role="3clFbx">
                          <node concept="3clFbF" id="5JQC2dmPyLM" role="3cqZAp">
                            <node concept="2OqwBi" id="5JQC2dmPAOR" role="3clFbG">
                              <node concept="37vLTw" id="5JQC2dmPAOQ" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmPAOS" role="2OqNvi">
                                <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                                <node concept="3cpWs3" id="5JQC2dmPAOT" role="37wK5m">
                                  <node concept="3cpWs3" id="5JQC2dmPAOU" role="3uHU7B">
                                    <node concept="Xl_RD" id="5JQC2dmPAOV" role="3uHU7B">
                                      <property role="Xl_RC" value="\&quot;" />
                                    </node>
                                    <node concept="1rXfSq" id="5JQC2dmPAOW" role="3uHU7w">
                                      <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                                    </node>
                                  </node>
                                  <node concept="Xl_RD" id="5JQC2dmPAOX" role="3uHU7w">
                                    <property role="Xl_RC" value="\&quot;:" />
                                  </node>
                                </node>
                                <node concept="10QFUN" id="5JQC2dmPAP0" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmPAP1" role="10QFUP">
                                    <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                                  </node>
                                  <node concept="3uibUv" id="5JQC2dmPAP2" role="10QFUM">
                                    <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                                  </node>
                                </node>
                                <node concept="1rXfSq" id="5JQC2dmPAP3" role="37wK5m">
                                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPyLr" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPyLs" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPyLt" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPyLu" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s is equal to (%s)&lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPyLv" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="2OqwBi" id="5JQC2dmPyLw" role="37wK5m">
                          <node concept="2OqwBi" id="5JQC2dmPAP8" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmPAP7" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPAP9" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPyLy" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyLz" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyLh" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPyLi" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPyLj" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPyMk" resolve="isNull" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyK_" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPyKA" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPyKB" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPyKC" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPyKD" role="3uHU7w" />
              </node>
              <node concept="3clFbS" id="5JQC2dmPyKF" role="3clFbx">
                <node concept="3clFbJ" id="5JQC2dmPyKG" role="3cqZAp">
                  <node concept="2ZW3vV" id="5JQC2dmPyKJ" role="3clFbw">
                    <node concept="37vLTw" id="5JQC2dmPyKH" role="2ZW6bz">
                      <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPyKI" role="2ZW6by">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="9aQIb" id="5JQC2dmPyKX" role="9aQIa">
                    <node concept="3clFbS" id="5JQC2dmPyKY" role="9aQI4">
                      <node concept="3clFbF" id="5JQC2dmPyKZ" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPyL0" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="3cpWs3" id="5JQC2dmPyL1" role="37wK5m">
                            <node concept="3cpWs3" id="5JQC2dmPyL2" role="3uHU7B">
                              <node concept="Xl_RD" id="5JQC2dmPyL3" role="3uHU7B">
                                <property role="Xl_RC" value="Not true that " />
                              </node>
                              <node concept="1rXfSq" id="5JQC2dmPyL4" role="3uHU7w">
                                <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPyL5" role="3uHU7w">
                              <property role="Xl_RC" value=" is equal to (%s)&lt;%s&gt;" />
                            </node>
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmPyL6" role="37wK5m">
                            <node concept="2OqwBi" id="5JQC2dmPAPc" role="2Oq$k0">
                              <node concept="37vLTw" id="5JQC2dmPAPb" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                              </node>
                              <node concept="liA8E" id="5JQC2dmPAPd" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5JQC2dmPyL8" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPyL9" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPyKL" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPyKM" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPyKN" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="3cpWs3" id="5JQC2dmPyKO" role="37wK5m">
                          <node concept="3cpWs3" id="5JQC2dmPyKP" role="3uHU7B">
                            <node concept="Xl_RD" id="5JQC2dmPyKQ" role="3uHU7B">
                              <property role="Xl_RC" value="Not true that " />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPyKR" role="3uHU7w">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPyKS" role="3uHU7w">
                            <property role="Xl_RC" value=" is equal to &lt;%s&gt;" />
                          </node>
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPyKT" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                          <node concept="10QFUN" id="5JQC2dmPyKU" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmPyKV" role="10QFUP">
                              <ref role="3cqZAo" node="5JQC2dmPyKs" resolve="expected" />
                            </node>
                            <node concept="3uibUv" id="5JQC2dmPyKW" role="10QFUM">
                              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyM6" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyM7" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPyM8" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyM9" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPyMa" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyMb" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyMc" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyMd" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyMe" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPyMf" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmPyMg" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyMb" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyMh" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyMi" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyMj" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyT0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyT1" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isEqualTo} instead. String comparison is consistent with equality. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyMk" role="jymVt">
      <property role="TrG5h" value="isNull" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyMl" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyMm" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyMn" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPyMo" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyMp" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyMq" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPyMs" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyMt" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyMu" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyMv" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s is null" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyMw" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyMx" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyMy" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyMz" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyT2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyT3" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string is not null. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyM$" role="jymVt">
      <property role="TrG5h" value="hasLength" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyM_" role="3clF46">
        <property role="TrG5h" value="expectedLength" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPyMA" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyMB" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyMC" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do0G0e" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2do0G0f" role="37wK5m">
              <node concept="37vLTw" id="5JQC2do0G0g" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPyM_" resolve="expectedLength" />
              </node>
              <node concept="3cmrfG" id="5JQC2do0G0h" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2do0G0i" role="37wK5m">
              <property role="Xl_RC" value="expectedLength(%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2do0G0j" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyM_" resolve="expectedLength" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPyMK" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyMJ" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualLength" />
            <node concept="10Oyi0" id="5JQC2dmPyML" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPyMM" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPyMN" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyMO" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyMP" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPyMQ" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPyMR" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPyMJ" resolve="actualLength" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyMS" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPyM_" resolve="expectedLength" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyMU" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyMV" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyMW" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyMX" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s has a length of %s. It is %s." />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyMY" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyMZ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyM_" resolve="expectedLength" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyN0" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyMJ" resolve="actualLength" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyN1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyN2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyN3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyT4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyT5" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not have the given length. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyN4" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyN5" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyN6" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyN7" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyN8" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyN9" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyNf" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPyNg" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPyNh" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPyNi" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPyNj" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyNl" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyNm" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyNn" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                  <node concept="Xl_RD" id="5JQC2dmPyNo" role="37wK5m">
                    <property role="Xl_RC" value="is empty" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyNb" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyNc" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyNd" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyNe" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyNp" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyNq" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyNr" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyT6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyT7" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string is not equal to the zero-length &quot;empty string.&quot; " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyNs" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyNt" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyNu" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyNv" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyNw" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyNx" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyNB" role="9aQIa">
            <node concept="2OqwBi" id="5JQC2dmPyNC" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPyND" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyNE" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyNG" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyNH" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyNI" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                  <node concept="Xl_RD" id="5JQC2dmPyNJ" role="37wK5m">
                    <property role="Xl_RC" value="is not empty" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyNz" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyN$" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyN_" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyNA" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyNK" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyNL" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyNM" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyT8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyT9" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string is equal to the zero-length &quot;empty string.&quot; " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyNN" role="jymVt">
      <property role="TrG5h" value="contains" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyNO" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyNP" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyNQ" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyNR" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do0Hf9" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2do0Hfa" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyNO" resolve="string" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyNU" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyNV" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyNW" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyNX" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyO5" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPyO6" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPyO7" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPyO8" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPyO9" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmPyOa" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyNO" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyOc" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyOd" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyOe" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                  <node concept="Xl_RD" id="5JQC2dmPyOf" role="37wK5m">
                    <property role="Xl_RC" value="contains" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyOg" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                    <node concept="37vLTw" id="5JQC2dmPyOh" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyNO" resolve="string" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyNZ" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyO0" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyO1" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyO2" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference contains &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyO3" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                  <node concept="37vLTw" id="5JQC2dmPyO4" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyNO" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyOi" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyOj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyOk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTb" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not contain the given sequence. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyOl" role="jymVt">
      <property role="TrG5h" value="doesNotContain" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyOm" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyOn" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyOo" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyOp" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do19s0" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2do19s1" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyOm" resolve="string" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyOs" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyOt" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyOu" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyOv" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyOB" role="9aQIa">
            <node concept="2OqwBi" id="5JQC2dmPyOC" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPyOD" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyOE" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                <node concept="37vLTw" id="5JQC2dmPyOF" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyOm" resolve="string" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyOH" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyOI" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyOJ" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPyOK" role="37wK5m">
                    <property role="Xl_RC" value="%s unexpectedly contains &lt;%s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyOL" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyOM" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                    <node concept="37vLTw" id="5JQC2dmPyON" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyOm" resolve="string" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyOx" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyOy" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyOz" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyO$" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference contains &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyO_" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                  <node concept="37vLTw" id="5JQC2dmPyOA" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyOm" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyOO" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyOP" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyOQ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTd" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string contains the given sequence. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyOR" role="jymVt">
      <property role="TrG5h" value="startsWith" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyOS" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyOT" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyOU" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyOV" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do0H22" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2do0H23" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyOS" resolve="string" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyOY" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyOZ" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyP0" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyP1" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyP9" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPyPa" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPyPb" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPyPc" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPyPd" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.startsWith(java.lang.String):boolean" resolve="startsWith" />
                  <node concept="37vLTw" id="5JQC2dmPyPe" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyOS" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyPg" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyPh" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyPi" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                  <node concept="Xl_RD" id="5JQC2dmPyPj" role="37wK5m">
                    <property role="Xl_RC" value="starts with" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyPk" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                    <node concept="37vLTw" id="5JQC2dmPyPl" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyOS" resolve="string" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyP3" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyP4" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyP5" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyP6" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference starts with &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyP7" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                  <node concept="37vLTw" id="5JQC2dmPyP8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyOS" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyPm" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyPn" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyPo" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTf" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not start with the given string. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyPp" role="jymVt">
      <property role="TrG5h" value="endsWith" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyPq" role="3clF46">
        <property role="TrG5h" value="string" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyPr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyPs" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyPt" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do0$JD" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2do0$JE" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyPq" resolve="string" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyPw" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyPx" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyPy" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPyPz" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyPF" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPyPG" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPyPH" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPyPI" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPyPJ" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.endsWith(java.lang.String):boolean" resolve="endsWith" />
                  <node concept="37vLTw" id="5JQC2dmPyPK" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyPq" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyPM" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyPN" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyPO" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                  <node concept="Xl_RD" id="5JQC2dmPyPP" role="37wK5m">
                    <property role="Xl_RC" value="ends with" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyPQ" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                    <node concept="37vLTw" id="5JQC2dmPyPR" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyPq" resolve="string" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyP_" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyPA" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyPB" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyPC" role="37wK5m">
                  <property role="Xl_RC" value="Not true that null reference ends with &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyPD" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPySt" resolve="quote" />
                  <node concept="37vLTw" id="5JQC2dmPyPE" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyPq" resolve="string" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyPS" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyPT" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyPU" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTh" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not end with the given string. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyPV" role="jymVt">
      <property role="TrG5h" value="matches" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyPW" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyPX" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyPY" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyPZ" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyQ0" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPyQ1" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPyQ2" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyQ3" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.matches(java.lang.String):boolean" resolve="matches" />
                <node concept="37vLTw" id="5JQC2dmPyQ4" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyPW" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyQ6" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyQ7" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyQ8" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPyQ9" role="37wK5m">
                  <property role="Xl_RC" value="matches" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyQa" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyPW" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyQb" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyQc" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyQd" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTj" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not match the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyQe" role="jymVt">
      <property role="TrG5h" value="matches" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyQf" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPyQg" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPyQh" role="2B70Vg">
            <property role="Xl_RC" value="java.util.regex.Pattern" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyQi" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyQj" role="1tU5fm">
          <ref role="3uigEE" to="ni5j:~Pattern" resolve="Pattern" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyQk" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyQl" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyQm" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPyQn" role="3fr31v">
              <node concept="2OqwBi" id="5JQC2dmPAPg" role="2Oq$k0">
                <node concept="37vLTw" id="5JQC2dmPAPf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyQi" resolve="regex" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAPh" role="2OqNvi">
                  <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                  <node concept="1rXfSq" id="5JQC2dmPAPi" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPyQq" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Matcher.matches():boolean" resolve="matches" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyQs" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyQt" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyQu" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPyQv" role="37wK5m">
                  <property role="Xl_RC" value="matches" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyQw" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyQi" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyQx" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyQy" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyQz" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTl" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not match the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyQ$" role="jymVt">
      <property role="TrG5h" value="doesNotMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyQ_" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyQA" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyQB" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyQC" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPyQD" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPyQE" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPyQF" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.matches(java.lang.String):boolean" resolve="matches" />
              <node concept="37vLTw" id="5JQC2dmPyQG" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyQ_" resolve="regex" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyQI" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyQJ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyQK" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPyQL" role="37wK5m">
                  <property role="Xl_RC" value="fails to match" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyQM" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyQ_" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyQN" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyQO" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyQP" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTn" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string matches the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyQQ" role="jymVt">
      <property role="TrG5h" value="doesNotMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyQR" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPyQS" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPyQT" role="2B70Vg">
            <property role="Xl_RC" value="java.util.regex.Pattern" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyQU" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyQV" role="1tU5fm">
          <ref role="3uigEE" to="ni5j:~Pattern" resolve="Pattern" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyQW" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyQX" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPyQY" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPAPn" role="2Oq$k0">
              <node concept="37vLTw" id="5JQC2dmPAPm" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyQU" resolve="regex" />
              </node>
              <node concept="liA8E" id="5JQC2dmPAPo" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                <node concept="1rXfSq" id="5JQC2dmPAPp" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPyR1" role="2OqNvi">
              <ref role="37wK5l" to="ni5j:~Matcher.matches():boolean" resolve="matches" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyR3" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyR4" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyR5" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPyR6" role="37wK5m">
                  <property role="Xl_RC" value="fails to match" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyR7" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyQU" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyR8" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyR9" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyRa" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTp" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string matches the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyRb" role="jymVt">
      <property role="TrG5h" value="containsMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyRc" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPyRd" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPyRe" role="2B70Vg">
            <property role="Xl_RC" value="java.util.regex.Pattern" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyRf" role="3clF46">
        <property role="TrG5h" value="pattern" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyRg" role="1tU5fm">
          <ref role="3uigEE" to="ni5j:~Pattern" resolve="Pattern" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyRh" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyRi" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyRj" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPyRk" role="3fr31v">
              <node concept="2OqwBi" id="5JQC2dmPAPu" role="2Oq$k0">
                <node concept="37vLTw" id="5JQC2dmPAPt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyRf" resolve="pattern" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAPv" role="2OqNvi">
                  <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                  <node concept="1rXfSq" id="5JQC2dmPAPw" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPyRn" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Matcher.find():boolean" resolve="find" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyRp" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyRq" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyRr" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyRs" role="37wK5m">
                  <property role="Xl_RC" value="%s should have contained a match for &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyRt" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyRu" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyRf" resolve="pattern" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyRv" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyRw" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyRx" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTr" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not contain a match on the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyRy" role="jymVt">
      <property role="TrG5h" value="containsMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPyRz" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyR$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyR_" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyRA" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPyRB" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do0KRU" role="3fr31v">
              <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
              <ref role="37wK5l" node="5JQC2dmPxJW" resolve="containsMatch" />
              <node concept="1rXfSq" id="5JQC2do0KRV" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2do0KRW" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPyRz" resolve="regex" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyRG" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyRH" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyRI" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyRJ" role="37wK5m">
                  <property role="Xl_RC" value="%s should have contained a match for &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyRK" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyRL" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyRz" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyRM" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyRN" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyRO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTt" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string does not contain a match on the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyRP" role="jymVt">
      <property role="TrG5h" value="doesNotContainMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyRQ" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPyRR" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPyRS" role="2B70Vg">
            <property role="Xl_RC" value="java.util.regex.Pattern" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyRT" role="3clF46">
        <property role="TrG5h" value="pattern" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyRU" role="1tU5fm">
          <ref role="3uigEE" to="ni5j:~Pattern" resolve="Pattern" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyRV" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPyRW" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPyRX" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPAPA" role="2Oq$k0">
              <node concept="37vLTw" id="5JQC2dmPAP_" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyRT" resolve="pattern" />
              </node>
              <node concept="liA8E" id="5JQC2dmPAPB" role="2OqNvi">
                <ref role="37wK5l" to="ni5j:~Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher" resolve="matcher" />
                <node concept="1rXfSq" id="5JQC2dmPAPC" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPyS0" role="2OqNvi">
              <ref role="37wK5l" to="ni5j:~Matcher.find():boolean" resolve="find" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyS2" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPyS3" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPyS4" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPyS5" role="37wK5m">
                  <property role="Xl_RC" value="%s should not have contained a match for &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPyS6" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPyS7" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyRT" resolve="pattern" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyS8" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyS9" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPySa" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTv" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string contains a match on the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPySb" role="jymVt">
      <property role="TrG5h" value="doesNotContainMatch" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPySc" role="3clF46">
        <property role="TrG5h" value="regex" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPySd" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPySe" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPySf" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do0Cas" role="3clFbw">
            <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
            <ref role="37wK5l" node="5JQC2dmPxJW" resolve="containsMatch" />
            <node concept="1rXfSq" id="5JQC2do0Cat" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2do0Cau" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPySc" resolve="regex" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPySk" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPySl" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPySm" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPySn" role="37wK5m">
                  <property role="Xl_RC" value="%s should not have contained a match for &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPySo" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPySp" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPySc" resolve="regex" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPySq" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPySr" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPySs" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyTw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyTx" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the string contains a match on the given regex. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPySt" role="jymVt">
      <property role="TrG5h" value="quote" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPySu" role="3clF46">
        <property role="TrG5h" value="toBeWrapped" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPySv" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPySw" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPySx" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPySy" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPySH" role="3cqZAk">
            <node concept="1eOMI4" id="5JQC2dmPySA" role="3K4Cdx">
              <node concept="3clFbC" id="5JQC2dmPySz" role="1eOMHV">
                <node concept="37vLTw" id="5JQC2dmPyS$" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPySu" resolve="toBeWrapped" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPyS_" role="3uHU7w" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmPySB" role="3K4E3e">
              <property role="Xl_RC" value="null" />
            </node>
            <node concept="3cpWs3" id="5JQC2dmPySC" role="3K4GZi">
              <node concept="3cpWs3" id="5JQC2dmPySD" role="3uHU7B">
                <node concept="Xl_RD" id="5JQC2dmPySE" role="3uHU7B">
                  <property role="Xl_RC" value="\&quot;" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPySF" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPySu" resolve="toBeWrapped" />
                </node>
              </node>
              <node concept="Xl_RD" id="5JQC2dmPySG" role="3uHU7w">
                <property role="Xl_RC" value="\&quot;" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPySI" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPySJ" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw8U">
    <property role="TrG5h" value="SubjectFactory" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPw8V" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPw8W" role="16eVyc">
      <property role="TrG5h" value="S" />
      <node concept="3uibUv" id="5JQC2dmPw8X" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
        <node concept="16syzq" id="5JQC2dmPw8Y" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPw8W" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmPw8Z" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPw90" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="16euLQ" id="5JQC2dmPw90" role="16eVyc">
      <property role="TrG5h" value="T" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPw99" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw9c" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw9d" role="1dT_Ay">
          <property role="1dT_AB" value=" A custom subject factory which will return a FooSubject (which is a {@code Subject&lt;Foo&gt;})." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw9e" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw9f" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw9g" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw9h" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw91" role="jymVt">
      <property role="TrG5h" value="getSubject" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPw92" role="3clF46">
        <property role="TrG5h" value="fs" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw93" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw94" role="3clF46">
        <property role="TrG5h" value="that" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPw95" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPw90" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw96" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPw97" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmPw98" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPw8W" resolve="S" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzi5">
    <property role="TrG5h" value="SortedSetSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzi6" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzkE" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzn5" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPznf" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzng" role="1dT_Ay">
          <property role="1dT_AB" value="Tests for {@link SortedSet} and {@link NavigableSet} objects. This class supports assertions" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPznh" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzni" role="1dT_Ay">
          <property role="1dT_AB" value="based on {@code NavigableSet}'s API even if the subject only implements {@code SortedSet}." />
        </node>
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmPzkF" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="actualAsNavigableSet" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPzkH" role="1tU5fm">
        <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
        <node concept="3qTvmN" id="5JQC2dmPzkI" role="11_B2D" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzkJ" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPzkK" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzkL" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzkM" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzkN" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzkO" role="3clF46">
        <property role="TrG5h" value="set" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzkP" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
          <node concept="3qTvmN" id="5JQC2dmPzkQ" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzkR" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAPG" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPykk" resolve="IterableSubject" />
          <node concept="37vLTw" id="5JQC2dmPAPH" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzkM" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAPI" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzkO" resolve="set" />
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzkS" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPzkT" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPzkU" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPzkF" resolve="actualAsNavigableSet" />
            </node>
            <node concept="3K4zz7" id="5JQC2dmPzl1" role="37vLTx">
              <node concept="3clFbC" id="5JQC2dmPzkV" role="3K4Cdx">
                <node concept="37vLTw" id="5JQC2dmPzkW" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPzkO" resolve="set" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPzkX" role="3uHU7w" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzkY" role="3K4E3e" />
              <node concept="2YIFZM" id="5JQC2dmPAQs" role="3K4GZi">
                <ref role="1Pybhc" node="5JQC2dmPzi7" resolve="SortedSetSubject.SortedSetAsNavigableSet" />
                <ref role="37wK5l" node="5JQC2dmPzij" resolve="wrapIfNecessary" />
                <node concept="37vLTw" id="5JQC2dmPAQt" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzkO" resolve="set" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzl5" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzl6" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzl7" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzl8" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzl9" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPzlb" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPzla" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzlc" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzld" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPzle" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
            <node concept="37vLTw" id="5JQC2dmPzlf" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzl7" resolve="format" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPzlg" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzl9" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzlh" role="3cqZAp">
          <node concept="Xjq3P" id="5JQC2dmPzli" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzlj" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzlk" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzi5" resolve="SortedSetSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzll" role="jymVt">
      <property role="TrG5h" value="hasFirstElement" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzlm" role="3clF46">
        <property role="TrG5h" value="element" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzln" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzlo" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzlp" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzlq" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzlr" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPzls" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
            </node>
            <node concept="liA8E" id="5JQC2dmPzlt" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzlv" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzlw" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzlx" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzly" role="37wK5m">
                  <property role="Xl_RC" value="has first element" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzlz" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzlm" resolve="element" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPzl$" role="3cqZAp" />
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPzl_" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzlA" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do1jYR" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="2OqwBi" id="5JQC2do1jYS" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2do1jYT" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                </node>
                <node concept="liA8E" id="5JQC2do1jYU" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~SortedSet.first():java.lang.Object" resolve="first" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2do1jYV" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzlm" resolve="element" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzlH" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPzlI" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPzlJ" role="3clFbw">
                <node concept="1rXfSq" id="5JQC2dmPzlK" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzlL" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmPzlM" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzlm" resolve="element" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzlO" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPzlP" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPzlQ" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPzlR" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has first element &lt;%s&gt;. It does contain this element, but the first element is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPzlS" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPzlT" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzlm" resolve="element" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPzlU" role="37wK5m">
                      <node concept="1rXfSq" id="5JQC2dmPzlV" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPzlW" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~SortedSet.first():java.lang.Object" resolve="first" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPzlX" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPzlY" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzlZ" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPzm0" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s has first element &lt;%s&gt;. It does not contain this element, and the first element is &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzm1" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzm2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzlm" resolve="element" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPzm3" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmPzm4" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPzm5" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedSet.first():java.lang.Object" resolve="first" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzm6" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzm7" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzm8" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPznj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznk" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject does not have the given first element. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzm9" role="jymVt">
      <property role="TrG5h" value="hasLastElement" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzma" role="3clF46">
        <property role="TrG5h" value="element" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzmb" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzmc" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzmd" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzme" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzmf" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPzmg" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
            </node>
            <node concept="liA8E" id="5JQC2dmPzmh" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzmj" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzmk" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzml" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzmm" role="37wK5m">
                  <property role="Xl_RC" value="has last element" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzmn" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzma" resolve="element" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPzmo" role="3cqZAp" />
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPzmp" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzmq" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do1eD5" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="2OqwBi" id="5JQC2do1eD6" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2do1eD7" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                </node>
                <node concept="liA8E" id="5JQC2do1eD8" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~SortedSet.last():java.lang.Object" resolve="last" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2do1eD9" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzma" resolve="element" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzmx" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPzmy" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPzmz" role="3clFbw">
                <node concept="1rXfSq" id="5JQC2dmPzm$" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzm_" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmPzmA" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzma" resolve="element" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzmC" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPzmD" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPzmE" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPzmF" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has last element &lt;%s&gt;. It does contain this element, but the last element is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPzmG" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPzmH" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzma" resolve="element" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPzmI" role="37wK5m">
                      <node concept="1rXfSq" id="5JQC2dmPzmJ" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPzmK" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~SortedSet.last():java.lang.Object" resolve="last" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPzmL" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPzmM" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzmN" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPzmO" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s has last element &lt;%s&gt;. It does not contain this element, and the last element is &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzmP" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzmQ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzma" resolve="element" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPzmR" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmPzmS" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPzmX" resolve="actualAsNavigableSet" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPzmT" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedSet.last():java.lang.Object" resolve="last" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzmU" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzmV" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzmW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPznl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznm" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject does not have the given last element. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzmX" role="jymVt">
      <property role="TrG5h" value="actualAsNavigableSet" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzmY" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzmZ" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzn0" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPzkF" resolve="actualAsNavigableSet" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzn1" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzn2" role="3clF45">
        <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
        <node concept="3qTvmN" id="5JQC2dmPzn3" role="11_B2D" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzn4" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPznn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzno" role="1dT_Ay">
            <property role="1dT_AB" value="Provides access to the actual value via {@link NavigableSet}'s API. This may or may be the same" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznq" role="1dT_Ay">
            <property role="1dT_AB" value="object as returned by {@link #actual}, therefore you should avoid identity (e.g. {@code ==}) or" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzns" role="1dT_Ay">
            <property role="1dT_AB" value="type (e.g. {@code instanceof}) assertions on this object." />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPzi7" role="jymVt">
      <property role="TrG5h" value="SortedSetAsNavigableSet" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPzi8" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPzi9" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPzia" role="1zkMxy">
        <ref role="3uigEE" to="3o3z:~ForwardingSortedSet" resolve="ForwardingSortedSet" />
        <node concept="16syzq" id="5JQC2dmPzib" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPzic" role="EKbjA">
        <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
        <node concept="16syzq" id="5JQC2dmPzid" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPzkD" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPznt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznu" role="1dT_Ay">
            <property role="1dT_AB" value=" A view into a {@link SortedSet} as a {@link NavigableSet}, enabling Truth to support assertions" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznw" role="1dT_Ay">
            <property role="1dT_AB" value=" on {@code NavigableSet}'s API even if the user only has a {@code SortedSet}. For now only the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzny" role="1dT_Ay">
            <property role="1dT_AB" value=" functionality needed for the existing assertions has been implemented. Reference {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzn$" role="1dT_Ay">
            <property role="1dT_AB" value=" com.google.common.collect.ForwardingNavigableSet}'s behavior when implementing additional" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzn_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznA" role="1dT_Ay">
            <property role="1dT_AB" value=" methods." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznC" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznE" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;TODO(diamondm): consider moving this to com.google.common.collect if it's ever fully" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPznF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPznG" role="1dT_Ay">
            <property role="1dT_AB" value=" implemented." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPzie" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPzig" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
          <node concept="16syzq" id="5JQC2dmPzih" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPzii" role="1B3o_S" />
      </node>
      <node concept="2YIFZL" id="5JQC2dmPzij" role="jymVt">
        <property role="TrG5h" value="wrapIfNecessary" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPzik" role="16eVyc">
          <property role="TrG5h" value="E" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzil" role="3clF46">
          <property role="TrG5h" value="set" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPzim" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
            <node concept="16syzq" id="5JQC2dmPzin" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPzik" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzio" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPzip" role="3cqZAp">
            <node concept="2ZW3vV" id="5JQC2dmPzis" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPziq" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmPzil" resolve="set" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPzir" role="2ZW6by">
                <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPziu" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPziv" role="3cqZAp">
                <node concept="10QFUN" id="5JQC2dmPziw" role="3cqZAk">
                  <node concept="37vLTw" id="5JQC2dmPzix" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPzil" resolve="set" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPziy" role="10QFUM">
                    <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
                    <node concept="16syzq" id="5JQC2dmPziz" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmPzik" resolve="E" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPzi$" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPAQw" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmPASg" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmPziE" resolve="SortedSetSubject.SortedSetAsNavigableSet" />
                <node concept="37vLTw" id="5JQC2dmPASh" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzil" resolve="set" />
                </node>
                <node concept="16syzq" id="5JQC2do1j6K" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmPzik" resolve="E" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmPziC" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmPziD" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzik" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmPziE" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPziF" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPziG" role="3clF46">
          <property role="TrG5h" value="delegate" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPziH" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
            <node concept="16syzq" id="5JQC2dmPziI" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPziJ" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPziK" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPziL" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPziM" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPziN" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPziO" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPzie" resolve="delegate" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2do1fYh" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2do1fYi" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPziG" resolve="delegate" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPziR" role="jymVt">
        <property role="TrG5h" value="delegate" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPziS" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPziT" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPziU" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPziV" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmPzie" resolve="delegate" />
            </node>
          </node>
        </node>
        <node concept="3Tmbuc" id="5JQC2dmPziW" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPziX" role="3clF45">
          <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
          <node concept="16syzq" id="5JQC2dmPziY" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPziZ" role="jymVt">
        <property role="TrG5h" value="ceiling" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzj0" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzj1" role="3clF46">
          <property role="TrG5h" value="e" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzj2" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzj3" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzj5" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASj" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASk" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzj6" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzj7" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzj8" role="jymVt">
        <property role="TrG5h" value="descendingIterator" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzj9" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzja" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzjc" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASl" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASm" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjd" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzje" role="3clF45">
          <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
          <node concept="16syzq" id="5JQC2dmPzjf" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjg" role="jymVt">
        <property role="TrG5h" value="descendingSet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzjh" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzji" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzjk" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASn" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASo" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjl" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzjm" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmPzjn" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjo" role="jymVt">
        <property role="TrG5h" value="floor" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzjp" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzjq" role="3clF46">
          <property role="TrG5h" value="e" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzjr" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzjs" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzju" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASp" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASq" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjv" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzjw" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjx" role="jymVt">
        <property role="TrG5h" value="headSet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzjy" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzjz" role="3clF46">
          <property role="TrG5h" value="toElement" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzj$" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzj_" role="3clF46">
          <property role="TrG5h" value="inclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmPzjA" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzjB" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzjD" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASr" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASs" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjE" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzjF" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmPzjG" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjH" role="jymVt">
        <property role="TrG5h" value="higher" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzjI" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzjJ" role="3clF46">
          <property role="TrG5h" value="e" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzjK" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzjL" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzjN" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASt" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASu" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjO" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzjP" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjQ" role="jymVt">
        <property role="TrG5h" value="lower" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzjR" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzjS" role="3clF46">
          <property role="TrG5h" value="e" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzjT" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzjU" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzjW" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASv" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASw" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzjX" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzjY" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzjZ" role="jymVt">
        <property role="TrG5h" value="pollFirst" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzk0" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzk1" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzk3" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASx" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASy" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzk4" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzk5" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzk6" role="jymVt">
        <property role="TrG5h" value="pollLast" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzk7" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzk8" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzka" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASz" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPAS$" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzkb" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmPzkc" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzkd" role="jymVt">
        <property role="TrG5h" value="subSet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzke" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkf" role="3clF46">
          <property role="TrG5h" value="fromElement" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzkg" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkh" role="3clF46">
          <property role="TrG5h" value="fromInclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmPzki" role="1tU5fm" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkj" role="3clF46">
          <property role="TrG5h" value="toElement" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzkk" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkl" role="3clF46">
          <property role="TrG5h" value="toInclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmPzkm" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzkn" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzkp" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPAS_" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASA" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzkq" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzkr" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmPzks" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzkt" role="jymVt">
        <property role="TrG5h" value="tailSet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzku" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkv" role="3clF46">
          <property role="TrG5h" value="fromElement" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmPzkw" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPzkx" role="3clF46">
          <property role="TrG5h" value="inclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmPzky" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzkz" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzk_" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPASB" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPASC" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzkA" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPzkB" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmPzkC" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzi9" resolve="E" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwXT">
    <property role="TrG5h" value="Truth" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwXU" role="1B3o_S" />
    <node concept="3UR2Jj" id="5JQC2dmPx6P" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPx76" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx77" role="1dT_Ay">
          <property role="1dT_AB" value=" Truth - a proposition framework for tests, supporting JUnit style assertion and assumption" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx78" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx79" role="1dT_Ay">
          <property role="1dT_AB" value=" semantics in a fluent style." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7a" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7b" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7c" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7d" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Truth is the simplest entry point class. A developer can statically import the assertThat()" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7e" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7f" role="1dT_Ay">
          <property role="1dT_AB" value=" method to get easy access to the library's capabilities. Then, instead of writing:" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7g" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7h" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7i" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7j" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7k" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7l" role="1dT_Ay">
          <property role="1dT_AB" value=" Assert.assertEquals(a, b);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7m" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7n" role="1dT_Ay">
          <property role="1dT_AB" value=" Assert.assertTrue(c);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7o" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7p" role="1dT_Ay">
          <property role="1dT_AB" value=" Assert.assertTrue(d.contains(a));" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7q" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7r" role="1dT_Ay">
          <property role="1dT_AB" value=" Assert.assertTrue(d.contains(a) &amp;&amp; d.contains(b));" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7s" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7t" role="1dT_Ay">
          <property role="1dT_AB" value=" Assert.assertTrue(d.contains(a) || d.contains(b) || d.contains(c));" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7u" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7v" role="1dT_Ay">
          <property role="1dT_AB" value=" }&lt;/pre&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7w" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7x" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7z" role="1dT_Ay">
          <property role="1dT_AB" value=" one would write:" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7$" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7_" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7A" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7B" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7C" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7D" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(a).isEqualTo(b);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7E" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7F" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(c).isTrue();" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7G" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7H" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(d).contains(a);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7I" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7J" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(d).containsAllOf(a, b);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7K" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7L" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(d).containsAnyOf(a, b, c);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7M" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7N" role="1dT_Ay">
          <property role="1dT_AB" value=" }&lt;/pre&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7O" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7P" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7Q" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7R" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Tests should be easier to read, and flow more clearly." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7S" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7T" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7U" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7V" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Often, tests assert a relationship between a value produced by the test (the &quot;actual&quot; value)" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7W" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7X" role="1dT_Ay">
          <property role="1dT_AB" value=" and some reference value (the &quot;expected&quot; value). It is strongly recommended that the actual value" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx7Y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx7Z" role="1dT_Ay">
          <property role="1dT_AB" value=" is made the subject of the assertion. For example:" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx80" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx81" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx82" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx83" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx84" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx85" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(actual).isEqualTo(expected);  // recommended" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx86" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx87" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(expected).isEqualTo(actual);  // not recommended" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx88" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx89" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(actual).isIn(expectedPossibilities);  // recommended" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx8a" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx8b" role="1dT_Ay">
          <property role="1dT_AB" value=" assertThat(expectedPossibilities).contains(actual);  // not recommended" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx8c" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx8d" role="1dT_Ay">
          <property role="1dT_AB" value=" }&lt;/pre&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx8e" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx8f" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx8g" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx8h" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPx8i" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPx8j" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwZf" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwZg" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPwZh" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPwZi" role="1B3o_S" />
    </node>
    <node concept="Wx3nA" id="5JQC2dmPwXV" role="jymVt">
      <property role="TrG5h" value="THROW_ASSERTION_ERROR" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPwXW" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPwXX" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPwXY" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPwXZ" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmP$8X" resolve="AbstractFailureStrategy" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPwY0" role="jymVt">
              <property role="TrG5h" value="fail" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPwY1" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPwY2" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwY3" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwY4" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwY5" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwY6" role="3clF47">
                <node concept="YS8fn" id="5JQC2dmPwYb" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwY7" role="YScLw">
                    <ref role="37wK5l" node="5JQC2dmPwYB" resolve="stripFramesAndTryToAddCause" />
                    <node concept="2ShNRf" id="5JQC2dmPASD" role="37wK5m">
                      <node concept="1pGfFk" id="5JQC2dmPAV9" role="2ShVmc">
                        <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                        <node concept="37vLTw" id="5JQC2dmPAVa" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPwY2" resolve="message" />
                        </node>
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPwYa" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwY4" resolve="cause" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPwYc" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPwYd" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmPwYe" role="jymVt">
              <property role="TrG5h" value="failComparing" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPwYf" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPwYg" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwYh" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwYi" role="3clF46">
                <property role="TrG5h" value="expected" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwYj" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwYk" role="3clF46">
                <property role="TrG5h" value="actual" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwYl" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwYm" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="2AHcQZ" id="5JQC2dmPwYn" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPwYo" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwYp" role="3clF47">
                <node concept="3cpWs8" id="5JQC2dmPwYr" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPwYq" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="e" />
                    <node concept="3uibUv" id="5JQC2dmPwYs" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dnQDCp" role="33vP2m">
                      <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
                      <ref role="37wK5l" node="5JQC2dmPxJI" resolve="comparisonFailure" />
                      <node concept="37vLTw" id="5JQC2dnQDCq" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwYg" resolve="message" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dnQWZM" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dnQWZL" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwYi" resolve="expected" />
                        </node>
                        <node concept="liA8E" id="5JQC2dnQWZN" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~CharSequence.toString():java.lang.String" resolve="toString" />
                        </node>
                      </node>
                      <node concept="2OqwBi" id="5JQC2dnQDCs" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dnQDCt" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwYk" resolve="actual" />
                        </node>
                        <node concept="liA8E" id="5JQC2dnQDCu" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~CharSequence.toString():java.lang.String" resolve="toString" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="YS8fn" id="5JQC2dmPwY$" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwYx" role="YScLw">
                    <ref role="37wK5l" node="5JQC2dmPwYB" resolve="stripFramesAndTryToAddCause" />
                    <node concept="37vLTw" id="5JQC2dmPwYy" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwYq" resolve="e" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPwYz" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwYm" resolve="cause" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPwY_" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPwYA" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmPwYB" role="jymVt">
              <property role="TrG5h" value="stripFramesAndTryToAddCause" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="37vLTG" id="5JQC2dmPwYC" role="3clF46">
                <property role="TrG5h" value="failure" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwYD" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwYE" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="2AHcQZ" id="5JQC2dmPwYF" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPwYG" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwYH" role="3clF47">
                <node concept="3clFbJ" id="5JQC2dmPwYI" role="3cqZAp">
                  <node concept="3y3z36" id="5JQC2dmPwYJ" role="3clFbw">
                    <node concept="37vLTw" id="5JQC2dmPwYK" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPwYE" resolve="cause" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmPwYL" role="3uHU7w" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwYN" role="3clFbx">
                    <node concept="SfApY" id="5JQC2dmPwZ2" role="3cqZAp">
                      <node concept="TDmWw" id="5JQC2dmPwZ3" role="TEbGg">
                        <node concept="3clFbS" id="5JQC2dmPwYX" role="TDEfX">
                          <node concept="3SKdUt" id="5JQC2dmPx8l" role="3cqZAp">
                            <node concept="1PaTwC" id="1fGNp1n8TlO" role="3ndbpf">
                              <node concept="3oM_SD" id="1fGNp1n8TlP" role="1PaTwD">
                                <property role="3oM_SC" value="https://code.google.com/p/android/issues/detail?id=29378" />
                              </node>
                            </node>
                          </node>
                          <node concept="3SKdUt" id="5JQC2dmPx8n" role="3cqZAp">
                            <node concept="1PaTwC" id="1fGNp1n8TlQ" role="3ndbpf">
                              <node concept="3oM_SD" id="1fGNp1n8TlR" role="1PaTwD">
                                <property role="3oM_SC" value="No" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlS" role="1PaTwD">
                                <property role="3oM_SC" value="message," />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlT" role="1PaTwD">
                                <property role="3oM_SC" value="but" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlU" role="1PaTwD">
                                <property role="3oM_SC" value="it's" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlV" role="1PaTwD">
                                <property role="3oM_SC" value="the" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlW" role="1PaTwD">
                                <property role="3oM_SC" value="best" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlX" role="1PaTwD">
                                <property role="3oM_SC" value="we" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlY" role="1PaTwD">
                                <property role="3oM_SC" value="can" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8TlZ" role="1PaTwD">
                                <property role="3oM_SC" value="do" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8Tm0" role="1PaTwD">
                                <property role="3oM_SC" value="without" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8Tm1" role="1PaTwD">
                                <property role="3oM_SC" value="awful" />
                              </node>
                              <node concept="3oM_SD" id="1fGNp1n8Tm2" role="1PaTwD">
                                <property role="3oM_SC" value="hacks." />
                              </node>
                            </node>
                          </node>
                          <node concept="YS8fn" id="5JQC2dmPwZ1" role="3cqZAp">
                            <node concept="2YIFZM" id="5JQC2dmQaY4" role="YScLw">
                              <ref role="1Pybhc" node="5JQC2dmPwSH" resolve="FailureStrategy" />
                              <ref role="37wK5l" node="5JQC2dmPwTn" resolve="stripTruthStackFrames" />
                              <node concept="2ShNRf" id="5JQC2dmQaY5" role="37wK5m">
                                <node concept="1pGfFk" id="5JQC2dmQaY6" role="2ShVmc">
                                  <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                                  <node concept="37vLTw" id="5JQC2dmQaY7" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPwYE" resolve="cause" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWsn" id="5JQC2dmPwYT" role="TDEfY">
                          <property role="3TUv4t" value="false" />
                          <property role="TrG5h" value="alreadyInitializedBecauseOfHarmonyBug" />
                          <node concept="3uibUv" id="5JQC2dmPwYV" role="1tU5fm">
                            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPwYP" role="SfCbr">
                        <node concept="3clFbF" id="5JQC2dmPwYQ" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmPAWn" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPAWm" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPwYC" resolve="failure" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPAWo" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Throwable.initCause(java.lang.Throwable):java.lang.Throwable" resolve="initCause" />
                              <node concept="37vLTw" id="5JQC2dmPAWp" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPwYE" resolve="cause" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPwZ4" role="3cqZAp">
                  <node concept="2YIFZM" id="5JQC2dmQaY8" role="3cqZAk">
                    <ref role="1Pybhc" node="5JQC2dmPwSH" resolve="FailureStrategy" />
                    <ref role="37wK5l" node="5JQC2dmPwTn" resolve="stripTruthStackFrames" />
                    <node concept="37vLTw" id="5JQC2dmQaY9" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwYC" resolve="failure" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm6S6" id="5JQC2dmPwZ7" role="1B3o_S" />
              <node concept="3uibUv" id="5JQC2dmPwZ8" role="3clF45">
                <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwZ9" role="1B3o_S" />
    </node>
    <node concept="Wx3nA" id="5JQC2dmPwZa" role="jymVt">
      <property role="TrG5h" value="ASSERT" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPwZb" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPAWq" role="33vP2m">
        <node concept="1pGfFk" id="5JQC2dmPAWM" role="2ShVmc">
          <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
          <node concept="37vLTw" id="5JQC2dmPAWN" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwXV" resolve="THROW_ASSERTION_ERROR" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwZe" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwZj" role="jymVt">
      <property role="TrG5h" value="assert_" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwZk" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwZl" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwZm" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwZa" resolve="ASSERT" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwZn" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwZo" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwZp" role="jymVt">
      <property role="TrG5h" value="assertWithMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwZq" role="3clF46">
        <property role="TrG5h" value="messageToPrepend" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwZr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwZs" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwZt" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPwZu" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPwZv" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPwZw" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzY6" resolve="withMessage" />
              <node concept="37vLTw" id="5JQC2dmPwZx" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwZq" resolve="messageToPrepend" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwZy" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwZz" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwZ$" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPx8o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8p" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a {@link TestVerb} that will prepend the given message to the failure message in the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8r" role="1dT_Ay">
            <property role="1dT_AB" value="event of a test failure." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwZ_" role="jymVt">
      <property role="TrG5h" value="assertWithMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwZA" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwZB" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwZC" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPwZE" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwZD" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwZF" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwZG" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPwZH" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPwZI" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPwZJ" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzY6" resolve="withMessage" />
              <node concept="37vLTw" id="5JQC2dmPwZK" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwZA" resolve="format" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPwZL" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwZC" resolve="args" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwZM" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwZN" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwZO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPx8s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8t" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a {@link TestVerb} that will prepend the formatted message using the specified" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8v" role="1dT_Ay">
            <property role="1dT_AB" value=" arguments to the failure message in the event of a test failure." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8x" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8z" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The failure message template string only supports the {@code &quot;%s&quot;} specifier," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8_" role="1dT_Ay">
            <property role="1dT_AB" value=" not the full range of {@link java.util.Formatter} specifiers." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8B" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8D" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws IllegalArgumentException if the number of placeholders in the format string does not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8F" role="1dT_Ay">
            <property role="1dT_AB" value="     equal the number of given arguments" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwZP" role="jymVt">
      <property role="TrG5h" value="assertAbout" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwZQ" role="16eVyc">
        <property role="TrG5h" value="S" />
        <node concept="3uibUv" id="5JQC2dmPwZR" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
          <node concept="16syzq" id="5JQC2dmPwZS" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwZQ" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPwZT" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwZU" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="16euLQ" id="5JQC2dmPwZU" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwZV" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwZW" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPw8U" resolve="SubjectFactory" />
          <node concept="16syzq" id="5JQC2dmPwZX" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwZQ" resolve="S" />
          </node>
          <node concept="16syzq" id="5JQC2dmPwZY" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPwZU" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwZZ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx00" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx01" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx02" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx03" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmP$73" resolve="about" />
              <node concept="37vLTw" id="5JQC2dmPx04" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwZV" resolve="factory" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx05" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx06" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$1T" resolve="AbstractVerb.DelegatedVerb" />
        <node concept="16syzq" id="5JQC2dmPx07" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwZQ" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmPx08" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwZU" resolve="T" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPx09" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPx8G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8H" role="1dT_Ay">
            <property role="1dT_AB" value=" The recommended method of extension of Truth to new types, which is documented in {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8J" role="1dT_Ay">
            <property role="1dT_AB" value=" com.google.common.truth.delegation.DelegationTest}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8L" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8M" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8N" role="1dT_Ay">
            <property role="1dT_AB" value=" @param factory a SubjectFactory&lt;S, T&gt; implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8O" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8P" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb for the type returned by the SubjectFactory" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx0a" role="jymVt">
      <property role="TrG5h" value="assertAbout" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPx0b" role="16eVyc">
        <property role="TrG5h" value="V" />
        <node concept="3uibUv" id="5JQC2dmPx0c" role="3ztrMU">
          <ref role="3uigEE" node="5JQC2dmPvSf" resolve="AbstractDelegatedVerb" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPx0d" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPx0e" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPy2W" resolve="DelegatedVerbFactory" />
          <node concept="16syzq" id="5JQC2dmPx0f" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPx0b" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx0g" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx0h" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx0i" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx0j" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx0k" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmP$73" resolve="about" />
              <node concept="37vLTw" id="5JQC2dmPx0l" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx0d" resolve="factory" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx0m" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmPx0n" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPx0b" resolve="V" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPx0o" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPx8Q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8R" role="1dT_Ay">
            <property role="1dT_AB" value=" A generic, advanced method of extension of Truth to new types, which is documented on {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8S" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8T" role="1dT_Ay">
            <property role="1dT_AB" value=" DelegatedVerbFactory}. Extension creators should prefer {@link SubjectFactory} if possible." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8U" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8V" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8X" role="1dT_Ay">
            <property role="1dT_AB" value=" @param &lt;V&gt; the type of {@link AbstractDelegatedVerb} to return" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx8Y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx8Z" role="1dT_Ay">
            <property role="1dT_AB" value=" @param factory a {@code DelegatedVerbFactory&lt;V&gt;} implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPx90" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPx91" role="1dT_Ay">
            <property role="1dT_AB" value=" @return A custom verb of type {@code &lt;V&gt;}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx0p" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPx0q" role="16eVyc">
        <property role="TrG5h" value="T" />
        <node concept="3uibUv" id="5JQC2dmPx0r" role="3ztrMU">
          <ref role="3uigEE" to="wyt6:~Comparable" resolve="Comparable" />
          <node concept="3qTvmN" id="5JQC2dmPx0s" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPx0t" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx0u" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPx0v" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPx0q" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx0w" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx0x" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx0y" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx0z" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx0$" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzRO" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx0_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx0t" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx0A" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx0B" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
        <node concept="3qTvmN" id="5JQC2dmPx0C" role="11_B2D" />
        <node concept="16syzq" id="5JQC2dmPx0D" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPx0q" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx0E" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx0F" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx0G" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx0H" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx0I" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx0J" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx0K" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx0L" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx0M" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSb" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx0N" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx0F" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx0O" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx0P" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwC8" resolve="BigDecimalSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx0Q" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx0R" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx0S" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx0T" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx0U" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx0V" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx0W" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx0X" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx0Y" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSm" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx0Z" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx0R" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx10" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx11" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
        <node concept="3uibUv" id="5JQC2dmPx12" role="11_B2D">
          <ref role="3uigEE" node="5JQC2dmPw8A" resolve="DefaultSubject" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx13" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx14" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPx15" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPx16" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPx17" role="2B70Vg">
            <property role="Xl_RC" value="ClassSubject.java" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPx18" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx19" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx1a" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPx1b" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx1c" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx1d" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx1e" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx1f" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx1g" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSz" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx1h" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx18" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx1i" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx1j" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvB_" resolve="ClassSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx1k" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx1l" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx1m" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx1n" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx1o" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx1p" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx1q" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx1r" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx1s" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSM" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx1t" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx1l" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx1u" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx1v" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwHp" resolve="ThrowableSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx1w" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx1x" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx1y" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx1z" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx1$" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx1_" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx1A" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx1B" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx1C" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSX" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx1D" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx1x" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx1E" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx1F" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$8g" resolve="LongSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx1G" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx1H" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx1I" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx1J" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx1K" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx1L" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx1M" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx1N" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx1O" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzT8" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx1P" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx1H" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx1Q" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx1R" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzId" resolve="DoubleSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx1S" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx1T" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx1U" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx1V" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx1W" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx1X" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx1Y" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx1Z" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx20" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzTj" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx21" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx1T" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx22" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx23" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPvCr" resolve="FloatSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx24" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx25" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx26" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx27" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx28" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx29" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx2a" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx2b" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx2c" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzTu" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx2d" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx25" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx2e" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx2f" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQb" resolve="IntegerSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx2g" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx2h" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx2i" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx2j" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx2k" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx2l" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx2m" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx2n" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx2o" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzTD" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx2p" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx2h" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx2q" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx2r" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwQf" resolve="BooleanSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx2s" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx2t" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx2u" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx2v" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx2w" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx2x" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx2y" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx2z" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx2$" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzTO" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx2_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx2t" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx2A" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx2B" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyK1" resolve="StringSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx2C" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx2D" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx2E" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx2F" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPx2G" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx2H" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx2I" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx2J" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx2K" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx2L" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx2M" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx2D" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx2N" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx2O" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx2P" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx2Q" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx2R" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx2S" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedSet" resolve="SortedSet" />
          <node concept="3qTvmN" id="5JQC2dmPx2T" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx2U" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx2V" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx2W" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx2X" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx2Y" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzUb" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx2Z" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx2Q" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx30" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx31" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzi5" resolve="SortedSetSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx32" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPx33" role="16eVyc">
        <property role="TrG5h" value="T" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPx34" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx35" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx37" role="1tU5fm">
          <node concept="16syzq" id="5JQC2dmPx36" role="10Q1$1">
            <ref role="16sUi3" node="5JQC2dmPx33" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx38" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx39" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx3a" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx3b" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx3c" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzSm" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx3d" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx34" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx3e" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx3f" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxxz" resolve="ObjectArraySubject" />
        <node concept="16syzq" id="5JQC2dmPx3g" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPx33" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx3h" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx3i" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx3j" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx3l" role="1tU5fm">
          <node concept="10P_77" id="5JQC2dmPx3k" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx3m" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx3n" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx3o" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx3p" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx3q" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzUA" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx3r" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx3i" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx3s" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx3t" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPw4o" resolve="PrimitiveBooleanArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx3u" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx3v" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx3w" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx3y" role="1tU5fm">
          <node concept="10N3zO" id="5JQC2dmPx3x" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx3z" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx3$" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx3_" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx3A" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx3B" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzUM" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx3C" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx3v" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx3D" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx3E" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwE$" resolve="PrimitiveShortArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx3F" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx3G" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx3H" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx3J" role="1tU5fm">
          <node concept="10Oyi0" id="5JQC2dmPx3I" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx3K" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx3L" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx3M" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx3N" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx3O" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzUY" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx3P" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx3G" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx3Q" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx3R" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyG5" resolve="PrimitiveIntArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx3S" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx3T" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx3U" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx3W" role="1tU5fm">
          <node concept="3cpWsb" id="5JQC2dmPx3V" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx3X" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx3Y" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx3Z" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx40" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx41" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzVa" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx42" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx3T" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx43" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx44" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwV4" resolve="PrimitiveLongArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx45" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx46" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx47" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx49" role="1tU5fm">
          <node concept="10PrrI" id="5JQC2dmPx48" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx4a" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx4b" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx4c" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx4d" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx4e" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzVy" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx4f" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx46" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx4g" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx4h" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCp" resolve="PrimitiveByteArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx4i" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx4j" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx4k" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx4m" role="1tU5fm">
          <node concept="10Pfzv" id="5JQC2dmPx4l" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx4n" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx4o" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx4p" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx4q" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx4r" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzVm" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx4s" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx4j" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx4t" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx4u" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzYZ" resolve="PrimitiveCharArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx4v" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx4w" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx4x" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx4z" role="1tU5fm">
          <node concept="10OMs4" id="5JQC2dmPx4y" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx4$" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx4_" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx4A" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx4B" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx4C" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzVI" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx4D" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx4w" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx4E" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx4F" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxL5" resolve="PrimitiveFloatArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx4G" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx4H" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx4I" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPx4K" role="1tU5fm">
          <node concept="10P55v" id="5JQC2dmPx4J" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx4L" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx4M" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx4N" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx4O" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx4P" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzVU" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx4Q" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx4H" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx4R" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx4S" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$9Z" resolve="PrimitiveDoubleArraySubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx4T" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx4U" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx4V" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx4W" role="1tU5fm">
          <ref role="3uigEE" to="gyfg:~Optional" resolve="Optional" />
          <node concept="3qTvmN" id="5JQC2dmPx4X" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx4Y" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx4Z" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx50" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx51" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx52" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzW6" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx53" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx4U" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx54" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx55" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwj3" resolve="GuavaOptionalSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx56" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx57" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx58" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx59" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~Map" resolve="Map" />
          <node concept="3qTvmN" id="5JQC2dmPx5a" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx5b" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx5c" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx5d" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx5e" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx5f" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx5g" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzWi" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx5h" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx57" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx5i" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx5j" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPx92" resolve="MapSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx5k" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx5l" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx5m" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx5n" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
          <node concept="3qTvmN" id="5JQC2dmPx5o" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx5p" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx5q" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx5r" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx5s" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx5t" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx5u" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzWv" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx5v" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx5l" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx5w" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx5x" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$_h" resolve="SortedMapSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx5y" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx5z" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx5$" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx5_" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPx5A" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx5B" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx5C" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx5D" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx5E" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx5F" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx5G" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzWG" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx5H" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx5z" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx5I" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx5J" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx5K" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx5L" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx5M" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx5N" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPx5O" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx5P" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx5Q" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx5R" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx5S" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx5T" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx5U" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzWT" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx5V" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx5L" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx5W" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx5X" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyIU" resolve="ListMultimapSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx5Y" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx5Z" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx60" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx61" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPx62" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx63" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx64" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx65" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx66" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx67" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx68" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzX6" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx69" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx5Z" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx6a" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx6b" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwRB" resolve="SetMultimapSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx6c" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx6d" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx6e" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx6f" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multiset" resolve="Multiset" />
          <node concept="3qTvmN" id="5JQC2dmPx6g" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx6h" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx6i" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx6j" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx6k" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx6l" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzXj" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx6m" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx6d" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx6n" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx6o" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPw7d" resolve="MultisetSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx6p" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx6q" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx6r" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx6s" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Table" resolve="Table" />
          <node concept="3qTvmN" id="5JQC2dmPx6t" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx6u" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPx6v" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx6w" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx6x" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx6y" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx6z" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx6$" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzXv" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx6_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx6q" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx6A" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx6B" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzz2" resolve="TableSubject" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPx6C" role="jymVt">
      <property role="TrG5h" value="assertThat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPx6D" role="3clF46">
        <property role="TrG5h" value="target" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPx6E" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPx6F" role="1tU5fm">
          <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
          <node concept="3qTvmN" id="5JQC2dmPx6G" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPx6H" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPx6I" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPx6J" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPx6K" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwZj" resolve="assert_" />
            </node>
            <node concept="liA8E" id="5JQC2dmPx6L" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPzXH" resolve="that" />
              <node concept="37vLTw" id="5JQC2dmPx6M" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPx6D" resolve="target" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPx6N" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPx6O" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxsZ" resolve="AtomicLongMapSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPyIU">
    <property role="TrG5h" value="ListMultimapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPyIV" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPyIW" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPyJC" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPyJJ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyJK" role="1dT_Ay">
          <property role="1dT_AB" value=" Type-specific extensions of {@link com.google.common.collect.Multimap} subjects for {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPyJL" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyJM" role="1dT_Ay">
          <property role="1dT_AB" value=" com.google.common.collect.ListMultimap} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPyJN" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyJO" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPyJP" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyJQ" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Daniel Ploch" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPyIX" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPyIY" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPyIZ" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyJ0" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyJ1" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyJ2" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyJ3" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPyJ4" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPyJ5" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyJ6" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAWP" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPz1A" resolve="MultimapSubject" />
          <node concept="37vLTw" id="5JQC2dmPAWQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyIZ" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAWR" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyJ1" resolve="multimap" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyJa" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyJb" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyJc" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyJd" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyJe" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPyJg" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPyJf" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyJh" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyJi" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPyJj" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
            <node concept="37vLTw" id="5JQC2dmPyJk" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyJc" resolve="format" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyJl" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyJe" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPyJm" role="3cqZAp">
          <node concept="Xjq3P" id="5JQC2dmPyJn" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyJo" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyJp" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyIU" resolve="ListMultimapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyJq" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyJr" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyJs" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyJt" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyJu" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
          <node concept="3qTvmN" id="5JQC2dmPyJv" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPyJw" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyJx" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPyJy" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPyJz" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPz6m" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPyJ$" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyJs" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyJ_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyJA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyJB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyJR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyJS" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@code #isEqualTo} A SetMultimap can never compare equal with a ListMultimap if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyJT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyJU" role="1dT_Ay">
            <property role="1dT_AB" value="    either Multimap is non-empty, because {@link java.util.Set} and {@link List} can never" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyJV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyJW" role="1dT_Ay">
            <property role="1dT_AB" value="    compare equal. Prefer {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyJX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyJY" role="1dT_Ay">
            <property role="1dT_AB" value="    MultimapSubject#containsExactlyEntriesIn(com.google.common.collect.Multimap)} instead." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyJZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyK0" role="1dT_Ay">
            <property role="1dT_AB" value="    Consult {@link com.google.common.collect.Multimap#equals} for more information." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwOd">
    <property role="TrG5h" value="MathUtil" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwOe" role="1B3o_S" />
    <node concept="3UR2Jj" id="5JQC2dmPwPL" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwPP" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwPQ" role="1dT_Ay">
          <property role="1dT_AB" value="Math utilities to be shared by numeric subjects. " />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwOf" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwOg" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPwOh" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPwOi" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwOj" role="jymVt">
      <property role="TrG5h" value="equalWithinTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwOk" role="3clF46">
        <property role="TrG5h" value="left" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwOl" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwOm" role="3clF46">
        <property role="TrG5h" value="right" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwOn" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwOo" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwOp" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwOq" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwOr" role="3cqZAp">
          <node concept="2dkUwp" id="5JQC2dmPwOs" role="3cqZAk">
            <node concept="2YIFZM" id="5JQC2dmPAWU" role="3uHU7B">
              <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
              <ref role="37wK5l" to="wyt6:~Math.abs(double):double" resolve="abs" />
              <node concept="3cpWsd" id="5JQC2dmPAWV" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPAWW" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPwOk" resolve="left" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPAWX" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPwOm" resolve="right" />
                </node>
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmPAWZ" role="3uHU7w">
              <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
              <ref role="37wK5l" to="wyt6:~Math.abs(double):double" resolve="abs" />
              <node concept="37vLTw" id="5JQC2dmPAX0" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwOo" resolve="tolerance" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwOz" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPwO$" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwO_" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwPR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwPS" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true iff {@code left} and {@code right} are finite values within {@code tolerance} of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwPT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwPU" role="1dT_Ay">
            <property role="1dT_AB" value="each other. Note that both this method and {@link #notEqualWithinTolerance} returns false if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwPV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwPW" role="1dT_Ay">
            <property role="1dT_AB" value="either {@code left} or {@code right} is infinite or NaN." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwOA" role="jymVt">
      <property role="TrG5h" value="equalWithinTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwOB" role="3clF46">
        <property role="TrG5h" value="left" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwOC" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwOD" role="3clF46">
        <property role="TrG5h" value="right" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwOE" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwOF" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwOG" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwOH" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwOI" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwOJ" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
            <node concept="10QFUN" id="5JQC2dmPwOK" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwOL" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwOB" resolve="left" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwOM" role="10QFUM" />
            </node>
            <node concept="10QFUN" id="5JQC2dmPwON" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwOO" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwOD" resolve="right" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwOP" role="10QFUM" />
            </node>
            <node concept="10QFUN" id="5JQC2dmPwOQ" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwOR" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwOF" resolve="tolerance" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwOS" role="10QFUM" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwOT" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPwOU" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwOV" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwPX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwPY" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true iff {@code left} and {@code right} are finite values within {@code tolerance} of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwPZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQ0" role="1dT_Ay">
            <property role="1dT_AB" value="each other. Note that both this method and {@link #notEqualWithinTolerance} returns false if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwQ1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQ2" role="1dT_Ay">
            <property role="1dT_AB" value="either {@code left} or {@code right} is infinite or NaN." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwOW" role="jymVt">
      <property role="TrG5h" value="notEqualWithinTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwOX" role="3clF46">
        <property role="TrG5h" value="left" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwOY" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwOZ" role="3clF46">
        <property role="TrG5h" value="right" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwP0" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwP1" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPwP2" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwP3" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwP4" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPwP5" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dowZ45" role="3uHU7B">
              <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
              <ref role="37wK5l" to="gxwn:~Doubles.isFinite(double):boolean" resolve="isFinite" />
              <node concept="37vLTw" id="5JQC2dowZ46" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwOX" resolve="left" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dowYTU" role="3uHU7w">
              <ref role="1Pybhc" to="gxwn:~Doubles" resolve="Doubles" />
              <ref role="37wK5l" to="gxwn:~Doubles.isFinite(double):boolean" resolve="isFinite" />
              <node concept="37vLTw" id="5JQC2dowYTV" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwOZ" resolve="right" />
              </node>
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwPk" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwPl" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwPm" role="3cqZAp">
                <node concept="3clFbT" id="5JQC2dmPwPn" role="3cqZAk">
                  <property role="3clFbU" value="false" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwPb" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwPc" role="3cqZAp">
              <node concept="3eOSWO" id="5JQC2dmPwPd" role="3cqZAk">
                <node concept="2YIFZM" id="5JQC2dmPAX4" role="3uHU7B">
                  <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
                  <ref role="37wK5l" to="wyt6:~Math.abs(double):double" resolve="abs" />
                  <node concept="3cpWsd" id="5JQC2dmPAX5" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPAX6" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPwOX" resolve="left" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPAX7" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPwOZ" resolve="right" />
                    </node>
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPAX9" role="3uHU7w">
                  <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
                  <ref role="37wK5l" to="wyt6:~Math.abs(double):double" resolve="abs" />
                  <node concept="37vLTw" id="5JQC2dmPAXa" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwP1" resolve="tolerance" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwPo" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPwPp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwPq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwQ3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQ4" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true iff {@code left} and {@code right} are finite values not within {@code tolerance}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwQ5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQ6" role="1dT_Ay">
            <property role="1dT_AB" value="of each other. Note that both this method and {@link #equalWithinTolerance} returns false if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwQ7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQ8" role="1dT_Ay">
            <property role="1dT_AB" value="either {@code left} or {@code right} is infinite or NaN." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwPr" role="jymVt">
      <property role="TrG5h" value="notEqualWithinTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwPs" role="3clF46">
        <property role="TrG5h" value="left" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwPt" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwPu" role="3clF46">
        <property role="TrG5h" value="right" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwPv" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwPw" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPwPx" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwPy" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwPz" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwP$" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPwOW" resolve="notEqualWithinTolerance" />
            <node concept="10QFUN" id="5JQC2dmPwP_" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwPA" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwPs" resolve="left" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwPB" role="10QFUM" />
            </node>
            <node concept="10QFUN" id="5JQC2dmPwPC" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwPD" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwPu" resolve="right" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwPE" role="10QFUM" />
            </node>
            <node concept="10QFUN" id="5JQC2dmPwPF" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPwPG" role="10QFUP">
                <ref role="3cqZAo" node="5JQC2dmPwPw" resolve="tolerance" />
              </node>
              <node concept="10P55v" id="5JQC2dmPwPH" role="10QFUM" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwPI" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPwPJ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwPK" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwQ9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQa" role="1dT_Ay">
            <property role="1dT_AB" value="Returns true iff {@code left} and {@code right} are finite values not within {@code tolerance}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwQb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQc" role="1dT_Ay">
            <property role="1dT_AB" value="of each other. Note that both this method and {@link #equalWithinTolerance} returns false if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwQd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwQe" role="1dT_Ay">
            <property role="1dT_AB" value="either {@code left} or {@code right} is infinite or NaN." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPyG5">
    <property role="TrG5h" value="PrimitiveIntArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPyG6" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPyG7" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPyG8" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPyG5" resolve="PrimitiveIntArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPyGa" role="11_B2D">
        <node concept="10Oyi0" id="5JQC2dmPyG9" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPyIt" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPyI$" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyI_" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code int[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPyIA" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyIB" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPyIC" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPyID" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPyGb" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPyGc" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPyGd" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyGe" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPyGf" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyGg" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPyGi" role="1tU5fm">
          <node concept="10Oyi0" id="5JQC2dmPyGh" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyGj" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAXb" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPAXc" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyGd" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAXd" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPyGf" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyGn" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyGo" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyGp" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyGq" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPyGr" role="3cqZAk">
            <property role="Xl_RC" value="int" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPyGs" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyGt" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyGu" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyGv" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPyGw" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyGx" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq3a9Cw" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Ints" resolve="Ints" />
            <ref role="37wK5l" to="gxwn:~Ints.asList(int...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="wYVAq3a9Cx" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPyG$" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyG_" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPyGA" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyGB" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyGC" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyGD" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyGE" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3a8zo" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyGF" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPyGH" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyGG" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPyGJ" role="1tU5fm">
              <node concept="10Oyi0" id="5JQC2dmPyGI" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPyGK" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPyGL" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPyGM" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPyGN" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPyGG" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPyGO" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPyGD" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyGQ" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPyGR" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPyIL" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tm3" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tm4" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPyHm" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPyHn" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPyHi" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPyHj" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyHk" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPyHl" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyGD" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPyHe" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPyHg" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyGT" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPyGV" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPyGU" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPyGX" role="1tU5fm">
                  <node concept="10Oyi0" id="5JQC2dmPyGW" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPyGY" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPyGZ" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPyGD" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPyH1" role="10QFUM">
                    <node concept="10Oyi0" id="5JQC2dmPyH0" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPyH2" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPyH3" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPAXX" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(int[],int[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPAXY" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyGG" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPAXZ" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyGU" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyH8" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPyH9" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPyHa" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPyHb" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3a8Sc" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Ints" resolve="Ints" />
                      <ref role="37wK5l" to="gxwn:~Ints.asList(int...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3a8Sd" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyGU" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyHo" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyHp" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyHq" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyIE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIF" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyIG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIH" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyII" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIJ" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyHr" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPyHs" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPyHt" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPyHu" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq3a9c7" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPyHv" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPyHx" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPyHw" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPyHz" role="1tU5fm">
              <node concept="10Oyi0" id="5JQC2dmPyHy" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPyH$" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPyI4" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPyI5" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPyI3" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPyIT" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tm5" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tm6" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tm7" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tm8" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tm9" role="1PaTwD">
                    <property role="3oM_SC" value="int[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tma" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmb" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmc" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmd" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tme" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmf" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmg" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmh" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPyHZ" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPyI1" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPyHA" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPyHC" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPyHB" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPyHE" role="1tU5fm">
                  <node concept="10Oyi0" id="5JQC2dmPyHD" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPyHF" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPyHG" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPyHt" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPyHI" role="10QFUM">
                    <node concept="10Oyi0" id="5JQC2dmPyHH" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPyHJ" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPyHK" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPyHL" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPyHM" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPyHw" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyHN" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPyHt" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPAY2" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(int[],int[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPAY3" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyHw" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPAY4" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyHB" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyHS" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPyHT" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPyHU" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPyHV" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPyHW" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq3a7Yy" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Ints" resolve="Ints" />
                      <ref role="37wK5l" to="gxwn:~Ints.asList(int...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq3a7Yz" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyHB" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyI6" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPyI7" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPyI8" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPyIM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIN" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyIO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIP" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPyIQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPyIR" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPyI9" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPyIa" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPyIb" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPyIq" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPyIc" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPyId" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPyIe" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPyIf" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPyIg" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPyIh" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPyIi" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPyIj" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPyGu" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPyIk" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPyIl" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPyIm" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPyIn" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyIo" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPyIp" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPyGu" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPyIr" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyIs" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPxL5">
    <property role="TrG5h" value="PrimitiveFloatArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPxL6" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPxMY" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPxMZ" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPxL5" resolve="PrimitiveFloatArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPxN1" role="11_B2D">
        <node concept="10OMs4" id="5JQC2dmPxN0" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPxX0" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxXg" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxXh" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code float[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxXi" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxXj" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxXk" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxXl" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPxNw" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPxNx" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPxNy" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxNz" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxN$" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxN_" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPxNB" role="1tU5fm">
          <node concept="10OMs4" id="5JQC2dmPxNA" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxNC" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPAY6" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPAY7" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxNy" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPAY8" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxN$" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxNG" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxNH" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxNI" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxNJ" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPxNK" role="3cqZAk">
            <property role="Xl_RC" value="float" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPxNL" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxNM" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxNN" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxNO" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxNP" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxNQ" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq3a1ne" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
            <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="wYVAq3a1nf" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPxNT" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxNU" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPxNV" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxNW" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxNX" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxNY" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxNZ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq39_po" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxO0" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxO2" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxO1" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxO4" role="1tU5fm">
              <node concept="10OMs4" id="5JQC2dmPxO3" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxO5" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxO6" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPxO7" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxO8" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxO1" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxO9" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxNY" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxOb" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPxOc" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPxY3" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tmi" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tmj" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxOF" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxOG" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxOB" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPxOC" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPxOD" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPxOE" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxNY" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPxOz" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPxO_" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxOe" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxOg" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxOf" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPxOi" role="1tU5fm">
                  <node concept="10OMs4" id="5JQC2dmPxOh" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPxOj" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxOk" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxNY" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxOm" role="10QFUM">
                    <node concept="10OMs4" id="5JQC2dmPxOl" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxOn" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPxOo" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPAYS" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(float[],float[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPAYT" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxO1" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPAYU" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxOf" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxOt" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxOu" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxOv" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPxOw" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39zOA" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39zOB" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxOf" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxOH" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxOI" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxOJ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxXm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXn" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXp" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXr" role="1dT_Ay">
            <property role="1dT_AB" value=" in the actual array, and in the same position, with element equality defined the same way that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXt" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Arrays.equals(float[], float[])} and {@link Float#equals(Object)} define it (which is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXv" role="1dT_Ay">
            <property role="1dT_AB" value=" different to the way that the {@code ==} operator on primitive {@code float} defines it). This" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXx" role="1dT_Ay">
            <property role="1dT_AB" value=" method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing any kind of arithmetic: use" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXz" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #usingTolerance} with a suitable tolerance in that case, e.g. {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxX$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxX_" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualArray).usingTolerance(1.0e-5).containsExactly(expectedArray).inOrder()}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXB" role="1dT_Ay">
            <property role="1dT_AB" value=" (Remember that the exact result of floating point arithmetic is sensitive to apparently trivial" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXD" role="1dT_Ay">
            <property role="1dT_AB" value=" changes such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXF" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXH" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXJ" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying values without modification from its input or returning" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXL" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant values." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXN" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXP" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXR" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXT" role="1dT_Ay">
            <property role="1dT_AB" value="       {@link Float#NaN} to be equal to themselves (contrast with {@code #usingTolerance(0.0)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXV" role="1dT_Ay">
            <property role="1dT_AB" value="       which does not)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXX" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0f} to be equal to {@code 0.0f} (contrast with" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxXY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxXZ" role="1dT_Ay">
            <property role="1dT_AB" value="       {@code #usingTolerance(0.0) which does)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxY0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxY1" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxOK" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxOL" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxOM" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxON" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxOO" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPxOP" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxOQ" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxOS" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxOR" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxOU" role="1tU5fm">
              <node concept="10OMs4" id="5JQC2dmPxOT" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxOV" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxOW" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPxOX" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxOY" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxOR" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxOZ" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxOM" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxP1" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPxP2" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPxYt" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tmk" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tml" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxQg" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxQh" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxQc" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPxQd" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPxQe" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPxQf" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxOM" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPxQ8" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPxQa" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxP4" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxP6" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxP5" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPxP8" role="1tU5fm">
                  <node concept="10OMs4" id="5JQC2dmPxP7" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPxP9" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxPa" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxOM" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxPc" role="10QFUM">
                    <node concept="10OMs4" id="5JQC2dmPxPb" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxPd" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPxPe" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPAYY" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPAYX" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxP5" resolve="expectedArray" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$C" role="2OqNvi" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAZ2" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPAZ1" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxOR" resolve="actual" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$D" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxPi" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxPj" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxPk" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxPl" role="37wK5m">
                      <property role="Xl_RC" value="Arrays are of different lengths. expected: %s, actual %s" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39_Yl" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39_Ym" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxP5" resolve="expectedArray" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="wYVAq39$iM" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39$iN" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxOR" resolve="actual" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPxPq" role="3cqZAp" />
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPxPs" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxPr" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="unequalIndices" />
                <node concept="3uibUv" id="5JQC2dmPxPt" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPxPu" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5JQC2dmPAZ6" role="33vP2m">
                  <node concept="1pGfFk" id="5JQC2dmPAZ7" role="2ShVmc">
                    <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                    <node concept="3uibUv" id="wYVAq39zYm" role="1pMfVU">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="1Dw8fO" id="5JQC2dmPxPx" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxPy" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="i" />
                <node concept="10Oyi0" id="5JQC2dmPxP$" role="1tU5fm" />
                <node concept="3cmrfG" id="5JQC2dmPxP_" role="33vP2m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
              <node concept="3eOVzh" id="5JQC2dmPxPA" role="1Dwp0S">
                <node concept="37vLTw" id="5JQC2dmPxPB" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPxPy" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAZb" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPAZa" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxP5" resolve="expectedArray" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$E" role="2OqNvi" />
                </node>
              </node>
              <node concept="3uNrnE" id="5JQC2dmPxPE" role="1Dwrff">
                <node concept="37vLTw" id="5JQC2dmPxPF" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPxPy" resolve="i" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxPH" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmPxPI" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxPJ" role="3clFbw">
                    <node concept="2YIFZM" id="5JQC2dmQba5" role="3fr31v">
                      <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                      <ref role="37wK5l" node="5JQC2dmPwOA" resolve="equalWithinTolerance" />
                      <node concept="AH0OO" id="5JQC2dmQba6" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQba7" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmPxOR" resolve="actual" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQba8" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmPxPy" resolve="i" />
                        </node>
                      </node>
                      <node concept="AH0OO" id="5JQC2dmQba9" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQbaa" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmPxP5" resolve="expectedArray" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQbab" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmPxPy" resolve="i" />
                        </node>
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQbac" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxOO" resolve="tolerance" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxPT" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxPU" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPAZf" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPAZe" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxPr" resolve="unequalIndices" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAZg" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPAZh" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxPy" resolve="i" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxPX" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPxPY" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPAZk" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPAZj" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxPr" resolve="unequalIndices" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPAZl" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxQ1" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxQ2" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxQ3" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPxQ4" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39Jn4" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39Jn5" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxP5" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPxQ7" role="3cqZAp" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxQi" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxQj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxQk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxY4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxY5" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxY6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxY7" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is within {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxY8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxY9" role="1dT_Ay">
            <property role="1dT_AB" value=" tolerance} of each element in the subject, and in the same position." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYb" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYd" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Behaviour for non-finite values ({@link Float#POSITIVE_INFINITY POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYf" role="1dT_Ay">
            <property role="1dT_AB" value=" Float#NEGATIVE_INFINITY NEGATIVE_INFINITY}, and {@link Float#NaN NaN}) is as follows: If the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYh" role="1dT_Ay">
            <property role="1dT_AB" value=" subject and the object of the assertion are the same array, the test will pass. If not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYj" role="1dT_Ay">
            <property role="1dT_AB" value=" (including if one is a clone of the other) then non-finite values are considered not equal so" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYl" role="1dT_Ay">
            <property role="1dT_AB" value=" the any non-finite value in either argument will cause the test to fail." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYn" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYp" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated use {@code usingTolerance(someTolerance).containsExactly(someValues).inOrder()}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYr" role="1dT_Ay">
            <property role="1dT_AB" value="     noting the different behaviour for non-finite values" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxQl" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxQm" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxQn" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxQo" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="wYVAq39GF7" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxQp" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxQr" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxQq" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxQt" role="1tU5fm">
              <node concept="10OMs4" id="5JQC2dmPxQs" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxQu" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxQY" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxQZ" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxQX" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPxYR" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tmm" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tmn" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmo" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmp" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmq" role="1PaTwD">
                    <property role="3oM_SC" value="float[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmr" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tms" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmt" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmu" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmv" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmw" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmx" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tmy" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPxQT" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPxQV" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxQw" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxQy" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxQx" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPxQ$" role="1tU5fm">
                  <node concept="10OMs4" id="5JQC2dmPxQz" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPxQ_" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxQA" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxQn" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxQC" role="10QFUM">
                    <node concept="10OMs4" id="5JQC2dmPxQB" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxQD" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPxQE" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPxQF" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPxQG" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPxQq" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPxQH" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPxQn" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPAZo" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(float[],float[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPAZp" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxQq" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPAZq" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxQx" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxQM" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxQN" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxQO" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxQP" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxQQ" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39vEF" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39vEG" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxQx" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxR0" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxR1" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxR2" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxYu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYv" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYx" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYz" role="1dT_Ay">
            <property role="1dT_AB" value=" in the actual array, and in the same position, with element equality defined the same way that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxY$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxY_" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Arrays.equals(float[], float[])} and {@link Float#equals(Object)} define it (which is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYB" role="1dT_Ay">
            <property role="1dT_AB" value=" different to the way that the {@code ==} operator on primitive {@code float} defines it). See" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYD" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #isEqualTo(Object)} for advice on when exact equality is recommended." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYF" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYH" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYJ" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, and {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYL" role="1dT_Ay">
            <property role="1dT_AB" value="       Float#NaN} to be equal to themselves." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYN" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0} to be equal to {@code 0.0}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYP" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxR3" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxR4" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxR5" role="3clF46">
        <property role="TrG5h" value="expectedArray" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxR6" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxR7" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10OMs4" id="5JQC2dmPxR8" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxR9" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxRb" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxRa" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPxRd" role="1tU5fm">
              <node concept="10OMs4" id="5JQC2dmPxRc" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPxRe" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPxSv" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPxSw" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPxSu" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPxZj" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tmz" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tm$" role="1PaTwD">
                    <property role="3oM_SC" value="Unequal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tm_" role="1PaTwD">
                    <property role="3oM_SC" value="since" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TmA" role="1PaTwD">
                    <property role="3oM_SC" value="they" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TmB" role="1PaTwD">
                    <property role="3oM_SC" value="are" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TmC" role="1PaTwD">
                    <property role="3oM_SC" value="of" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TmD" role="1PaTwD">
                    <property role="3oM_SC" value="different" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TmE" role="1PaTwD">
                    <property role="3oM_SC" value="types." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPxSq" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPxSs" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxRg" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPxRi" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxRh" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expected" />
                <node concept="10Q1$e" id="5JQC2dmPxRk" role="1tU5fm">
                  <node concept="10OMs4" id="5JQC2dmPxRj" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPxRl" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPxRm" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPxR5" resolve="expectedArray" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPxRo" role="10QFUM">
                    <node concept="10OMs4" id="5JQC2dmPxRn" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxRp" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmPxRq" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPxRr" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPxRa" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxRs" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxRu" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxRv" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxRw" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxRx" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxRy" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39SIn" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39SIo" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPxR_" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxRA" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPxRB" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPAZv" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPAZu" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$F" role="2OqNvi" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAZz" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPAZy" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxRa" resolve="actual" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$G" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxRF" role="3clFbx">
                <node concept="3cpWs6" id="5JQC2dmPxRG" role="3cqZAp" />
                <node concept="3SKdUt" id="5JQC2dmPxZh" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8TmF" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8TmG" role="1PaTwD">
                      <property role="3oM_SC" value="Unequal-lengthed" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TmH" role="1PaTwD">
                      <property role="3oM_SC" value="arrays" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TmI" role="1PaTwD">
                      <property role="3oM_SC" value="are" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TmJ" role="1PaTwD">
                      <property role="3oM_SC" value="not" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TmK" role="1PaTwD">
                      <property role="3oM_SC" value="equal." />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPxRI" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxRH" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="unequalIndices" />
                <node concept="3uibUv" id="5JQC2dmPxRJ" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPxRK" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5JQC2dmPAZ_" role="33vP2m">
                  <node concept="1pGfFk" id="5JQC2dmPAZA" role="2ShVmc">
                    <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                    <node concept="3uibUv" id="wYVAq39KQw" role="1pMfVU">
                      <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="1Dw8fO" id="5JQC2dmPxRN" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxRO" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="i" />
                <node concept="10Oyi0" id="5JQC2dmPxRQ" role="1tU5fm" />
                <node concept="3cmrfG" id="5JQC2dmPxRR" role="33vP2m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
              <node concept="3eOVzh" id="5JQC2dmPxRS" role="1Dwp0S">
                <node concept="37vLTw" id="5JQC2dmPxRT" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPxRO" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPAZE" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPAZD" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$H" role="2OqNvi" />
                </node>
              </node>
              <node concept="3uNrnE" id="5JQC2dmPxRW" role="1Dwrff">
                <node concept="37vLTw" id="5JQC2dmPxRX" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPxRO" resolve="i" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxRZ" role="2LFqv$">
                <node concept="3clFbJ" id="5JQC2dmPxS0" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPxS1" role="3clFbw">
                    <node concept="2YIFZM" id="5JQC2dmQbad" role="3fr31v">
                      <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                      <ref role="37wK5l" node="5JQC2dmPwOA" resolve="equalWithinTolerance" />
                      <node concept="AH0OO" id="5JQC2dmQbae" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQbaf" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmPxRa" resolve="actual" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQbag" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmPxRO" resolve="i" />
                        </node>
                      </node>
                      <node concept="AH0OO" id="5JQC2dmQbah" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQbai" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmQbaj" role="AHEQo">
                          <ref role="3cqZAo" node="5JQC2dmPxRO" resolve="i" />
                        </node>
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQbak" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxR7" resolve="tolerance" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxSb" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPxSc" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPAZI" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPAZH" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPxRH" resolve="unequalIndices" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPAZJ" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                          <node concept="37vLTw" id="5JQC2dmPAZK" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPxRO" resolve="i" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxSf" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPAZN" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPAZM" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPxRH" resolve="unequalIndices" />
                </node>
                <node concept="liA8E" id="5JQC2dmPAZO" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxSi" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxSj" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxSk" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPxSl" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPxSm" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="wYVAq39JJJ" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                      <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="wYVAq39JJK" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxRh" resolve="expected" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPxSp" role="3cqZAp" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxSx" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxSy" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxSz" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxYS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYT" role="1dT_Ay">
            <property role="1dT_AB" value=" A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYV" role="1dT_Ay">
            <property role="1dT_AB" value=" type, containing elements such that each element in {@code expected} is within {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYX" role="1dT_Ay">
            <property role="1dT_AB" value=" tolerance} of each element in the subject, and in the same position." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxYY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxYZ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZ0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZ1" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Behaviour for non-finite values ({@link Float#POSITIVE_INFINITY POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZ2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZ3" role="1dT_Ay">
            <property role="1dT_AB" value=" Float#NEGATIVE_INFINITY NEGATIVE_INFINITY}, and {@link Float#NaN NaN}) is as follows: If the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZ4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZ5" role="1dT_Ay">
            <property role="1dT_AB" value=" subject and the object of the assertion are the same array, the test will fail. If not" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZ6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZ7" role="1dT_Ay">
            <property role="1dT_AB" value=" (including if one is a clone of the other) then non-finite values are considered not equal so" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZ8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZ9" role="1dT_Ay">
            <property role="1dT_AB" value=" the any non-finite value in either argument will cause the test to pass." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZb" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZd" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Write a for loop over the values looking for mismatches (see this implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZf" role="1dT_Ay">
            <property role="1dT_AB" value="     for an example)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPxL7" role="jymVt">
      <property role="TrG5h" value="TolerantPrimitiveFloatArrayComparison" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="true" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPxL8" role="1B3o_S" />
      <node concept="3UR2Jj" id="5JQC2dmPxLT" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxZk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZl" role="1dT_Ay">
            <property role="1dT_AB" value="A partially specified proposition about an approximate relationship to a {@code float[]}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZn" role="1dT_Ay">
            <property role="1dT_AB" value="subject using a tolerance." />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmPxL9" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPxLa" role="3clF45" />
        <node concept="3clFbS" id="5JQC2dmPxLb" role="3clF47" />
        <node concept="3Tm6S6" id="5JQC2dmPxLc" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPxLd" role="jymVt">
        <property role="TrG5h" value="of" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPxLe" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="8X2XB" id="5JQC2dmPxLg" role="1tU5fm">
            <node concept="10OMs4" id="5JQC2dmPxLf" role="8Xvag" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxLh" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPxLi" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPxLj" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmPxLp" resolve="ofElementsIn" />
              <node concept="2YIFZM" id="wYVAq39J2U" role="37wK5m">
                <ref role="1Pybhc" to="gxwn:~Floats" resolve="Floats" />
                <ref role="37wK5l" to="gxwn:~Floats.asList(float...):java.util.List" resolve="asList" />
                <node concept="37vLTw" id="wYVAq39J2V" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxLe" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxLm" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPxLn" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxLo" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxZo" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZp" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the values in the subject were expected to be within the tolerance of the given" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZq" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZr" role="1dT_Ay">
              <property role="1dT_AB" value="values but were not &lt;i&gt;or&lt;/i&gt; if they were expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZs" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZt" role="1dT_Ay">
              <property role="1dT_AB" value="were. The subject and tolerance are specified earlier in the fluent call chain." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxLp" role="jymVt">
        <property role="TrG5h" value="ofElementsIn" />
        <property role="1EzhhJ" value="true" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPxLq" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxLr" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
            <node concept="3qUE_q" id="5JQC2dmPxLt" role="11_B2D">
              <node concept="3uibUv" id="5JQC2dmPxLs" role="3qUE_r">
                <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxLu" role="3clF47" />
        <node concept="3Tm1VV" id="5JQC2dmPxLv" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPxLw" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxLx" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxZu" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZv" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the values in the subject were expected to be within the tolerance of the given" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZw" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZx" role="1dT_Ay">
              <property role="1dT_AB" value="values but were not &lt;i&gt;or&lt;/i&gt; if they were expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZy" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZz" role="1dT_Ay">
              <property role="1dT_AB" value="were. The subject and tolerance are specified earlier in the fluent call chain. The values" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZ$" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZ_" role="1dT_Ay">
              <property role="1dT_AB" value="will be cast to floats if necessary, which might lose precision." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxLy" role="jymVt">
        <property role="TrG5h" value="equals" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxLz" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPxL$" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPxL_" role="3clF46">
          <property role="TrG5h" value="o" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPxLA" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPxLB" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxLC" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPxLF" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPAZT" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPB07" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPB08" role="37wK5m">
                  <property role="Xl_RC" value="If you meant to compare float arrays, use .of() or .ofElementsIn() instead." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxLG" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPxLH" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxLI" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxZA" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZB" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZC" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZD" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported on" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZE" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZF" role="1dT_Ay">
              <property role="1dT_AB" value="    TolerantPrimitiveFloatArrayComparison. If you meant to compare float arrays, use {@link" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZG" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZH" role="1dT_Ay">
              <property role="1dT_AB" value="    #of} or {@link #ofElementsIn} instead." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPxLJ" role="jymVt">
        <property role="TrG5h" value="hashCode" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxLK" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPxLL" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPxLM" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPxLP" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPB09" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPB0n" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPB0o" role="37wK5m">
                  <property role="Xl_RC" value="Subject.hashCode() is not supported." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxLQ" role="1B3o_S" />
        <node concept="10Oyi0" id="5JQC2dmPxLR" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPxLS" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPxZI" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZJ" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZK" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZL" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported on" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPxZM" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPxZN" role="1dT_Ay">
              <property role="1dT_AB" value="    TolerantPrimitiveFloatArrayComparison" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxS$" role="jymVt">
      <property role="TrG5h" value="hasValuesWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxS_" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxSA" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10OMs4" id="5JQC2dmPxSB" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxSC" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxSD" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPxSE" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPxSF" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPxSG" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPxL7" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
                <ref role="37wK5l" node="5JQC2dmPxL9" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
                <node concept="3clFb_" id="5JQC2dmPxSH" role="jymVt">
                  <property role="TrG5h" value="ofElementsIn" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPxSI" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPxSJ" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPxSK" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                      <node concept="3qUE_q" id="5JQC2dmPxSM" role="11_B2D">
                        <node concept="3uibUv" id="5JQC2dmPxSL" role="3qUE_r">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxSN" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPxSO" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmQbal" role="3clFbG">
                        <ref role="1Pybhc" node="5JQC2dmPvCr" resolve="FloatSubject" />
                        <ref role="37wK5l" node="5JQC2dmPvFi" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmQbam" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxSA" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmPxSS" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxSR" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="10Q1$e" id="5JQC2dmPxSU" role="1tU5fm">
                          <node concept="10OMs4" id="5JQC2dmPxST" role="10Q1$1" />
                        </node>
                        <node concept="2YIFZM" id="wYVAq39SaK" role="33vP2m">
                          <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                          <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                          <node concept="1rXfSq" id="wYVAq39SaL" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmPxSY" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxSX" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="mismatches" />
                        <node concept="3uibUv" id="5JQC2dmPxSZ" role="1tU5fm">
                          <ref role="3uigEE" to="33ny:~List" resolve="List" />
                          <node concept="3uibUv" id="5JQC2dmPxT0" role="11_B2D">
                            <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                          </node>
                        </node>
                        <node concept="2ShNRf" id="5JQC2dmPB0p" role="33vP2m">
                          <node concept="1pGfFk" id="5JQC2dmPB0q" role="2ShVmc">
                            <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                            <node concept="3uibUv" id="wYVAq39Rl0" role="1pMfVU">
                              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmPxT4" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxT3" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedCount" />
                        <node concept="10Oyi0" id="5JQC2dmPxT5" role="1tU5fm" />
                        <node concept="3cmrfG" id="5JQC2dmPxT6" role="33vP2m">
                          <property role="3cmrfH" value="0" />
                        </node>
                      </node>
                    </node>
                    <node concept="1DcWWT" id="5JQC2dmPxT7" role="3cqZAp">
                      <node concept="37vLTw" id="5JQC2dmPxTx" role="1DdaDG">
                        <ref role="3cqZAo" node="5JQC2dmPxSJ" resolve="expected" />
                      </node>
                      <node concept="3cpWsn" id="5JQC2dmPxTu" role="1Duv9x">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedValue" />
                        <node concept="3uibUv" id="5JQC2dmPxTw" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxT9" role="2LFqv$">
                        <node concept="3SKdUt" id="5JQC2dmPy0h" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8TmL" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8TmM" role="1PaTwD">
                              <property role="3oM_SC" value="if" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmN" role="1PaTwD">
                              <property role="3oM_SC" value="expected" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmO" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmP" role="1PaTwD">
                              <property role="3oM_SC" value="longer" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmQ" role="1PaTwD">
                              <property role="3oM_SC" value="than" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmR" role="1PaTwD">
                              <property role="3oM_SC" value="actual," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmS" role="1PaTwD">
                              <property role="3oM_SC" value="we" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmT" role="1PaTwD">
                              <property role="3oM_SC" value="can" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmU" role="1PaTwD">
                              <property role="3oM_SC" value="skip" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmV" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmW" role="1PaTwD">
                              <property role="3oM_SC" value="excess" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmX" role="1PaTwD">
                              <property role="3oM_SC" value="values:" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmY" role="1PaTwD">
                              <property role="3oM_SC" value="this" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8TmZ" role="1PaTwD">
                              <property role="3oM_SC" value="case" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn0" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn1" role="1PaTwD">
                              <property role="3oM_SC" value="covered" />
                            </node>
                          </node>
                        </node>
                        <node concept="3SKdUt" id="5JQC2dmPy0j" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Tn2" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Tn3" role="1PaTwD">
                              <property role="3oM_SC" value="by" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn4" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn5" role="1PaTwD">
                              <property role="3oM_SC" value="length" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn6" role="1PaTwD">
                              <property role="3oM_SC" value="check" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tn7" role="1PaTwD">
                              <property role="3oM_SC" value="below" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmPxTa" role="3cqZAp">
                          <node concept="1Wc70l" id="5JQC2dmPxTb" role="3clFbw">
                            <node concept="3eOVzh" id="5JQC2dmPxTc" role="3uHU7B">
                              <node concept="37vLTw" id="5JQC2dmPxTd" role="3uHU7B">
                                <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmPB0x" role="3uHU7w">
                                <node concept="37vLTw" id="5JQC2dmPB0w" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxSR" resolve="actual" />
                                </node>
                                <node concept="1Rwk04" id="5JQC2dmQb$I" role="2OqNvi" />
                              </node>
                            </node>
                            <node concept="3fqX7Q" id="5JQC2dmPxTf" role="3uHU7w">
                              <node concept="2YIFZM" id="5JQC2dmQban" role="3fr31v">
                                <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                                <ref role="37wK5l" node="5JQC2dmPwOA" resolve="equalWithinTolerance" />
                                <node concept="AH0OO" id="5JQC2dmQbao" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmQbap" role="AHHXb">
                                    <ref role="3cqZAo" node="5JQC2dmPxSR" resolve="actual" />
                                  </node>
                                  <node concept="37vLTw" id="5JQC2dmQbaq" role="AHEQo">
                                    <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                                  </node>
                                </node>
                                <node concept="2OqwBi" id="5JQC2dmQbar" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmQbas" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmPxTu" resolve="expectedValue" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2dmQbat" role="2OqNvi">
                                    <ref role="37wK5l" to="wyt6:~Number.floatValue():float" resolve="floatValue" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2dmQbau" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmPxSA" resolve="tolerance" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPxTn" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmPxTo" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmPB0F" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmPB0E" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxSX" resolve="mismatches" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPB0G" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                                  <node concept="37vLTw" id="5JQC2dmPB0H" role="37wK5m">
                                    <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmPxTr" role="3cqZAp">
                          <node concept="3uNrnE" id="5JQC2dmPxTs" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPxTt" role="2$L3a6">
                              <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxTy" role="3cqZAp">
                      <node concept="3y3z36" id="5JQC2dmPxTz" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPB0L" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPB0K" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPxSR" resolve="actual" />
                          </node>
                          <node concept="1Rwk04" id="5JQC2dmQb$J" role="2OqNvi" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxT_" role="3uHU7w">
                          <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxTB" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxTC" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPxTD" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPxTE" role="37wK5m">
                              <property role="Xl_RC" value="Not true that %s has values within %s of &lt;%s&gt;. Expected length &lt;%s&gt; but got &lt;%s&gt;" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPxTF" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPxTG" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxSA" resolve="tolerance" />
                            </node>
                            <node concept="2YIFZM" id="wYVAq39N_P" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="wYVAq39N_Q" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPxSJ" resolve="expected" />
                              </node>
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPxTJ" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxT3" resolve="expectedCount" />
                            </node>
                            <node concept="2OqwBi" id="5JQC2dmPB0S" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPB0R" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPxSR" resolve="actual" />
                              </node>
                              <node concept="1Rwk04" id="5JQC2dmQb$K" role="2OqNvi" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmPxTL" role="3cqZAp" />
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxTM" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPxTN" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPB0X" role="3fr31v">
                          <node concept="37vLTw" id="5JQC2dmPB0W" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPxSX" resolve="mismatches" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPB0Y" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxTQ" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxTR" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPxTS" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                            <node concept="3cpWs3" id="5JQC2dmPxTT" role="37wK5m">
                              <node concept="3cpWs3" id="5JQC2dmPxTU" role="3uHU7B">
                                <node concept="Xl_RD" id="5JQC2dmPxTV" role="3uHU7B">
                                  <property role="Xl_RC" value="has values within " />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmPxTW" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmPxSA" resolve="tolerance" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmPxTX" role="3uHU7w">
                                <property role="Xl_RC" value=" of" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="wYVAq39qiT" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="wYVAq39qiU" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPxSJ" resolve="expected" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPxU0" role="37wK5m">
                              <property role="Xl_RC" value="differs at indexes" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPxU1" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPxSX" resolve="mismatches" />
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmPxU2" role="3cqZAp" />
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPxU3" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPxU4" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxU5" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxU6" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxL7" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxU7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxZO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZP" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject and object are arrays both (a) of the same length, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZR" role="1dT_Ay">
            <property role="1dT_AB" value=" (b) where the values at all corresponding positions in each array are finite values within" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZT" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code tolerance} of each other, that is {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZV" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actual[i]).isWithin(tolerance).of(expected[i])} passes for all {@code i} (see the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZX" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link FloatSubject#isWithin isWithin} assertion for floats)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxZY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxZZ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy00" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy01" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if any value in either the subject array or the object array is {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy02" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy03" role="1dT_Ay">
            <property role="1dT_AB" value=" Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, or {@link Float#NaN}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy04" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy05" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy06" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy07" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy08" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy09" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0b" role="1dT_Ay">
            <property role="1dT_AB" value="     Float#NaN}, {@link Float#POSITIVE_INFINITY}, or negative, including {@code -0.0f}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0d" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Use {@link #usingTolerance}, e.g. {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0f" role="1dT_Ay">
            <property role="1dT_AB" value="     assertThat(floatArray).usingTolerance(1e-5).containsExactly(1.2f, 3.4f, 5.6f).inOrder();}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxU8" role="jymVt">
      <property role="TrG5h" value="hasValuesNotWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxU9" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxUa" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10OMs4" id="5JQC2dmPxUb" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxUc" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxUd" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPxUe" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPxUf" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPxUg" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPxL7" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
                <ref role="37wK5l" node="5JQC2dmPxL9" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
                <node concept="3clFb_" id="5JQC2dmPxUh" role="jymVt">
                  <property role="TrG5h" value="ofElementsIn" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPxUi" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPxUj" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="3uibUv" id="5JQC2dmPxUk" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
                      <node concept="3qUE_q" id="5JQC2dmPxUm" role="11_B2D">
                        <node concept="3uibUv" id="5JQC2dmPxUl" role="3qUE_r">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPxUn" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmPxUo" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmQbav" role="3clFbG">
                        <ref role="1Pybhc" node="5JQC2dmPvCr" resolve="FloatSubject" />
                        <ref role="37wK5l" node="5JQC2dmPvFi" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmQbaw" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxUa" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmPxUs" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxUr" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="10Q1$e" id="5JQC2dmPxUu" role="1tU5fm">
                          <node concept="10OMs4" id="5JQC2dmPxUt" role="10Q1$1" />
                        </node>
                        <node concept="2YIFZM" id="wYVAq39PBD" role="33vP2m">
                          <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                          <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                          <node concept="1rXfSq" id="wYVAq39PBE" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmPxUy" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPxUx" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedCount" />
                        <node concept="10Oyi0" id="5JQC2dmPxUz" role="1tU5fm" />
                        <node concept="3cmrfG" id="5JQC2dmPxU$" role="33vP2m">
                          <property role="3cmrfH" value="0" />
                        </node>
                      </node>
                    </node>
                    <node concept="1DcWWT" id="5JQC2dmPxU_" role="3cqZAp">
                      <node concept="37vLTw" id="5JQC2dmPxUW" role="1DdaDG">
                        <ref role="3cqZAo" node="5JQC2dmPxUj" resolve="expected" />
                      </node>
                      <node concept="3cpWsn" id="5JQC2dmPxUT" role="1Duv9x">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="expectedValue" />
                        <node concept="3uibUv" id="5JQC2dmPxUV" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxUB" role="2LFqv$">
                        <node concept="3SKdUt" id="5JQC2dmPy0N" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Tn8" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Tn9" role="1PaTwD">
                              <property role="3oM_SC" value="if" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tna" role="1PaTwD">
                              <property role="3oM_SC" value="expected" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnb" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnc" role="1PaTwD">
                              <property role="3oM_SC" value="longer" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnd" role="1PaTwD">
                              <property role="3oM_SC" value="than" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tne" role="1PaTwD">
                              <property role="3oM_SC" value="actual," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnf" role="1PaTwD">
                              <property role="3oM_SC" value="we" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tng" role="1PaTwD">
                              <property role="3oM_SC" value="can" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnh" role="1PaTwD">
                              <property role="3oM_SC" value="skip" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tni" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnj" role="1PaTwD">
                              <property role="3oM_SC" value="excess" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnk" role="1PaTwD">
                              <property role="3oM_SC" value="values:" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnl" role="1PaTwD">
                              <property role="3oM_SC" value="this" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnm" role="1PaTwD">
                              <property role="3oM_SC" value="case" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnn" role="1PaTwD">
                              <property role="3oM_SC" value="is" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tno" role="1PaTwD">
                              <property role="3oM_SC" value="covered" />
                            </node>
                          </node>
                        </node>
                        <node concept="3SKdUt" id="5JQC2dmPy0P" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8Tnp" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8Tnq" role="1PaTwD">
                              <property role="3oM_SC" value="by" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnr" role="1PaTwD">
                              <property role="3oM_SC" value="the" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tns" role="1PaTwD">
                              <property role="3oM_SC" value="length" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnt" role="1PaTwD">
                              <property role="3oM_SC" value="check" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8Tnu" role="1PaTwD">
                              <property role="3oM_SC" value="below" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="5JQC2dmPxUC" role="3cqZAp">
                          <node concept="1Wc70l" id="5JQC2dmPxUD" role="3clFbw">
                            <node concept="3eOVzh" id="5JQC2dmPxUE" role="3uHU7B">
                              <node concept="37vLTw" id="5JQC2dmPxUF" role="3uHU7B">
                                <ref role="3cqZAo" node="5JQC2dmPxUx" resolve="expectedCount" />
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmPB16" role="3uHU7w">
                                <node concept="37vLTw" id="5JQC2dmPB15" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxUr" resolve="actual" />
                                </node>
                                <node concept="1Rwk04" id="5JQC2dmQb$L" role="2OqNvi" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="5JQC2dmQbax" role="3uHU7w">
                              <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                              <ref role="37wK5l" node="5JQC2dmPwPr" resolve="notEqualWithinTolerance" />
                              <node concept="AH0OO" id="5JQC2dmQbay" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmQbaz" role="AHHXb">
                                  <ref role="3cqZAo" node="5JQC2dmPxUr" resolve="actual" />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmQba$" role="AHEQo">
                                  <ref role="3cqZAo" node="5JQC2dmPxUx" resolve="expectedCount" />
                                </node>
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmQba_" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmQbaA" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPxUT" resolve="expectedValue" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmQbaB" role="2OqNvi">
                                  <ref role="37wK5l" to="wyt6:~Number.floatValue():float" resolve="floatValue" />
                                </node>
                              </node>
                              <node concept="37vLTw" id="5JQC2dmQbaC" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPxUa" resolve="tolerance" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPxUO" role="3clFbx">
                            <node concept="3cpWs6" id="5JQC2dmPxUP" role="3cqZAp" />
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmPxUQ" role="3cqZAp">
                          <node concept="3uNrnE" id="5JQC2dmPxUR" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPxUS" role="2$L3a6">
                              <ref role="3cqZAo" node="5JQC2dmPxUx" resolve="expectedCount" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmPy0R" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8Tnv" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8Tnw" role="1PaTwD">
                          <property role="3oM_SC" value="By" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tnx" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tny" role="1PaTwD">
                          <property role="3oM_SC" value="method" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tnz" role="1PaTwD">
                          <property role="3oM_SC" value="contract," />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tn$" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8Tn_" role="1PaTwD">
                          <property role="3oM_SC" value="assertion" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnA" role="1PaTwD">
                          <property role="3oM_SC" value="passes" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnB" role="1PaTwD">
                          <property role="3oM_SC" value="if" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnC" role="1PaTwD">
                          <property role="3oM_SC" value="the" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnD" role="1PaTwD">
                          <property role="3oM_SC" value="lengths" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnE" role="1PaTwD">
                          <property role="3oM_SC" value="are" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnF" role="1PaTwD">
                          <property role="3oM_SC" value="different." />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnG" role="1PaTwD">
                          <property role="3oM_SC" value="This" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnH" role="1PaTwD">
                          <property role="3oM_SC" value="is" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnI" role="1PaTwD">
                          <property role="3oM_SC" value="so" />
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmPy0T" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8TnJ" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8TnK" role="1PaTwD">
                          <property role="3oM_SC" value="that" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnL" role="1PaTwD">
                          <property role="3oM_SC" value="hasValuesNotWithin" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnM" role="1PaTwD">
                          <property role="3oM_SC" value="behaves" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnN" role="1PaTwD">
                          <property role="3oM_SC" value="like" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnO" role="1PaTwD">
                          <property role="3oM_SC" value="isNotEqualTo" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnP" role="1PaTwD">
                          <property role="3oM_SC" value="with" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnQ" role="1PaTwD">
                          <property role="3oM_SC" value="a" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnR" role="1PaTwD">
                          <property role="3oM_SC" value="tolerance" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnS" role="1PaTwD">
                          <property role="3oM_SC" value="(and" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnT" role="1PaTwD">
                          <property role="3oM_SC" value="different" />
                        </node>
                      </node>
                    </node>
                    <node concept="3SKdUt" id="5JQC2dmPy0V" role="3cqZAp">
                      <node concept="1PaTwC" id="1fGNp1n8TnU" role="3ndbpf">
                        <node concept="3oM_SD" id="1fGNp1n8TnV" role="1PaTwD">
                          <property role="3oM_SC" value="handling" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnW" role="1PaTwD">
                          <property role="3oM_SC" value="of" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnX" role="1PaTwD">
                          <property role="3oM_SC" value="non-finite" />
                        </node>
                        <node concept="3oM_SD" id="1fGNp1n8TnY" role="1PaTwD">
                          <property role="3oM_SC" value="values)." />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPxUX" role="3cqZAp">
                      <node concept="3clFbC" id="5JQC2dmPxUY" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmPB1g" role="3uHU7B">
                          <node concept="37vLTw" id="5JQC2dmPB1f" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPxUr" resolve="actual" />
                          </node>
                          <node concept="1Rwk04" id="5JQC2dmQb$M" role="2OqNvi" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPxV0" role="3uHU7w">
                          <ref role="3cqZAo" node="5JQC2dmPxUx" resolve="expectedCount" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPxV2" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPxV3" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPxV4" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                            <node concept="3cpWs3" id="5JQC2dmPxV5" role="37wK5m">
                              <node concept="3cpWs3" id="5JQC2dmPxV6" role="3uHU7B">
                                <node concept="Xl_RD" id="5JQC2dmPxV7" role="3uHU7B">
                                  <property role="Xl_RC" value="has values not within " />
                                </node>
                                <node concept="37vLTw" id="5JQC2dmPxV8" role="3uHU7w">
                                  <ref role="3cqZAo" node="5JQC2dmPxUa" resolve="tolerance" />
                                </node>
                              </node>
                              <node concept="Xl_RD" id="5JQC2dmPxV9" role="3uHU7w">
                                <property role="Xl_RC" value=" of" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="wYVAq39BRq" role="37wK5m">
                              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                              <ref role="37wK5l" to="3o3z:~Iterables.toString(java.lang.Iterable):java.lang.String" resolve="toString" />
                              <node concept="37vLTw" id="wYVAq39BRr" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmPxUj" resolve="expected" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPxVc" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPxVd" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxVe" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxVf" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxL7" resolve="PrimitiveFloatArraySubject.TolerantPrimitiveFloatArrayComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxVg" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy0k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0l" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject and object are arrays either (a) of the different" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0n" role="1dT_Ay">
            <property role="1dT_AB" value=" lengths, or (b) of the same length but where the values at at least one corresponding position" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0p" role="1dT_Ay">
            <property role="1dT_AB" value=" in each array are finite values not within {@code tolerance} of each other, that is {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0r" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actual[i]).isNotWithin(tolerance).of(expected[i])} passes for at least one {@code i}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0t" role="1dT_Ay">
            <property role="1dT_AB" value=" (see the {@link FloatSubject#isNotWithin isNotWithin} assertion for floats)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0v" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0x" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;In the case (b), a pair of subject and object values will not cause the test to pass if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0z" role="1dT_Ay">
            <property role="1dT_AB" value=" either of them is {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, or {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0_" role="1dT_Ay">
            <property role="1dT_AB" value=" Float#NaN}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0B" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0D" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an exclusive lower bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0F" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0H" role="1dT_Ay">
            <property role="1dT_AB" value="     Float.NaN}, {@code Float.POSITIVE_INFINITY}, or negative, including {@code -0.0f}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0J" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Write a for loop over the values looking for mismatches (see this implementation" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0L" role="1dT_Ay">
            <property role="1dT_AB" value="     for an example)" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxVh" role="jymVt">
      <property role="TrG5h" value="usingTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxVi" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPxVj" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxVk" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxVl" role="3cqZAp">
          <node concept="10Nm6u" id="wYVAq3lMuv" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxVq" role="1B3o_S" />
      <node concept="3uibUv" id="wYVAq3lK$R" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy4m" resolve="IterableSubject.UsingCorrespondence" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxVs" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy0W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0X" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the elements of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy0Y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy0Z" role="1dT_Ay">
            <property role="1dT_AB" value=" the array under test) are compared to expected elements using a {@link Correspondence} which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy10" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy11" role="1dT_Ay">
            <property role="1dT_AB" value=" considers values to correspond if they are finite values within {@code tolerance} of each" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy12" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy13" role="1dT_Ay">
            <property role="1dT_AB" value=" other. The proposition is actually executed by continuing the method chain. For example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy14" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy15" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy16" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy17" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy18" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy19" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualFloatArray).usingTolerance(1.0e-5f).contains(3.14159f);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1b" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1d" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1f" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1g" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1h" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does not consider values to correspond if either value is infinite or NaN." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1i" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1j" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@code -0.0f} to be within any tolerance of {@code 0.0f}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1l" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The expected values provided later in the chain will be {@link Number} instances which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1n" role="1dT_Ay">
            <property role="1dT_AB" value="       will be converted to floats, which may result in a loss of precision for some numeric" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1p" role="1dT_Ay">
            <property role="1dT_AB" value="       types." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1r" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The subsequent methods in the chain may throw a {@link NullPointerException} if any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1t" role="1dT_Ay">
            <property role="1dT_AB" value="       expected {@link Number} instance is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1v" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1x" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1z" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the float values of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1_" role="1dT_Ay">
            <property role="1dT_AB" value="     actual and expected numbers, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1B" role="1dT_Ay">
            <property role="1dT_AB" value="     Float#NaN}, {@link Float#POSITIVE_INFINITY}, or negative, including {@code -0.0f}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPxN2" role="jymVt">
      <property role="TrG5h" value="EXACT_EQUALITY_CORRESPONDENCE" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPxN3" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
        <node concept="3uibUv" id="5JQC2dmPxN4" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxN5" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="2ShNRf" id="5JQC2dmPxN6" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPxN7" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPxN8" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmPxpk" resolve="Correspondence" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPxN9" role="jymVt">
              <property role="TrG5h" value="compare" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPxNa" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPxNb" role="3clF46">
                <property role="TrG5h" value="actual" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPxNc" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
                </node>
                <node concept="2AHcQZ" id="wYVAq39Tja" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPxNd" role="3clF46">
                <property role="TrG5h" value="expected" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPxNe" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                </node>
                <node concept="2AHcQZ" id="wYVAq39W3T" role="2AJF6D">
                  <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxNf" role="3clF47">
                <node concept="3cpWs6" id="5JQC2dmPxNg" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPB3v" role="3cqZAk">
                    <node concept="37vLTw" id="5JQC2dmPB3u" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPxNb" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPB3w" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Float.equals(java.lang.Object):boolean" resolve="equals" />
                      <node concept="1rXfSq" id="5JQC2dmPB3x" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPxVt" resolve="checkedToFloat" />
                        <node concept="37vLTw" id="5JQC2dmPB3y" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPxNd" resolve="expected" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPxNk" role="1B3o_S" />
              <node concept="10P_77" id="5JQC2dmPxNl" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmPxNm" role="jymVt">
              <property role="TrG5h" value="toString" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPxNn" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="3clFbS" id="5JQC2dmPxNo" role="3clF47">
                <node concept="3cpWs6" id="5JQC2dmPxNp" role="3cqZAp">
                  <node concept="Xl_RD" id="5JQC2dmPxNq" role="3cqZAk">
                    <property role="Xl_RC" value="is exactly equal to" />
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPxNr" role="1B3o_S" />
              <node concept="3uibUv" id="5JQC2dmPxNs" role="3clF45">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="3uibUv" id="5JQC2dmPxNt" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPxNu" role="2Ghqu4">
              <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxNv" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxVt" role="jymVt">
      <property role="TrG5h" value="checkedToFloat" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxVu" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxVv" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxVw" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxVx" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq39NnZ" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="wYVAq39No0" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxV$" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq39O5j" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="3fqX7Q" id="wYVAq39O5k" role="37wK5m">
              <node concept="1eOMI4" id="wYVAq39O5l" role="3fr31v">
                <node concept="2ZW3vV" id="wYVAq39O5m" role="1eOMHV">
                  <node concept="37vLTw" id="wYVAq39O5n" role="2ZW6bz">
                    <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                  </node>
                  <node concept="3uibUv" id="wYVAq39O5o" role="2ZW6by">
                    <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="wYVAq39O5p" role="37wK5m">
              <property role="Xl_RC" value="Expected value in assertion using exact float equality was a double, which is not supported as a double may not have an exact float representation" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPxVG" role="3cqZAp">
          <node concept="2YIFZM" id="wYVAq39OTI" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="22lmx$" id="wYVAq39OTJ" role="37wK5m">
              <node concept="22lmx$" id="wYVAq39OTK" role="3uHU7B">
                <node concept="2ZW3vV" id="wYVAq39OTL" role="3uHU7B">
                  <node concept="37vLTw" id="wYVAq39OTM" role="2ZW6bz">
                    <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                  </node>
                  <node concept="3uibUv" id="wYVAq39OTN" role="2ZW6by">
                    <ref role="3uigEE" to="wyt6:~Float" resolve="Float" />
                  </node>
                </node>
                <node concept="2ZW3vV" id="wYVAq39OTO" role="3uHU7w">
                  <node concept="37vLTw" id="wYVAq39OTP" role="2ZW6bz">
                    <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                  </node>
                  <node concept="3uibUv" id="wYVAq39OTQ" role="2ZW6by">
                    <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                  </node>
                </node>
              </node>
              <node concept="2ZW3vV" id="wYVAq39OTR" role="3uHU7w">
                <node concept="37vLTw" id="wYVAq39OTS" role="2ZW6bz">
                  <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                </node>
                <node concept="3uibUv" id="wYVAq39OTT" role="2ZW6by">
                  <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="wYVAq39OTU" role="37wK5m">
              <property role="Xl_RC" value="Expected value in assertion using exact float equality was of unsupported type %s (it may not have an exact float representation)" />
            </node>
            <node concept="2OqwBi" id="wYVAq39OTV" role="37wK5m">
              <node concept="37vLTw" id="wYVAq39OTW" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
              </node>
              <node concept="liA8E" id="wYVAq39OTX" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxVV" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmPxVY" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxVW" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPxVX" role="2ZW6by">
              <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxW0" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxW1" role="3cqZAp">
              <node concept="2YIFZM" id="wYVAq39tZC" role="3clFbG">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
                <node concept="2dkUwp" id="wYVAq39tZD" role="37wK5m">
                  <node concept="2YIFZM" id="wYVAq39tZE" role="3uHU7B">
                    <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
                    <ref role="37wK5l" to="wyt6:~Math.abs(int):int" resolve="abs" />
                    <node concept="10QFUN" id="wYVAq39tZF" role="37wK5m">
                      <node concept="37vLTw" id="wYVAq39tZG" role="10QFUP">
                        <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                      </node>
                      <node concept="3uibUv" id="wYVAq39tZH" role="10QFUM">
                        <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                      </node>
                    </node>
                  </node>
                  <node concept="1GRDU$" id="wYVAq39tZI" role="3uHU7w">
                    <node concept="3cmrfG" id="wYVAq39tZJ" role="3uHU7B">
                      <property role="3cmrfH" value="1" />
                    </node>
                    <node concept="3cmrfG" id="wYVAq39tZK" role="3uHU7w">
                      <property role="3cmrfH" value="24" />
                    </node>
                  </node>
                </node>
                <node concept="Xl_RD" id="wYVAq39tZL" role="37wK5m">
                  <property role="Xl_RC" value="Expected value %s in assertion using exact float equality was an int with an absolute value greater than 2^24 which has no exact float representation" />
                </node>
                <node concept="37vLTw" id="wYVAq39tZM" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxWd" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmPxWg" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxWe" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPxWf" role="2ZW6by">
              <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxWi" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxWj" role="3cqZAp">
              <node concept="2YIFZM" id="wYVAq39RD9" role="3clFbG">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
                <node concept="2dkUwp" id="wYVAq39RDa" role="37wK5m">
                  <node concept="2YIFZM" id="wYVAq39RDb" role="3uHU7B">
                    <ref role="1Pybhc" to="wyt6:~Math" resolve="Math" />
                    <ref role="37wK5l" to="wyt6:~Math.abs(long):long" resolve="abs" />
                    <node concept="10QFUN" id="wYVAq39RDc" role="37wK5m">
                      <node concept="37vLTw" id="wYVAq39RDd" role="10QFUP">
                        <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                      </node>
                      <node concept="3uibUv" id="wYVAq39RDe" role="10QFUM">
                        <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
                      </node>
                    </node>
                  </node>
                  <node concept="1GRDU$" id="wYVAq39RDf" role="3uHU7w">
                    <node concept="1adDum" id="wYVAq39RDg" role="3uHU7B">
                      <property role="1adDun" value="1L" />
                    </node>
                    <node concept="3cmrfG" id="wYVAq39RDh" role="3uHU7w">
                      <property role="3cmrfH" value="24" />
                    </node>
                  </node>
                </node>
                <node concept="Xl_RD" id="wYVAq39RDi" role="37wK5m">
                  <property role="Xl_RC" value="Expected value %s in assertion using exact float equality was a long with an absolute value greater than 2^24 which has no exact float representation" />
                </node>
                <node concept="37vLTw" id="wYVAq39RDj" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPxWv" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPB3V" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPB3U" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPxVu" resolve="expected" />
            </node>
            <node concept="liA8E" id="5JQC2dmPB3W" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Number.floatValue():float" resolve="floatValue" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxWx" role="1B3o_S" />
      <node concept="10OMs4" id="5JQC2dmPxWy" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPxWz" role="jymVt">
      <property role="TrG5h" value="usingExactEquality" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxW$" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxW_" role="3cqZAp">
          <node concept="10Nm6u" id="wYVAq3lGnk" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxWD" role="1B3o_S" />
      <node concept="3uibUv" id="wYVAq3lEtq" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy4m" resolve="IterableSubject.UsingCorrespondence" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxWF" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy1C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1D" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the elements of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1F" role="1dT_Ay">
            <property role="1dT_AB" value=" the array under test) are compared to expected elements using a {@link Correspondence} which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1H" role="1dT_Ay">
            <property role="1dT_AB" value=" considers values to correspond if they are exactly equal, with equality defined by {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1J" role="1dT_Ay">
            <property role="1dT_AB" value=" Float#equals}. This method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing any kind" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1L" role="1dT_Ay">
            <property role="1dT_AB" value=" of arithmetic: use {@link #usingTolerance} with a suitable tolerance in that case. (Remember" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1M" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1N" role="1dT_Ay">
            <property role="1dT_AB" value=" that the exact result of floating point arithmetic is sensitive to apparently trivial changes" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1O" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1P" role="1dT_Ay">
            <property role="1dT_AB" value=" such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1Q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1R" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1S" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1T" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1U" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1V" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying a value without modification from its input or returning a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1X" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant value. The proposition is actually executed by continuing the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy1Y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy1Z" role="1dT_Ay">
            <property role="1dT_AB" value=" method chain. For example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy20" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy21" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;   {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy22" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy23" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualFloatArray).usingExactEquality().contains(3.14159f);}&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy24" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy25" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy26" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy27" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;For convenience, some subsequent methods accept expected values as {@link Number} instances." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy28" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy29" role="1dT_Ay">
            <property role="1dT_AB" value=" These numbers must be either of type {@link Float}, {@link Integer}, or {@link Long}, and if" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2b" role="1dT_Ay">
            <property role="1dT_AB" value=" they are {@link Integer} or {@link Long} then their absolute values must not exceed 2^24 which" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2d" role="1dT_Ay">
            <property role="1dT_AB" value=" is 16,777,216. (This restriction ensures that the expected values have exact {@link Float}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2f" role="1dT_Ay">
            <property role="1dT_AB" value=" representations: using exact equality makes no sense if they do not.)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2g" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2h" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2i" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2j" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2l" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It considers {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, and {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2n" role="1dT_Ay">
            <property role="1dT_AB" value="       Float#NaN} to be equal to themselves (contrast with {@code #usingTolerance(0.0)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2p" role="1dT_Ay">
            <property role="1dT_AB" value="       which does not)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2r" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does &lt;i&gt;not&lt;/i&gt; consider {@code -0.0f} to be equal to {@code 0.0f} (contrast with" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2t" role="1dT_Ay">
            <property role="1dT_AB" value="       {@code #usingTolerance(0.0) which does)." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2v" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The subsequent methods in the chain may throw a {@link NullPointerException} if any" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2x" role="1dT_Ay">
            <property role="1dT_AB" value="       expected {@link Float} instance is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPy2y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy2z" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2tJIrI" id="wYVAq3lIeb" role="jymVt" />
    <node concept="3clFb_" id="5JQC2dmPxWG" role="jymVt">
      <property role="TrG5h" value="iterableSubject" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxWH" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxWI" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPxWX" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPxWJ" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPxWK" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPxWL" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPxWM" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPxWN" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPxWO" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPxWP" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPxWQ" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPxNN" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxWR" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPxWS" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPxWT" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPxWU" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxWV" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPxWW" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPxNN" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPxWY" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxWZ" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="3HP615" id="5JQC2dmPzCc">
    <property role="TrG5h" value="Ordered" />
    <property role="2bfB8j" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzCd" role="1B3o_S" />
    <node concept="3clFb_" id="5JQC2dmPzCe" role="jymVt">
      <property role="TrG5h" value="inOrder" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPzCf" role="1B3o_S" />
      <node concept="3clFbS" id="5JQC2dmPzCg" role="3clF47" />
      <node concept="3cqZAl" id="5JQC2dmPzCh" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzCi" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzCl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzCm" role="1dT_Ay">
            <property role="1dT_AB" value="An additional assertion, implemented by some containment subjects which allows for a further" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzCn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzCo" role="1dT_Ay">
            <property role="1dT_AB" value="constraint of orderedness." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzG8">
    <property role="TrG5h" value="FailureContext" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPzG9" role="1B3o_S" />
    <node concept="3UR2Jj" id="5JQC2dmPzI0" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzI5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzI6" role="1dT_Ay">
          <property role="1dT_AB" value=" An abstract type which holds a context message and formats it on demand." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzI7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzI8" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzI9" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzIa" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;{@code FailureMessageHolder} is a parent to those Verb types which will need to be modified" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzIb" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzIc" role="1dT_Ay">
          <property role="1dT_AB" value=" with failure message state." />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPzGa" role="jymVt">
      <property role="TrG5h" value="PLACEHOLDER_ERR" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPzGb" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="Xl_RD" id="5JQC2dmPzGc" role="33vP2m">
        <property role="Xl_RC" value="Incorrect number of args (%s) for the given placeholders (%s) in string template:\&quot;%s\&quot;" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzGd" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPzGe" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="format" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPzGg" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzGh" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPzGi" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="args" />
      <property role="3TUv4t" value="true" />
      <node concept="10Q1$e" id="5JQC2dmPzGl" role="1tU5fm">
        <node concept="3uibUv" id="5JQC2dmPzGk" role="10Q1$1">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzGm" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPzGn" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzGo" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzGp" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzGq" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzGr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzGs" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzGt" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPzGv" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPzGu" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzGw" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzGx" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPzGy" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPzGz" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmPzG$" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmPzG_" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPzGe" resolve="format" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPzGA" role="37vLTx">
              <ref role="3cqZAo" node="5JQC2dmPzGp" resolve="format" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzGB" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPzGC" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPzGD" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmPzGE" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmPzGF" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPzGi" resolve="args" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPzGG" role="37vLTx">
              <ref role="3cqZAo" node="5JQC2dmPzGs" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzGI" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzGH" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="placeholders" />
            <node concept="10Oyi0" id="5JQC2dmPzGJ" role="1tU5fm" />
            <node concept="1rXfSq" id="5JQC2dmPzGK" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPzHg" resolve="countPlaceholders" />
              <node concept="37vLTw" id="5JQC2dmPzGL" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzGp" resolve="format" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzGM" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn6n8O" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object):void" resolve="checkArgument" />
            <node concept="3clFbC" id="5JQC2dn6n8P" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dn6n8Q" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzGH" resolve="placeholders" />
              </node>
              <node concept="2OqwBi" id="5JQC2dn6n8R" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dn6n8S" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzGs" resolve="args" />
                </node>
                <node concept="1Rwk04" id="5JQC2dn6n8T" role="2OqNvi" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dn6n8U" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzGa" resolve="PLACEHOLDER_ERR" />
            </node>
            <node concept="2OqwBi" id="5JQC2dn6n8V" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dn6n8W" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPzGs" resolve="args" />
              </node>
              <node concept="1Rwk04" id="5JQC2dn6n8X" role="2OqNvi" />
            </node>
            <node concept="37vLTw" id="5JQC2dn6n8Y" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzGH" resolve="placeholders" />
            </node>
            <node concept="37vLTw" id="5JQC2dn6n8Z" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzGp" resolve="format" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzGV" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPzGW" role="jymVt">
      <property role="TrG5h" value="getFailureMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzGX" role="2AJF6D">
        <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzGY" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzGZ" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPzH5" role="3cqZAk">
            <node concept="1rXfSq" id="5JQC2dmPzH0" role="3K4Cdx">
              <ref role="37wK5l" node="5JQC2dmPzH8" resolve="hasFailureMessage" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmPB6p" role="3K4E3e">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="37vLTw" id="5JQC2dmPB6q" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzGe" resolve="format" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPB6s" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzGi" resolve="args" />
              </node>
            </node>
            <node concept="10Nm6u" id="5JQC2dmPzH4" role="3K4GZi" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzH6" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzH7" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzH8" role="jymVt">
      <property role="TrG5h" value="hasFailureMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzH9" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzHa" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPzHb" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPzHc" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPzGe" resolve="format" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPzHd" role="3uHU7w" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzHe" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPzHf" role="3clF45" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzHg" role="jymVt">
      <property role="TrG5h" value="countPlaceholders" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzHh" role="3clF46">
        <property role="TrG5h" value="template" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzHi" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzHj" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzHk" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzHl" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPzHm" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPzHn" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPzHh" resolve="template" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPzHo" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPzHq" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPzHr" role="3cqZAp">
              <node concept="3cmrfG" id="5JQC2dmPzHs" role="3cqZAk">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzHu" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzHt" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="5JQC2dmPzHv" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPzHw" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzHy" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzHx" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="count" />
            <node concept="10Oyi0" id="5JQC2dmPzHz" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPzH$" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPzHW" role="3cqZAp">
          <node concept="3clFbT" id="5JQC2dmPzH_" role="2$JKZa">
            <property role="3clFbU" value="true" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPzHB" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPzHC" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPzHD" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPzHE" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPzHt" resolve="index" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPB6w" role="37vLTx">
                  <node concept="37vLTw" id="5JQC2dmPB6v" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPzHh" resolve="template" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPB6x" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.indexOf(java.lang.String,int):int" resolve="indexOf" />
                    <node concept="Xl_RD" id="5JQC2dmPB6y" role="37wK5m">
                      <property role="Xl_RC" value="%s" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPB6z" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzHt" resolve="index" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPzHI" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmPzHJ" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPzHK" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPzHt" resolve="index" />
                </node>
                <node concept="1ZRNhn" id="5JQC2dmPzHL" role="3uHU7w">
                  <node concept="3cmrfG" id="5JQC2dmPzHM" role="2$L3a6">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzHO" role="3clFbx">
                <node concept="3zACq4" id="5JQC2dmPzHP" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPzHQ" role="3cqZAp">
              <node concept="3uNrnE" id="5JQC2dmPzHR" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPzHS" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPzHt" resolve="index" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPzHT" role="3cqZAp">
              <node concept="3uNrnE" id="5JQC2dmPzHU" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPzHV" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPzHx" resolve="count" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzHX" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzHY" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPzHx" resolve="count" />
          </node>
        </node>
      </node>
      <node concept="10Oyi0" id="5JQC2dmPzHZ" role="3clF45" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPxpk">
    <property role="TrG5h" value="Correspondence" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPxpl" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPxpm" role="16eVyc">
      <property role="TrG5h" value="A" />
    </node>
    <node concept="16euLQ" id="5JQC2dmPxpn" role="16eVyc">
      <property role="TrG5h" value="E" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPxrb" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxrh" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxri" role="1dT_Ay">
          <property role="1dT_AB" value=" Determines whether an instance of type {@code A} corresponds in some way to an instance of type" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrj" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrk" role="1dT_Ay">
          <property role="1dT_AB" value=" {@code E}. For example, the implementation returned by the {@link #tolerance(double)} factory" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrl" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrm" role="1dT_Ay">
          <property role="1dT_AB" value=" method implements approximate equality between numeric values, with values being said to" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrn" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxro" role="1dT_Ay">
          <property role="1dT_AB" value=" correspond if the difference between them is does not exceed some fixed tolerance. The instances" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrp" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrq" role="1dT_Ay">
          <property role="1dT_AB" value=" of type {@code A} are typically actual values from a collection returned by the code under test;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrr" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrs" role="1dT_Ay">
          <property role="1dT_AB" value=" the instances of type {@code E} are typically expected values with which the actual values are" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrt" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxru" role="1dT_Ay">
          <property role="1dT_AB" value=" compared by the test." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrv" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrw" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrx" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxry" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;The correspondence is required to be consistent: for any given values {@code actual} and" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrz" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxr$" role="1dT_Ay">
          <property role="1dT_AB" value=" {@code expected}, multiple invocations of {@code compare(actual, expected)} must consistently" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxr_" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrA" role="1dT_Ay">
          <property role="1dT_AB" value=" return {@code true} or consistently return {@code false} (provided that neither value is" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrB" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrC" role="1dT_Ay">
          <property role="1dT_AB" value=" modified). Although {@code A} and {@code E} will often be the same types, they are &lt;i&gt;not&lt;/i&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrD" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrE" role="1dT_Ay">
          <property role="1dT_AB" value=" required to be the same, and even if they are it is &lt;i&gt;not&lt;/i&gt; required that the correspondence" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrF" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrG" role="1dT_Ay">
          <property role="1dT_AB" value=" should have any of the other properties of an equivalence relation (reflexivity, symmetry, or" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrH" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrI" role="1dT_Ay">
          <property role="1dT_AB" value=" transitivity)." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrJ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrK" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrL" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrM" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Instances of this are typically used via {@link IterableSubject#comparingElementsUsing}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrN" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrO" role="1dT_Ay">
          <property role="1dT_AB" value=" (TODO(b/29966314): Mention MapSubject and MultimapSubject methods when they're added.)" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrP" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrQ" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxrR" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxrS" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Pete Gillin" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPxqn" role="jymVt">
      <property role="TrG5h" value="tolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxqo" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPxqp" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxqq" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPxqr" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPB6$" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPB6J" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPxpx" resolve="Correspondence.TolerantNumericEquality" />
              <node concept="37vLTw" id="5JQC2dmPB6K" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxqo" resolve="tolerance" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxqu" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxqv" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
        <node concept="3uibUv" id="5JQC2dmPxqw" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxqx" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPxqy" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxrT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxrU" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a {@link Correspondence} between {@link Number} instances that considers instances to" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxrV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxrW" role="1dT_Ay">
            <property role="1dT_AB" value=" correspond (i.e. {@link Correspondence#compare(Number, Number)} returns {@code true}) if the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxrX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxrY" role="1dT_Ay">
            <property role="1dT_AB" value=" double values of each instance (i.e. the result of calling {@link Number#doubleValue()} on" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxrZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs0" role="1dT_Ay">
            <property role="1dT_AB" value=" them) are finite values within {@code tolerance} of each other." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs2" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs4" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs6" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;It does not consider instances to correspond if either value is infinite or NaN." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs8" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The conversion to double may result in a loss of precision for some numeric types." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsa" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;The {@link Correspondence#compare(Number, Number)} method throws a {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsc" role="1dT_Ay">
            <property role="1dT_AB" value="       NullPointerException} if either {@link Number} instance is null." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxse" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsg" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsi" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the double values of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsk" role="1dT_Ay">
            <property role="1dT_AB" value="     two {@link Number} instances, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsm" role="1dT_Ay">
            <property role="1dT_AB" value="     Double#NaN}, {@link Double#POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPxpo" role="jymVt">
      <property role="TrG5h" value="TolerantNumericEquality" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tm6S6" id="5JQC2dmPxpp" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxpq" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
        <node concept="3uibUv" id="5JQC2dmPxpr" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxps" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPxpt" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10P55v" id="5JQC2dmPxpv" role="1tU5fm" />
        <node concept="3Tm6S6" id="5JQC2dmPxpw" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPxpx" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPxpy" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPxpz" role="3clF46">
          <property role="TrG5h" value="tolerance" />
          <property role="3TUv4t" value="false" />
          <node concept="10P55v" id="5JQC2dmPxp$" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPxp_" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPxpA" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPxpB" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPxpC" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPxpD" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPxpE" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPxpt" resolve="tolerance" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPxpF" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPxpz" resolve="tolerance" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPxpG" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPxpH" role="jymVt">
        <property role="TrG5h" value="compare" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxpI" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPxpJ" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxpK" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
          </node>
          <node concept="2AHcQZ" id="5JQC2dmVhQw" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPxpL" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPxpM" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
          </node>
          <node concept="2AHcQZ" id="5JQC2dmVi3Z" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPxpN" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPxpO" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dmQbaT" role="3clFbG">
              <ref role="1Pybhc" node="5JQC2dmPzId" resolve="DoubleSubject" />
              <ref role="37wK5l" node="5JQC2dmPzL4" resolve="checkTolerance" />
              <node concept="37vLTw" id="5JQC2dmQbaU" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxpt" resolve="tolerance" />
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPxpS" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPxpR" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="actualDouble" />
              <node concept="10P55v" id="5JQC2dmPxpT" role="1tU5fm" />
              <node concept="2OqwBi" id="5JQC2dmPxpU" role="33vP2m">
                <node concept="2YIFZM" id="5JQC2dmV96D" role="2Oq$k0">
                  <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                  <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                  <node concept="37vLTw" id="5JQC2dmV96E" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxpJ" resolve="actual" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPxpX" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Number.doubleValue():double" resolve="doubleValue" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPxpZ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPxpY" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedDouble" />
              <node concept="10P55v" id="5JQC2dmPxq0" role="1tU5fm" />
              <node concept="2OqwBi" id="5JQC2dmPxq1" role="33vP2m">
                <node concept="liA8E" id="5JQC2dmPxq4" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Number.doubleValue():double" resolve="doubleValue" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmVjXt" role="2Oq$k0">
                  <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                  <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                  <node concept="37vLTw" id="5JQC2dmVkdR" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxpL" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPxq5" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dmPB6X" role="3cqZAk">
              <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
              <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
              <node concept="37vLTw" id="5JQC2dmPB6Y" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxpR" resolve="actualDouble" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPB6Z" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxpY" resolve="expectedDouble" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPB70" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxpt" resolve="tolerance" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxqa" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPxqb" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPxqc" role="jymVt">
        <property role="TrG5h" value="toString" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxqd" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPxqe" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPxqf" role="3cqZAp">
            <node concept="3cpWs3" id="5JQC2dmPxqg" role="3cqZAk">
              <node concept="3cpWs3" id="5JQC2dmPxqh" role="3uHU7B">
                <node concept="Xl_RD" id="5JQC2dmPxqi" role="3uHU7B">
                  <property role="Xl_RC" value="is a finite number within " />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxqj" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPxpt" resolve="tolerance" />
                </node>
              </node>
              <node concept="Xl_RD" id="5JQC2dmPxqk" role="3uHU7w">
                <property role="Xl_RC" value=" of" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPxql" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPxqm" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxqz" role="jymVt">
      <property role="TrG5h" value="compare" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxq$" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxq_" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPxqA" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPxpm" resolve="A" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxqB" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxqC" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPxqD" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPxpn" resolve="E" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxqE" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPxqF" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPxqG" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxqH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxsn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxso" role="1dT_Ay">
            <property role="1dT_AB" value="Returns whether or not the {@code actual} value is said to correspond to the {@code expected}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsq" role="1dT_Ay">
            <property role="1dT_AB" value="value for the purposes of this test." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxqI" role="jymVt">
      <property role="TrG5h" value="toString" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxqJ" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxqK" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPxqL" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPxqM" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPxqN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxsr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxss" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a description of the correspondence, suitable to fill the gap in a failure message of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxst" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsu" role="1dT_Ay">
            <property role="1dT_AB" value=" the form {@code &quot;&lt;some actual element&gt; is an element that ... &lt;some expected element&gt;&quot;}. Note" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsw" role="1dT_Ay">
            <property role="1dT_AB" value=" that this is a fragment of a verb phrase which takes a singular subject." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsy" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxs$" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example 1: For a {@code Correspondence&lt;String, Integer&gt;} that tests whether the actual" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxs_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsA" role="1dT_Ay">
            <property role="1dT_AB" value=" string parses to the expected integer, this would return {@code &quot;parses to&quot;} to result in a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsC" role="1dT_Ay">
            <property role="1dT_AB" value=" failure message of the form {@code &quot;&lt;some actual string&gt; is an element that parses to &lt;some" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsE" role="1dT_Ay">
            <property role="1dT_AB" value=" expected integer&gt;&quot;}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsG" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsI" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Example 2: For the {@code Correspondence&lt;Number, Number&gt;} returns by {@link #tolerance} this" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsK" role="1dT_Ay">
            <property role="1dT_AB" value=" returns {@code &quot;is a finite number within &quot; + tolerance + &quot; of&quot;} to result in a failure message" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsM" role="1dT_Ay">
            <property role="1dT_AB" value=" of the form {@code &quot;&lt;some actual number&gt; is an element that is a finite number within 0.0001 of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsO" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;some expected number&gt;&quot;}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxqO" role="jymVt">
      <property role="TrG5h" value="equals" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxqP" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPxqQ" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxqR" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxqS" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxqT" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxqU" role="3clF47">
        <node concept="YS8fn" id="5JQC2dmPxqX" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPB72" role="YScLw">
            <node concept="1pGfFk" id="5JQC2dmPB7g" role="2ShVmc">
              <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
              <node concept="Xl_RD" id="5JQC2dmPB7h" role="37wK5m">
                <property role="Xl_RC" value="Correspondence.equals(object) is not supported. If you meant to compare objects, use .compare(actual, expected) instead." />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxqY" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPxqZ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxr0" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxsP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsQ" role="1dT_Ay">
            <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsS" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported. If you meant to compare objects" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsU" role="1dT_Ay">
            <property role="1dT_AB" value="    using this {@link Correspondence}, use {@link #compare}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxr1" role="jymVt">
      <property role="TrG5h" value="hashCode" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxr2" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPxr3" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxr4" role="3clF47">
        <node concept="YS8fn" id="5JQC2dmPxr7" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPB7i" role="YScLw">
            <node concept="1pGfFk" id="5JQC2dmPB7w" role="2ShVmc">
              <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
              <node concept="Xl_RD" id="5JQC2dmPB7x" role="37wK5m">
                <property role="Xl_RC" value="Correspondence.hashCode() is not supported." />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxr8" role="1B3o_S" />
      <node concept="10Oyi0" id="5JQC2dmPxr9" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxra" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxsV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsW" role="1dT_Ay">
            <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxsX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxsY" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$rw">
    <property role="TrG5h" value="StringUtil" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3UR2Jj" id="5JQC2dmP$tC" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$tH" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$tI" role="1dT_Ay">
          <property role="1dT_AB" value=" Utilities for string comparisons." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$tJ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$tK" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$tL" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$tM" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@google.com)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmP$rx" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$ry" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmP$rz" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmP$r$" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$r_" role="jymVt">
      <property role="TrG5h" value="messageFor" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$rA" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$rB" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$rC" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$rD" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$rE" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$rF" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$rG" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$rH" role="3cqZAp">
          <node concept="3cpWs3" id="5JQC2dmP$rI" role="3cqZAk">
            <node concept="3cpWs3" id="5JQC2dmP$rJ" role="3uHU7B">
              <node concept="3cpWs3" id="5JQC2dmP$rK" role="3uHU7B">
                <node concept="3cpWs3" id="5JQC2dmP$rL" role="3uHU7B">
                  <node concept="2YIFZM" id="5JQC2do0riT" role="3uHU7B">
                    <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                    <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                    <node concept="37vLTw" id="5JQC2do0riU" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$rA" resolve="message" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmP$rO" role="3uHU7w">
                    <property role="Xl_RC" value="\n\nExpected:\n" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2do0pKr" role="3uHU7w">
                  <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                  <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                  <node concept="37vLTw" id="5JQC2do0pKs" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$rC" resolve="expected" />
                  </node>
                </node>
              </node>
              <node concept="Xl_RD" id="5JQC2dmP$rR" role="3uHU7w">
                <property role="Xl_RC" value="\n\nActual:\n" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2do0vae" role="3uHU7w">
              <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
              <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
              <node concept="37vLTw" id="5JQC2do0vaf" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$rE" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmP$rU" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$rV" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$tN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tO" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a message appropriate for string comparisons." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$tP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tQ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$tR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tS" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;TODO(cgruber): Do something closer to what JUnit's {@code ComparisonFailure} does." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$rW" role="jymVt">
      <property role="TrG5h" value="format" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$rX" role="3clF46">
        <property role="TrG5h" value="template" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$rY" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$rZ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$s0" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmP$s2" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmP$s1" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$s3" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$s4" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmP$s5" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP$s6" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmPB7$" role="37vLTx">
              <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
              <ref role="37wK5l" to="wyt6:~String.valueOf(java.lang.Object):java.lang.String" resolve="valueOf" />
              <node concept="37vLTw" id="5JQC2dmPB7_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmP$ug" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TnZ" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8To0" role="1PaTwD">
              <property role="3oM_SC" value="null" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To1" role="1PaTwD">
              <property role="3oM_SC" value="-&gt;" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To2" role="1PaTwD">
              <property role="3oM_SC" value="&quot;null&quot;" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmP$ui" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8To3" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8To4" role="1PaTwD">
              <property role="3oM_SC" value="start" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To5" role="1PaTwD">
              <property role="3oM_SC" value="substituting" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To6" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To7" role="1PaTwD">
              <property role="3oM_SC" value="arguments" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To8" role="1PaTwD">
              <property role="3oM_SC" value="into" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To9" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toa" role="1PaTwD">
              <property role="3oM_SC" value="'%s'" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tob" role="1PaTwD">
              <property role="3oM_SC" value="placeholders" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmP$sa" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$s9" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="builder" />
            <node concept="3uibUv" id="5JQC2dmP$sb" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmPB7A" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPBb$" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;(int)" resolve="StringBuilder" />
                <node concept="3cpWs3" id="5JQC2dmPBb_" role="37wK5m">
                  <node concept="2OqwBi" id="5JQC2dmPCJN" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmPCJM" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCJO" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.length():int" resolve="length" />
                    </node>
                  </node>
                  <node concept="17qRlL" id="5JQC2dmPBbB" role="3uHU7w">
                    <node concept="3cmrfG" id="5JQC2dmPBbC" role="3uHU7B">
                      <property role="3cmrfH" value="16" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPCJR" role="3uHU7w">
                      <node concept="37vLTw" id="5JQC2dmPCJQ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
                      </node>
                      <node concept="1Rwk04" id="5JQC2dmQb$P" role="2OqNvi" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmP$sj" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$si" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="templateStart" />
            <node concept="10Oyi0" id="5JQC2dmP$sk" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmP$sl" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmP$sn" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$sm" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmP$so" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmP$sp" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmP$sY" role="3cqZAp">
          <node concept="3eOVzh" id="5JQC2dmP$sq" role="2$JKZa">
            <node concept="37vLTw" id="5JQC2dmP$sr" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBbG" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPBbF" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
              </node>
              <node concept="1Rwk04" id="5JQC2dmQb$Q" role="2OqNvi" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$su" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmP$sw" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$sv" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="placeholderStart" />
                <node concept="10Oyi0" id="5JQC2dmP$sx" role="1tU5fm" />
                <node concept="2OqwBi" id="5JQC2dmPBbK" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPBbJ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBbL" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.indexOf(java.lang.String,int):int" resolve="indexOf" />
                    <node concept="Xl_RD" id="5JQC2dmPBbM" role="37wK5m">
                      <property role="Xl_RC" value="%s" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPBbN" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$si" resolve="templateStart" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$s_" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmP$sA" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmP$sB" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$sv" resolve="placeholderStart" />
                </node>
                <node concept="1ZRNhn" id="5JQC2dmP$sC" role="3uHU7w">
                  <node concept="3cmrfG" id="5JQC2dmP$sD" role="2$L3a6">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$sF" role="3clFbx">
                <node concept="3zACq4" id="5JQC2dmP$sG" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$sH" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBbQ" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBbP" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBbR" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="2OqwBi" id="5JQC2dmPCyb" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPCya" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCyc" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.substring(int,int):java.lang.String" resolve="substring" />
                      <node concept="37vLTw" id="5JQC2dmPCyd" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$si" resolve="templateStart" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPCye" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$sv" resolve="placeholderStart" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$sM" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBbX" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBbW" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBbY" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.Object):java.lang.StringBuilder" resolve="append" />
                  <node concept="AH0OO" id="5JQC2dmPBbZ" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPBc0" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
                    </node>
                    <node concept="3uNrnE" id="5JQC2dmPBc1" role="AHEQo">
                      <node concept="37vLTw" id="5JQC2dmPBc2" role="2$L3a6">
                        <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$sS" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmP$sT" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmP$sU" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmP$si" resolve="templateStart" />
                </node>
                <node concept="3cpWs3" id="5JQC2dmP$sV" role="37vLTx">
                  <node concept="37vLTw" id="5JQC2dmP$sW" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmP$sv" resolve="placeholderStart" />
                  </node>
                  <node concept="3cmrfG" id="5JQC2dmP$sX" role="3uHU7w">
                    <property role="3cmrfH" value="2" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$sZ" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBc5" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPBc4" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBc6" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
              <node concept="2OqwBi" id="5JQC2dmPCJk" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPCJj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$rX" resolve="template" />
                </node>
                <node concept="liA8E" id="5JQC2dmPCJl" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.substring(int):java.lang.String" resolve="substring" />
                  <node concept="37vLTw" id="5JQC2dmPCJm" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$si" resolve="templateStart" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmP$uk" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Toc" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tod" role="1PaTwD">
              <property role="3oM_SC" value="if" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toe" role="1PaTwD">
              <property role="3oM_SC" value="we" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tof" role="1PaTwD">
              <property role="3oM_SC" value="run" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tog" role="1PaTwD">
              <property role="3oM_SC" value="out" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toh" role="1PaTwD">
              <property role="3oM_SC" value="of" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toi" role="1PaTwD">
              <property role="3oM_SC" value="placeholders," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toj" role="1PaTwD">
              <property role="3oM_SC" value="append" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tok" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tol" role="1PaTwD">
              <property role="3oM_SC" value="extra" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tom" role="1PaTwD">
              <property role="3oM_SC" value="args" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Ton" role="1PaTwD">
              <property role="3oM_SC" value="in" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Too" role="1PaTwD">
              <property role="3oM_SC" value="square" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Top" role="1PaTwD">
              <property role="3oM_SC" value="braces" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$t3" role="3cqZAp">
          <node concept="3eOVzh" id="5JQC2dmP$t4" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP$t5" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBcb" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPBca" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
              </node>
              <node concept="1Rwk04" id="5JQC2dmQb$R" role="2OqNvi" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$t8" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$t9" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBcf" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBce" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBcg" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="Xl_RD" id="5JQC2dmPBch" role="37wK5m">
                    <property role="Xl_RC" value=" [" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$tc" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBck" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBcj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBcl" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.Object):java.lang.StringBuilder" resolve="append" />
                  <node concept="AH0OO" id="5JQC2dmPBcm" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPBcn" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
                    </node>
                    <node concept="3uNrnE" id="5JQC2dmPBco" role="AHEQo">
                      <node concept="37vLTw" id="5JQC2dmPBcp" role="2$L3a6">
                        <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="2$JKZl" id="5JQC2dmP$tw" role="3cqZAp">
              <node concept="3eOVzh" id="5JQC2dmP$ti" role="2$JKZa">
                <node concept="37vLTw" id="5JQC2dmP$tj" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPBcs" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPBcr" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb$S" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$tm" role="2LFqv$">
                <node concept="3clFbF" id="5JQC2dmP$tn" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPBcw" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPBcv" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBcx" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                      <node concept="Xl_RD" id="5JQC2dmPBcy" role="37wK5m">
                        <property role="Xl_RC" value=", " />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmP$tq" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPBc_" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPBc$" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBcA" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.Object):java.lang.StringBuilder" resolve="append" />
                      <node concept="AH0OO" id="5JQC2dmPBcB" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPBcC" role="AHHXb">
                          <ref role="3cqZAo" node="5JQC2dmP$s0" resolve="args" />
                        </node>
                        <node concept="3uNrnE" id="5JQC2dmPBcD" role="AHEQo">
                          <node concept="37vLTw" id="5JQC2dmPBcE" role="2$L3a6">
                            <ref role="3cqZAo" node="5JQC2dmP$sm" resolve="i" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$tx" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBcH" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBcG" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBcI" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(char):java.lang.StringBuilder" resolve="append" />
                  <node concept="1Xhbcc" id="5JQC2dmPBcJ" role="37wK5m">
                    <property role="1XhdNS" value="]" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$t$" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBcM" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPBcL" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmP$s9" resolve="builder" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBcN" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmP$tA" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$tB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$tT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tU" role="1dT_Ay">
            <property role="1dT_AB" value=" Substitutes each {@code %s} in {@code template} with an argument. These are matched by position" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$tV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tW" role="1dT_Ay">
            <property role="1dT_AB" value=" - the first {@code %s} gets {@code args[0]}, etc. If there are more arguments than" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$tX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$tY" role="1dT_Ay">
            <property role="1dT_AB" value=" placeholders, the unmatched arguments will be appended to the end of the formatted message in" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$tZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$u0" role="1dT_Ay">
            <property role="1dT_AB" value=" square braces." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$u1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$u2" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$u3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$u4" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Cribbed from Guava's {@link com.google.common.base.Preconditions} to allow for a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$u5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$u6" role="1dT_Ay">
            <property role="1dT_AB" value=" GWT-compatible alternative to {@link String#format(String, Object...)}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$u7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$u8" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$u9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ua" role="1dT_Ay">
            <property role="1dT_AB" value=" @param template a string containing 0 or more {@code %s} placeholders" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ub" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$uc" role="1dT_Ay">
            <property role="1dT_AB" value=" @param args the arguments to be substituted into the message template. Arguments are converted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$ud" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$ue" role="1dT_Ay">
            <property role="1dT_AB" value="     to strings using {@link String#valueOf(Object)}. Arguments can be null." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPyTy">
    <property role="TrG5h" value="MultimapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPyTz" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPz1l" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPz1m" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPz1n" role="11_B2D">
        <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
        <node concept="3qTvmN" id="5JQC2dmPz1o" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPz1p" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzeX" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzfr" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzfs" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Multimap} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzft" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzfu" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzfv" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzfw" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Daniel Ploch" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzfx" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzfy" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPz1q" role="jymVt">
      <property role="TrG5h" value="ALREADY_FAILED" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPz1r" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPz1s" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPz1t" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPz1u" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmPzCc" resolve="Ordered" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPz1v" role="jymVt">
              <property role="TrG5h" value="inOrder" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPz1w" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="3clFbS" id="5JQC2dmPz1x" role="3clF47" />
              <node concept="3Tm1VV" id="5JQC2dmPz1y" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPz1z" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPz1$" role="1B3o_S" />
      <node concept="z59LJ" id="5JQC2dmPz1_" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzf$" role="1dT_Ay">
            <property role="1dT_AB" value="Ordered implementation that does nothing because an earlier check already caused a failure. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPz1A" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPz1B" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPz1C" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPz1D" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz1E" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz1F" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz1G" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPz1H" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPz1I" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz1J" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBcO" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPBcP" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPz1C" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPBcQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPz1E" resolve="multimap" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz1N" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPz1O" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz1P" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz1Q" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPz1R" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPz1S" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz1T" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz1V" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz1W" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz1X" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz1Y" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz1Z" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz20" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz21" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzf_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfA" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz22" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPz23" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz24" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPz25" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPz26" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPz27" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz29" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz2a" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz2b" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz2c" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz2d" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz2e" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz2f" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfC" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap is empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz2g" role="jymVt">
      <property role="TrG5h" value="hasSize" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz2h" role="3clF46">
        <property role="TrG5h" value="expectedSize" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPz2i" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPz2j" role="3clF47">
        <node concept="3clFbF" id="5JQC2donf7t" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2don$6K" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dmPz2m" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmPz2n" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPz2h" resolve="expectedSize" />
              </node>
              <node concept="3cmrfG" id="5JQC2dmPz2o" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmPz2p" role="37wK5m">
              <property role="Xl_RC" value="expectedSize(%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPz2q" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPz2h" resolve="expectedSize" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPz2s" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPz2r" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSize" />
            <node concept="10Oyi0" id="5JQC2dmPz2t" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPz2u" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPz2v" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz2w" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.size():int" resolve="size" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPz2x" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPz2y" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPz2z" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPz2r" resolve="actualSize" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPz2$" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPz2h" resolve="expectedSize" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz2A" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz2B" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz2C" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPz2D" role="37wK5m">
                  <property role="Xl_RC" value="has a size of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz2E" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz2h" resolve="expectedSize" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPz2F" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz2G" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz2r" resolve="actualSize" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz2H" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz2I" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz2J" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfE" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap does not have the given size. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz2K" role="jymVt">
      <property role="TrG5h" value="containsKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz2L" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz2M" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz2N" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz2O" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz2P" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz2Q" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPz2R" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPz2S" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz2T" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPz2U" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz2L" resolve="key" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz2W" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPz2Y" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPz2X" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="keyList" />
                <node concept="3uibUv" id="5JQC2dmPz2Z" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPz30" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2doleCb" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="37vLTw" id="5JQC2domqm8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz2L" resolve="key" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPz33" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQbbG" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="2OqwBi" id="5JQC2dmQbbH" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmQbbI" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmQbbJ" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmQbcB" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz2X" resolve="keyList" />
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPz3o" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPz3p" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPz3q" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPz3r" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPz3s" role="37wK5m">
                        <property role="Xl_RC" value="contains key" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz3t" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz2L" resolve="key" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPz3a" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPzfI" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Toq" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tor" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPz3b" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPz3c" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPz3d" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains key &lt;%s (%s)&gt;. However, it does contain keys &lt;%s&gt;." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPz3e" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz3f" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz2L" resolve="key" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQbcC" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmQbcD" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz2L" resolve="key" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQbcE" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2doqFVj" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                        <node concept="2OqwBi" id="5JQC2doqFVk" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2doqFVl" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2doqFVm" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2doqFVn" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz2X" resolve="keyList" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz3u" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz3v" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz3w" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfG" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap does not contain the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz3x" role="jymVt">
      <property role="TrG5h" value="doesNotContainKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz3y" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz3z" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz3$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz3_" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz3A" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPz3B" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPz3C" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPz3D" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
              <node concept="37vLTw" id="5JQC2dmPz3E" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz3y" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz3G" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz3H" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz3I" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz3J" role="37wK5m">
                  <property role="Xl_RC" value="does not contain key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz3K" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz3y" resolve="key" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz3L" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz3M" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz3N" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfK" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap contains the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz3O" role="jymVt">
      <property role="TrG5h" value="containsEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz3P" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz3Q" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz3R" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz3S" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz3T" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz3U" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz3V" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmPzfO" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tos" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tot" role="1PaTwD">
              <property role="3oM_SC" value="TODO(kak):" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tou" role="1PaTwD">
              <property role="3oM_SC" value="Can" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tov" role="1PaTwD">
              <property role="3oM_SC" value="we" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tow" role="1PaTwD">
              <property role="3oM_SC" value="share" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tox" role="1PaTwD">
              <property role="3oM_SC" value="any" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toy" role="1PaTwD">
              <property role="3oM_SC" value="of" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Toz" role="1PaTwD">
              <property role="3oM_SC" value="this" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To$" role="1PaTwD">
              <property role="3oM_SC" value="logic" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8To_" role="1PaTwD">
              <property role="3oM_SC" value="w/" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8ToA" role="1PaTwD">
              <property role="3oM_SC" value="MapSubject.containsEntry()?" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPz3W" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz3X" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPz3Y" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPz3Z" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz40" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsEntry(java.lang.Object,java.lang.Object):boolean" resolve="containsEntry" />
                <node concept="37vLTw" id="5JQC2dmPz41" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz42" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz44" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPz46" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPz45" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="entry" />
                <node concept="3uibUv" id="5JQC2dmPz47" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                  <node concept="3uibUv" id="5JQC2dmPz48" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPz49" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2doh5Sj" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                  <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
                  <node concept="37vLTw" id="5JQC2doh5Sk" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                  </node>
                  <node concept="37vLTw" id="5JQC2doh5Sl" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5JQC2dmPz4e" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPz4d" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="entryList" />
                <node concept="3uibUv" id="5JQC2dmPz4f" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3uibUv" id="5JQC2dmPz4g" role="11_B2D">
                    <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                    <node concept="3uibUv" id="5JQC2dmPz4h" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPz4i" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2doj_1$" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~ImmutableList" resolve="ImmutableList" />
                  <ref role="37wK5l" to="3o3z:~ImmutableList.of(java.lang.Object):com.google.common.collect.ImmutableList" resolve="of" />
                  <node concept="37vLTw" id="5JQC2doj_1_" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz45" resolve="entry" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPz4l" role="3cqZAp">
              <node concept="2YIFZM" id="5JQC2dmQbez" role="3clFbw">
                <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                <node concept="2OqwBi" id="5JQC2dmQbe$" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmQbe_" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmQbeA" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmQbfu" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz4d" resolve="entryList" />
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPz4E" role="9aQIa">
                <node concept="2OqwBi" id="5JQC2dmPz4F" role="3clFbw">
                  <node concept="1rXfSq" id="5JQC2dmPz4G" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPz4H" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                    <node concept="37vLTw" id="5JQC2dmPz4I" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPz4X" role="9aQIa">
                  <node concept="2OqwBi" id="5JQC2dmPz4Y" role="3clFbw">
                    <node concept="1rXfSq" id="5JQC2dmPz4Z" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPz50" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~Multimap.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                      <node concept="37vLTw" id="5JQC2dmPz51" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                      </node>
                    </node>
                  </node>
                  <node concept="9aQIb" id="5JQC2dmPz5_" role="9aQIa">
                    <node concept="3clFbS" id="5JQC2dmPz5A" role="9aQI4">
                      <node concept="3clFbF" id="5JQC2dmPz5B" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPz5C" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                          <node concept="Xl_RD" id="5JQC2dmPz5D" role="37wK5m">
                            <property role="Xl_RC" value="contains entry" />
                          </node>
                          <node concept="2YIFZM" id="5JQC2dogKa3" role="37wK5m">
                            <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                            <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
                            <node concept="37vLTw" id="5JQC2dogKa4" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dogKa5" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPz53" role="3clFbx">
                    <node concept="3cpWs8" id="5JQC2dmPz55" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPz54" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="keys" />
                        <node concept="3uibUv" id="5JQC2dmPz56" role="1tU5fm">
                          <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                          <node concept="3uibUv" id="5JQC2dmPz57" role="11_B2D">
                            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                          </node>
                        </node>
                        <node concept="2ShNRf" id="5JQC2dmPBdB" role="33vP2m">
                          <node concept="1pGfFk" id="5JQC2dmPBdC" role="2ShVmc">
                            <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                            <node concept="3uibUv" id="5JQC2dopA38" role="1pMfVU">
                              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="1DcWWT" id="5JQC2dmPz5a" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPz5r" role="1DdaDG">
                        <node concept="1rXfSq" id="5JQC2dmPz5s" role="2Oq$k0">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPz5t" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                        </node>
                      </node>
                      <node concept="3cpWsn" id="5JQC2dmPz5m" role="1Duv9x">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actualEntry" />
                        <node concept="3uibUv" id="5JQC2dmPz5o" role="1tU5fm">
                          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                          <node concept="3qTvmN" id="5JQC2dmPz5p" role="11_B2D" />
                          <node concept="3qTvmN" id="5JQC2dmPz5q" role="11_B2D" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPz5c" role="2LFqv$">
                        <node concept="3clFbJ" id="5JQC2dmPz5d" role="3cqZAp">
                          <node concept="2YIFZM" id="5JQC2dos01A" role="3clFbw">
                            <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                            <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                            <node concept="2OqwBi" id="5JQC2dos01B" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dos01C" role="2Oq$k0">
                                <ref role="3cqZAo" node="5JQC2dmPz5m" resolve="actualEntry" />
                              </node>
                              <node concept="liA8E" id="5JQC2dos01D" role="2OqNvi">
                                <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                              </node>
                            </node>
                            <node concept="37vLTw" id="5JQC2dos02u" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmPz5i" role="3clFbx">
                            <node concept="3clFbF" id="5JQC2dmPz5j" role="3cqZAp">
                              <node concept="2OqwBi" id="5JQC2dmPBdH" role="3clFbG">
                                <node concept="37vLTw" id="5JQC2dmPBdG" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPz54" resolve="keys" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPBdI" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                                  <node concept="2OqwBi" id="5JQC2dmPCGQ" role="37wK5m">
                                    <node concept="37vLTw" id="5JQC2dmPCGP" role="2Oq$k0">
                                      <ref role="3cqZAo" node="5JQC2dmPz5m" resolve="actualEntry" />
                                    </node>
                                    <node concept="liA8E" id="5JQC2dmPCGR" role="2OqNvi">
                                      <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPz5u" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPz5v" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPz5w" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s contains entry &lt;%s&gt;. However, the following keys are mapped to &lt;%s&gt;: %s" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPz5x" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPz5y" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz45" resolve="entry" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPz5z" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz3S" resolve="value" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPz5$" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz54" resolve="keys" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPz4K" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPz4L" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPz4M" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPz4N" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s contains entry &lt;%s&gt;. However, it has a mapping from &lt;%s&gt; to &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPz4O" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz4P" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz45" resolve="entry" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz4Q" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPz4R" role="37wK5m">
                        <node concept="2OqwBi" id="5JQC2dmPz4S" role="2Oq$k0">
                          <node concept="1rXfSq" id="5JQC2dmPz4T" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPz4U" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~Multimap.asMap():java.util.Map" resolve="asMap" />
                          </node>
                        </node>
                        <node concept="liA8E" id="5JQC2dmPz4V" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                          <node concept="37vLTw" id="5JQC2dmPz4W" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPz3P" resolve="key" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPz4s" role="3clFbx">
                <node concept="3SKdUt" id="5JQC2dmPzfQ" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8ToB" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8ToC" role="1PaTwD">
                      <property role="3oM_SC" value="itemsToCheck" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPz4t" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPz4u" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPz4v" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains entry &lt;%s (%s)&gt;. However, it does contain entries &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPz4w" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz4x" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz45" resolve="entry" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQbfv" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwek" resolve="objectToTypeName" />
                      <node concept="37vLTw" id="5JQC2dmQbfw" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz45" resolve="entry" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmQbfx" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                      <node concept="2YIFZM" id="5JQC2dojRez" role="37wK5m">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwd4" resolve="retainMatchingToString" />
                        <node concept="2OqwBi" id="5JQC2dojRe$" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2dojRe_" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="liA8E" id="5JQC2dojReA" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                          </node>
                        </node>
                        <node concept="37vLTw" id="5JQC2dojReB" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz4d" resolve="entryList" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz5H" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz5I" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz5J" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfM" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap does not contain the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz5K" role="jymVt">
      <property role="TrG5h" value="doesNotContainEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz5L" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz5M" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz5N" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz5O" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz5P" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz5Q" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz5R" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz5S" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPz5T" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPz5U" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPz5V" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.containsEntry(java.lang.Object,java.lang.Object):boolean" resolve="containsEntry" />
              <node concept="37vLTw" id="5JQC2dmPz5W" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz5L" resolve="key" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPz5X" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz5O" resolve="value" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz5Z" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz60" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz61" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz62" role="37wK5m">
                  <property role="Xl_RC" value="does not contain entry" />
                </node>
                <node concept="2YIFZM" id="5JQC2dou4A3" role="37wK5m">
                  <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                  <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
                  <node concept="37vLTw" id="5JQC2dou4A4" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz5L" resolve="key" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dou4A5" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz5O" resolve="value" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz66" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz67" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz68" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfS" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the multimap contains the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz69" role="jymVt">
      <property role="TrG5h" value="valuesForKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz6a" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz6b" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz6c" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz6d" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPz6e" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPBdL" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPBe3" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyTK" resolve="MultimapSubject.IterableValuesForKey" />
              <node concept="37vLTw" id="5JQC2dmPBe4" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
              </node>
              <node concept="Xjq3P" id="5JQC2dmPBe6" role="37wK5m" />
              <node concept="37vLTw" id="5JQC2dmPBe7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz6a" resolve="key" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz6j" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPz6k" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPz6l" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzfT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfU" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a context-aware {@link Subject} for making assertions about the values for the given" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzfV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfW" role="1dT_Ay">
            <property role="1dT_AB" value=" key within the {@link Multimap}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzfX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzfY" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzfZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzg0" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;This method performs no checks on its own and cannot cause test failures. Subsequent" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzg1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzg2" role="1dT_Ay">
            <property role="1dT_AB" value=" assertions must be chained onto this method call to test properties of the {@link Multimap}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz6m" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPz6n" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPz6o" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz6p" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz6q" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz6r" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz6s" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz6t" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2doleCW" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="1rXfSq" id="5JQC2doleCX" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2doleCY" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz6y" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPz6z" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPz6$" role="3clFbw">
                <node concept="1eOMI4" id="5JQC2dmPz6G" role="3uHU7B">
                  <node concept="1Wc70l" id="5JQC2dmPz6_" role="1eOMHV">
                    <node concept="2ZW3vV" id="5JQC2dmPz6C" role="3uHU7B">
                      <node concept="1rXfSq" id="5JQC2dmPz6A" role="2ZW6bz">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPz6B" role="2ZW6by">
                        <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                      </node>
                    </node>
                    <node concept="2ZW3vV" id="5JQC2dmPz6F" role="3uHU7w">
                      <node concept="37vLTw" id="5JQC2dmPz6D" role="2ZW6bz">
                        <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPz6E" role="2ZW6by">
                        <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1eOMI4" id="5JQC2dmPz6O" role="3uHU7w">
                  <node concept="1Wc70l" id="5JQC2dmPz6H" role="1eOMHV">
                    <node concept="2ZW3vV" id="5JQC2dmPz6K" role="3uHU7B">
                      <node concept="1rXfSq" id="5JQC2dmPz6I" role="2ZW6bz">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPz6J" role="2ZW6by">
                        <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
                      </node>
                    </node>
                    <node concept="2ZW3vV" id="5JQC2dmPz6N" role="3uHU7w">
                      <node concept="37vLTw" id="5JQC2dmPz6L" role="2ZW6bz">
                        <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPz6M" role="2ZW6by">
                        <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPz7k" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPz7l" role="9aQI4">
                  <node concept="3clFbJ" id="5JQC2dmPz7m" role="3cqZAp">
                    <node concept="2ZW3vV" id="5JQC2dmPz7p" role="3clFbw">
                      <node concept="1rXfSq" id="5JQC2dmPz7n" role="2ZW6bz">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPz7o" role="2ZW6by">
                        <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPz7A" role="9aQIa">
                      <node concept="2ZW3vV" id="5JQC2dmPz7D" role="3clFbw">
                        <node concept="1rXfSq" id="5JQC2dmPz7B" role="2ZW6bz">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="3uibUv" id="5JQC2dmPz7C" role="2ZW6by">
                          <ref role="3uigEE" to="3o3z:~SetMultimap" resolve="SetMultimap" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPz7F" role="3clFbx">
                        <node concept="3SKdUt" id="5JQC2dmPzg6" role="3cqZAp">
                          <node concept="1PaTwC" id="1fGNp1n8ToD" role="3ndbpf">
                            <node concept="3oM_SD" id="1fGNp1n8ToE" role="1PaTwD">
                              <property role="3oM_SC" value="If" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToF" role="1PaTwD">
                              <property role="3oM_SC" value="we're" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToG" role="1PaTwD">
                              <property role="3oM_SC" value="comparing" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToH" role="1PaTwD">
                              <property role="3oM_SC" value="SetMultimaps," />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToI" role="1PaTwD">
                              <property role="3oM_SC" value="don't" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToJ" role="1PaTwD">
                              <property role="3oM_SC" value="check" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToK" role="1PaTwD">
                              <property role="3oM_SC" value="for" />
                            </node>
                            <node concept="3oM_SD" id="1fGNp1n8ToL" role="1PaTwD">
                              <property role="3oM_SC" value="order" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmPz7G" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPz7H" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPz7U" resolve="containsExactlyEntriesIn" />
                            <node concept="10QFUN" id="5JQC2dmPz7I" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPz7J" role="10QFUP">
                                <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                              </node>
                              <node concept="3uibUv" id="5JQC2dmPz7K" role="10QFUM">
                                <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                                <node concept="3qTvmN" id="5JQC2dmPz7L" role="11_B2D" />
                                <node concept="3qTvmN" id="5JQC2dmPz7M" role="11_B2D" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs6" id="5JQC2dmPz7N" role="3cqZAp" />
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPz7r" role="3clFbx">
                      <node concept="3SKdUt" id="5JQC2dmPzg4" role="3cqZAp">
                        <node concept="1PaTwC" id="1fGNp1n8ToM" role="3ndbpf">
                          <node concept="3oM_SD" id="1fGNp1n8ToN" role="1PaTwD">
                            <property role="3oM_SC" value="If" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToO" role="1PaTwD">
                            <property role="3oM_SC" value="we're" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToP" role="1PaTwD">
                            <property role="3oM_SC" value="comparing" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToQ" role="1PaTwD">
                            <property role="3oM_SC" value="ListMultimaps," />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToR" role="1PaTwD">
                            <property role="3oM_SC" value="check" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToS" role="1PaTwD">
                            <property role="3oM_SC" value="for" />
                          </node>
                          <node concept="3oM_SD" id="1fGNp1n8ToT" role="1PaTwD">
                            <property role="3oM_SC" value="order" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="5JQC2dmPz7s" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmPz7t" role="3clFbG">
                          <node concept="1rXfSq" id="5JQC2dmPz7u" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPz7U" resolve="containsExactlyEntriesIn" />
                            <node concept="10QFUN" id="5JQC2dmPz7v" role="37wK5m">
                              <node concept="37vLTw" id="5JQC2dmPz7w" role="10QFUP">
                                <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                              </node>
                              <node concept="3uibUv" id="5JQC2dmPz7x" role="10QFUM">
                                <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                                <node concept="3qTvmN" id="5JQC2dmPz7y" role="11_B2D" />
                                <node concept="3qTvmN" id="5JQC2dmPz7z" role="11_B2D" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPz7$" role="2OqNvi">
                            <ref role="37wK5l" node="5JQC2dmPzCe" resolve="inOrder" />
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs6" id="5JQC2dmPz7_" role="3cqZAp" />
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmPz7O" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPz7P" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPz7Q" role="37wK5m">
                        <property role="Xl_RC" value="is equal to" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz7R" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPz6Q" role="3clFbx">
                <node concept="3cpWs8" id="5JQC2dmPz6S" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPz6R" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="mapType1" />
                    <node concept="3uibUv" id="5JQC2dmPz6T" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPz70" role="33vP2m">
                      <node concept="1eOMI4" id="5JQC2dmPz6X" role="3K4Cdx">
                        <node concept="2ZW3vV" id="5JQC2dmPz6W" role="1eOMHV">
                          <node concept="1rXfSq" id="5JQC2dmPz6U" role="2ZW6bz">
                            <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                          </node>
                          <node concept="3uibUv" id="5JQC2dmPz6V" role="2ZW6by">
                            <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                          </node>
                        </node>
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPz6Y" role="3K4E3e">
                        <property role="Xl_RC" value="ListMultimap" />
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPz6Z" role="3K4GZi">
                        <property role="Xl_RC" value="SetMultimap" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPz72" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPz71" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="mapType2" />
                    <node concept="3uibUv" id="5JQC2dmPz73" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPz7a" role="33vP2m">
                      <node concept="1eOMI4" id="5JQC2dmPz77" role="3K4Cdx">
                        <node concept="2ZW3vV" id="5JQC2dmPz76" role="1eOMHV">
                          <node concept="37vLTw" id="5JQC2dmPz74" role="2ZW6bz">
                            <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                          </node>
                          <node concept="3uibUv" id="5JQC2dmPz75" role="2ZW6by">
                            <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                          </node>
                        </node>
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPz78" role="3K4E3e">
                        <property role="Xl_RC" value="ListMultimap" />
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPz79" role="3K4GZi">
                        <property role="Xl_RC" value="SetMultimap" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPz7b" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPz7c" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPz7d" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s %s is equal to %s &lt;%s&gt;. A %s cannot equal a %s if either is non-empty." />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz7e" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz6R" resolve="mapType1" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPz7f" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz7g" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz71" resolve="mapType2" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz7h" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz6o" resolve="other" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz7i" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz6R" resolve="mapType1" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPz7j" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz71" resolve="mapType2" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz7S" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz7T" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPz7U" role="jymVt">
      <property role="TrG5h" value="containsExactlyEntriesIn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz7W" role="3clF46">
        <property role="TrG5h" value="expectedMultimap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPz7X" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPz7Y" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPz7Z" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz80" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPz81" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doiRUM" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2doiRUN" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
            </node>
            <node concept="Xl_RD" id="5JQC2doiRUO" role="37wK5m">
              <property role="Xl_RC" value="expectedMultimap" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPz86" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPz85" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="missing" />
            <node concept="3uibUv" id="5JQC2dmPz87" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
              <node concept="3qTvmN" id="5JQC2dmPz88" role="11_B2D" />
              <node concept="3qTvmN" id="5JQC2dmPz89" role="11_B2D" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPz8a" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPzbx" resolve="difference" />
              <node concept="37vLTw" id="5JQC2dmPz8b" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
              </node>
              <node concept="1rXfSq" id="5JQC2dmPz8c" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPz8e" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPz8d" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="extra" />
            <node concept="3uibUv" id="5JQC2dmPz8f" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
              <node concept="3qTvmN" id="5JQC2dmPz8g" role="11_B2D" />
              <node concept="3qTvmN" id="5JQC2dmPz8h" role="11_B2D" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPz8i" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPzbx" resolve="difference" />
              <node concept="1rXfSq" id="5JQC2dmPz8j" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPz8k" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPzgk" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8ToU" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8ToV" role="1PaTwD">
              <property role="3oM_SC" value="TODO(kak):" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8ToW" role="1PaTwD">
              <property role="3oM_SC" value="Possible" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8ToX" role="1PaTwD">
              <property role="3oM_SC" value="enhancement:" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8ToY" role="1PaTwD">
              <property role="3oM_SC" value="Include" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8ToZ" role="1PaTwD">
              <property role="3oM_SC" value="&quot;[1" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp0" role="1PaTwD">
              <property role="3oM_SC" value="copy]&quot;" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp1" role="1PaTwD">
              <property role="3oM_SC" value="if" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp2" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp3" role="1PaTwD">
              <property role="3oM_SC" value="element" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp4" role="1PaTwD">
              <property role="3oM_SC" value="does" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp5" role="1PaTwD">
              <property role="3oM_SC" value="appear" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp6" role="1PaTwD">
              <property role="3oM_SC" value="in" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmPzgm" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tp7" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tp8" role="1PaTwD">
              <property role="3oM_SC" value="the" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tp9" role="1PaTwD">
              <property role="3oM_SC" value="subject" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpa" role="1PaTwD">
              <property role="3oM_SC" value="but" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpb" role="1PaTwD">
              <property role="3oM_SC" value="not" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpc" role="1PaTwD">
              <property role="3oM_SC" value="enough" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpd" role="1PaTwD">
              <property role="3oM_SC" value="times." />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpe" role="1PaTwD">
              <property role="3oM_SC" value="Similarly" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpf" role="1PaTwD">
              <property role="3oM_SC" value="for" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpg" role="1PaTwD">
              <property role="3oM_SC" value="unexpected" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tph" role="1PaTwD">
              <property role="3oM_SC" value="extra" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tpi" role="1PaTwD">
              <property role="3oM_SC" value="items." />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPz8l" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz8m" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPBeb" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmPBea" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPz85" resolve="missing" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBec" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPz9e" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPz9f" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPBef" role="3fr31v">
                <node concept="37vLTw" id="5JQC2dmPBee" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBeg" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multimap.isEmpty():boolean" resolve="isEmpty" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPz9i" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPz9j" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPz9k" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                  <node concept="Xl_RD" id="5JQC2dmPz9l" role="37wK5m">
                    <property role="Xl_RC" value="contains exactly" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPz9m" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                    <node concept="37vLTw" id="5JQC2dmPz9n" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPz9o" role="37wK5m">
                    <property role="Xl_RC" value="has unexpected items" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPz9p" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPzcS" resolve="countDuplicatesMultimap" />
                    <node concept="1rXfSq" id="5JQC2dmPz9q" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                      <node concept="37vLTw" id="5JQC2dmPz9r" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmPz9s" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPz9t" role="3cqZAk">
                  <ref role="3cqZAo" node="5JQC2dmPz1q" resolve="ALREADY_FAILED" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz8p" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPz8q" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPz8r" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPBej" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPBei" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBek" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="9aQIb" id="5JQC2dmPz91" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPz92" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPz93" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPz94" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                      <node concept="Xl_RD" id="5JQC2dmPz95" role="37wK5m">
                        <property role="Xl_RC" value="contains exactly" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPz96" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                        <node concept="37vLTw" id="5JQC2dmPz97" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
                        </node>
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPz98" role="37wK5m">
                        <property role="Xl_RC" value="is missing" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPz99" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPzcS" resolve="countDuplicatesMultimap" />
                        <node concept="1rXfSq" id="5JQC2dmPz9a" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                          <node concept="37vLTw" id="5JQC2dmPz9b" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPz85" resolve="missing" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3cpWs6" id="5JQC2dmPz9c" role="3cqZAp">
                    <node concept="37vLTw" id="5JQC2dmPz9d" role="3cqZAk">
                      <ref role="3cqZAo" node="5JQC2dmPz1q" resolve="ALREADY_FAILED" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPz8u" role="3clFbx">
                <node concept="3cpWs8" id="5JQC2dmPz8w" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPz8v" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="addTypeInfo" />
                    <node concept="10P_77" id="5JQC2dmPz8x" role="1tU5fm" />
                    <node concept="2YIFZM" id="5JQC2dmQbhq" role="33vP2m">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwe3" resolve="hasMatchingToStringPair" />
                      <node concept="2OqwBi" id="5JQC2dmQbhr" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQbhs" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPz85" resolve="missing" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmQbht" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                        </node>
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmQbib" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmQbic" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmQbid" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPzgo" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tpj" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tpk" role="1PaTwD">
                      <property role="3oM_SC" value="Note:" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpl" role="1PaTwD">
                      <property role="3oM_SC" value="The" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpm" role="1PaTwD">
                      <property role="3oM_SC" value="usage" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpn" role="1PaTwD">
                      <property role="3oM_SC" value="of" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpo" role="1PaTwD">
                      <property role="3oM_SC" value="countDuplicatesAndAddTypeInfo()" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpp" role="1PaTwD">
                      <property role="3oM_SC" value="below" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpq" role="1PaTwD">
                      <property role="3oM_SC" value="causes" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpr" role="1PaTwD">
                      <property role="3oM_SC" value="entries" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tps" role="1PaTwD">
                      <property role="3oM_SC" value="no" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpt" role="1PaTwD">
                      <property role="3oM_SC" value="longer" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpu" role="1PaTwD">
                      <property role="3oM_SC" value="to" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPzgq" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8Tpv" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8Tpw" role="1PaTwD">
                      <property role="3oM_SC" value="be" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpx" role="1PaTwD">
                      <property role="3oM_SC" value="grouped" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpy" role="1PaTwD">
                      <property role="3oM_SC" value="by" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tpz" role="1PaTwD">
                      <property role="3oM_SC" value="key" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tp$" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8Tp_" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpA" role="1PaTwD">
                      <property role="3oM_SC" value="'missing'" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpB" role="1PaTwD">
                      <property role="3oM_SC" value="and" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpC" role="1PaTwD">
                      <property role="3oM_SC" value="'unexpected" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpD" role="1PaTwD">
                      <property role="3oM_SC" value="items'" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpE" role="1PaTwD">
                      <property role="3oM_SC" value="parts" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpF" role="1PaTwD">
                      <property role="3oM_SC" value="of" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpG" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpH" role="1PaTwD">
                      <property role="3oM_SC" value="message" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpI" role="1PaTwD">
                      <property role="3oM_SC" value="(we" />
                    </node>
                  </node>
                </node>
                <node concept="3SKdUt" id="5JQC2dmPzgs" role="3cqZAp">
                  <node concept="1PaTwC" id="1fGNp1n8TpJ" role="3ndbpf">
                    <node concept="3oM_SD" id="1fGNp1n8TpK" role="1PaTwD">
                      <property role="3oM_SC" value="still" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpL" role="1PaTwD">
                      <property role="3oM_SC" value="show" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpM" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpN" role="1PaTwD">
                      <property role="3oM_SC" value="actual" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpO" role="1PaTwD">
                      <property role="3oM_SC" value="and" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpP" role="1PaTwD">
                      <property role="3oM_SC" value="expected" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpQ" role="1PaTwD">
                      <property role="3oM_SC" value="multimaps" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpR" role="1PaTwD">
                      <property role="3oM_SC" value="in" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpS" role="1PaTwD">
                      <property role="3oM_SC" value="the" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpT" role="1PaTwD">
                      <property role="3oM_SC" value="standard" />
                    </node>
                    <node concept="3oM_SD" id="1fGNp1n8TpU" role="1PaTwD">
                      <property role="3oM_SC" value="format)." />
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPz8_" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPz8A" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPz8B" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains exactly &lt;%s&gt;. It is missing &lt;%s&gt; and has unexpected items &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPz8C" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPz8D" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                      <node concept="37vLTw" id="5JQC2dmPz8E" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
                      </node>
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPz8O" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPz8F" role="3K4Cdx">
                        <ref role="3cqZAo" node="5JQC2dmPz8v" resolve="addTypeInfo" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQbiV" role="3K4E3e">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                        <node concept="2OqwBi" id="5JQC2dmQbiW" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2dmQbiX" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                            <node concept="37vLTw" id="5JQC2dmQbiY" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPz85" resolve="missing" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmQbiZ" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                          </node>
                        </node>
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPz8L" role="3K4GZi">
                        <ref role="37wK5l" node="5JQC2dmPzcS" resolve="countDuplicatesMultimap" />
                        <node concept="1rXfSq" id="5JQC2dmPz8M" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                          <node concept="37vLTw" id="5JQC2dmPz8N" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPz85" resolve="missing" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPz8Y" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPz8P" role="3K4Cdx">
                        <ref role="3cqZAo" node="5JQC2dmPz8v" resolve="addTypeInfo" />
                      </node>
                      <node concept="2YIFZM" id="5JQC2dmQblh" role="3K4E3e">
                        <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="37wK5l" node="5JQC2dmPwc1" resolve="countDuplicatesAndAddTypeInfo" />
                        <node concept="2OqwBi" id="5JQC2dmQbli" role="37wK5m">
                          <node concept="1rXfSq" id="5JQC2dmQblj" role="2Oq$k0">
                            <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                            <node concept="37vLTw" id="5JQC2dmQblk" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmQbll" role="2OqNvi">
                            <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                          </node>
                        </node>
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPz8V" role="3K4GZi">
                        <ref role="37wK5l" node="5JQC2dmPzcS" resolve="countDuplicatesMultimap" />
                        <node concept="1rXfSq" id="5JQC2dmPz8W" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPzdF" resolve="annotateEmptyStringsMultimap" />
                          <node concept="37vLTw" id="5JQC2dmPz8X" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPz8d" resolve="extra" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmPz8Z" role="3cqZAp">
                  <node concept="37vLTw" id="5JQC2dmPz90" role="3cqZAk">
                    <ref role="3cqZAo" node="5JQC2dmPz1q" resolve="ALREADY_FAILED" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPz9u" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPBet" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPBff" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyVq" resolve="MultimapSubject.MultimapInOrder" />
              <node concept="37vLTw" id="5JQC2dmPBfg" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz7W" resolve="expectedMultimap" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz9x" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPz9y" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPz9z" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzg7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzg8" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the {@link Multimap} does not contain precisely the same entries as the argument" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzg9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzga" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Multimap}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgc" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzge" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;A subsequent call to {@link Ordered#inOrder} may be made if the caller wishes to verify that" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgg" role="1dT_Ay">
            <property role="1dT_AB" value=" the two multimaps iterate fully in the same order. That is, their key sets iterate in the same" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgi" role="1dT_Ay">
            <property role="1dT_AB" value=" order, and the value collections for each key iterate in the same order." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz9$" role="jymVt">
      <property role="TrG5h" value="containsExactly" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz9A" role="3clF46">
        <property role="TrG5h" value="k0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz9B" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz9C" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz9D" role="3clF46">
        <property role="TrG5h" value="v0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz9E" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz9F" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz9G" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPz9I" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPz9H" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz9J" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPz9K" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPz9L" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPz7U" resolve="containsExactlyEntriesIn" />
            <node concept="1rXfSq" id="5JQC2dmPz9M" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPz9T" resolve="accumulateMultimap" />
              <node concept="37vLTw" id="5JQC2dmPz9N" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz9A" resolve="k0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPz9O" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz9D" resolve="v0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPz9P" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz9G" resolve="rest" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz9Q" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPz9R" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPz9S" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzgt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgu" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the multimap does not contain exactly the given set of key/value pairs." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgw" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgy" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; the use of varargs means that we cannot guarantee an equal number of" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzg$" role="1dT_Ay">
            <property role="1dT_AB" value=" key/value pairs at compile time. Please make sure you provide varargs in key/value pairs!" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPz9T" role="jymVt">
      <property role="TrG5h" value="accumulateMultimap" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz9U" role="3clF46">
        <property role="TrG5h" value="k0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz9V" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz9W" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz9X" role="3clF46">
        <property role="TrG5h" value="v0" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz9Y" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz9Z" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPza0" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPza2" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPza1" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPza3" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPza4" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dotjM4" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="3clFbC" id="5JQC2dotjM5" role="37wK5m">
              <node concept="2dk9JS" id="5JQC2dotjM6" role="3uHU7B">
                <node concept="2OqwBi" id="5JQC2dotjM7" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dotjM8" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPza0" resolve="rest" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dotjM9" role="2OqNvi" />
                </node>
                <node concept="3cmrfG" id="5JQC2dotjMa" role="3uHU7w">
                  <property role="3cmrfH" value="2" />
                </node>
              </node>
              <node concept="3cmrfG" id="5JQC2dotjMb" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dotjMc" role="37wK5m">
              <property role="Xl_RC" value="There must be an equal number of key/value pairs (i.e., the number of key/value parameters (%s) must be even)." />
            </node>
            <node concept="3cpWs3" id="5JQC2dotjMd" role="37wK5m">
              <node concept="2OqwBi" id="5JQC2dotjMe" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dotjMf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPza0" resolve="rest" />
                </node>
                <node concept="1Rwk04" id="5JQC2dotjMg" role="2OqNvi" />
              </node>
              <node concept="3cmrfG" id="5JQC2dotjMh" role="3uHU7w">
                <property role="3cmrfH" value="2" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzag" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzaf" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedMultimap" />
            <node concept="3uibUv" id="5JQC2dmPzah" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~LinkedListMultimap" resolve="LinkedListMultimap" />
              <node concept="3uibUv" id="5JQC2dmPzai" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPzaj" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dolteb" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~LinkedListMultimap" resolve="LinkedListMultimap" />
              <ref role="37wK5l" to="3o3z:~LinkedListMultimap.create():com.google.common.collect.LinkedListMultimap" resolve="create" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzal" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBfs" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPBfr" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzaf" resolve="expectedMultimap" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBft" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~LinkedListMultimap.put(java.lang.Object,java.lang.Object):boolean" resolve="put" />
              <node concept="37vLTw" id="5JQC2dmPBfu" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz9U" resolve="k0" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPBfv" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz9X" resolve="v0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5JQC2dmPzap" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzaq" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmPzas" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPzat" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5JQC2dmPzau" role="1Dwp0S">
            <node concept="37vLTw" id="5JQC2dmPzav" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPzaq" resolve="i" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBfy" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPBfx" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPza0" resolve="rest" />
              </node>
              <node concept="1Rwk04" id="5JQC2dmQb$V" role="2OqNvi" />
            </node>
          </node>
          <node concept="d57v9" id="5JQC2dmPzay" role="1Dwrff">
            <node concept="37vLTw" id="5JQC2dmPzaz" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmPzaq" resolve="i" />
            </node>
            <node concept="3cmrfG" id="5JQC2dmPza$" role="37vLTx">
              <property role="3cmrfH" value="2" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzaA" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPzaB" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBfA" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBf_" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzaf" resolve="expectedMultimap" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBfB" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~LinkedListMultimap.put(java.lang.Object,java.lang.Object):boolean" resolve="put" />
                  <node concept="AH0OO" id="5JQC2dmPBfC" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPBfD" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmPza0" resolve="rest" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPBfE" role="AHEQo">
                      <ref role="3cqZAo" node="5JQC2dmPzaq" resolve="i" />
                    </node>
                  </node>
                  <node concept="AH0OO" id="5JQC2dmPBfF" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPBfG" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmPza0" resolve="rest" />
                    </node>
                    <node concept="3cpWs3" id="5JQC2dmPBfH" role="AHEQo">
                      <node concept="37vLTw" id="5JQC2dmPBfI" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPzaq" resolve="i" />
                      </node>
                      <node concept="3cmrfG" id="5JQC2dmPBfJ" role="3uHU7w">
                        <property role="3cmrfH" value="1" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzaL" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzaM" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPzaf" resolve="expectedMultimap" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzaN" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzaO" role="3clF45">
        <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
        <node concept="3uibUv" id="5JQC2dmPzaP" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzaQ" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzaR" role="jymVt">
      <property role="TrG5h" value="containsExactly" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzaS" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzaU" role="3clF46">
        <property role="TrG5h" value="expectedMultimap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzaV" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPzaW" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzaX" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzaY" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzaZ" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPzb0" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPz7U" resolve="containsExactlyEntriesIn" />
            <node concept="37vLTw" id="5JQC2dmPzb1" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzaU" resolve="expectedMultimap" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzb2" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzb3" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzb4" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzg_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgA" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #containsExactlyEntriesIn} instead. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPyT$" role="jymVt">
      <property role="TrG5h" value="IterableValuesForKey" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPyT_" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyTA" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
      <node concept="312cEg" id="5JQC2dmPyTB" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="true" />
        <node concept="2AHcQZ" id="5JQC2dmPyTD" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPyTE" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyTF" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmPyTG" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="stringRepresentation" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyTI" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyTJ" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPyTK" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPyTL" role="3clF45" />
        <node concept="2AHcQZ" id="5JQC2dmPyTM" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
          <node concept="2B6LJw" id="5JQC2dmPyTN" role="2B76xF">
            <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
            <node concept="2BsdOp" id="5JQC2dmPyTP" role="2B70Vg">
              <node concept="Xl_RD" id="5JQC2dmPyTO" role="2BsfMF">
                <property role="Xl_RC" value="unchecked" />
              </node>
            </node>
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyTQ" role="3clF46">
          <property role="TrG5h" value="failureStrategy" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyTR" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyTS" role="3clF46">
          <property role="TrG5h" value="multimapSubject" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyTT" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyTU" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyTV" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPyTW" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyTX" role="3clF47">
          <node concept="XkiVB" id="5JQC2dmPBfK" role="3cqZAp">
            <ref role="37wK5l" node="5JQC2dmPykk" resolve="IterableSubject" />
            <node concept="37vLTw" id="5JQC2dmPBfL" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyTQ" resolve="failureStrategy" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBfM" role="37wK5m">
              <node concept="1eOMI4" id="5JQC2dmPBfN" role="2Oq$k0">
                <node concept="10QFUN" id="5JQC2dmPBfO" role="1eOMHV">
                  <node concept="2OqwBi" id="5JQC2dmPCJg" role="10QFUP">
                    <node concept="37vLTw" id="5JQC2dmPCJf" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyTS" resolve="multimapSubject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCJh" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPBfQ" role="10QFUM">
                    <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                    <node concept="3uibUv" id="5JQC2dmPBfR" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPBfS" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPBfT" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.get(java.lang.Object):java.util.Collection" resolve="get" />
                <node concept="37vLTw" id="5JQC2dmPBfU" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyTU" resolve="key" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyTY" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPyTZ" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPyU0" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPyU1" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPyU2" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPyTB" resolve="key" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPyU3" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPyTU" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyU4" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPyU5" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPyU6" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPyU7" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPyU8" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPyTG" resolve="stringRepresentation" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmPBho" role="37vLTx">
                <node concept="37vLTw" id="5JQC2dmPBhn" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyTS" resolve="multimapSubject" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBhp" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyUl" role="jymVt">
        <property role="TrG5h" value="actualCustomStringRepresentation" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyUm" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPyUn" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPyUo" role="3cqZAp">
            <node concept="3cpWs3" id="5JQC2dmPyUp" role="3cqZAk">
              <node concept="3cpWs3" id="5JQC2dmPyUq" role="3uHU7B">
                <node concept="3cpWs3" id="5JQC2dmPyUr" role="3uHU7B">
                  <node concept="3cpWs3" id="5JQC2dmPyUs" role="3uHU7B">
                    <node concept="3cpWs3" id="5JQC2dmPyUt" role="3uHU7B">
                      <node concept="Xl_RD" id="5JQC2dmPyUu" role="3uHU7B">
                        <property role="Xl_RC" value="Values for key &lt;" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPyUv" role="3uHU7w">
                        <ref role="3cqZAo" node="5JQC2dmPyTB" resolve="key" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPyUw" role="3uHU7w">
                      <property role="Xl_RC" value="&gt; (&lt;" />
                    </node>
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyUx" role="3uHU7w">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmPyUy" role="3uHU7w">
                  <property role="Xl_RC" value="&gt;) in " />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPyUz" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPyTG" resolve="stringRepresentation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tmbuc" id="5JQC2dmPyU$" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPyU_" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPyUA" role="jymVt">
      <property role="TrG5h" value="IterableEntries" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPyUB" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyUC" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
      <node concept="312cEg" id="5JQC2dmPyUD" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="stringRepresentation" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyUF" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyUG" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPyUH" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPyUI" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPyUJ" role="3clF46">
          <property role="TrG5h" value="failureStrategy" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyUK" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyUL" role="3clF46">
          <property role="TrG5h" value="multimapSubject" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyUM" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPyTy" resolve="MultimapSubject" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyUN" role="3clF47">
          <node concept="XkiVB" id="5JQC2dmPBhq" role="3cqZAp">
            <ref role="37wK5l" node="5JQC2dmPykk" resolve="IterableSubject" />
            <node concept="37vLTw" id="5JQC2dmPBhr" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPyUJ" resolve="failureStrategy" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBhs" role="37wK5m">
              <node concept="2OqwBi" id="5JQC2dmPC$3" role="2Oq$k0">
                <node concept="37vLTw" id="5JQC2dmPC$2" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyUL" resolve="multimapSubject" />
                </node>
                <node concept="liA8E" id="5JQC2dmPC$4" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPBhu" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
              </node>
            </node>
          </node>
          <node concept="3SKdUt" id="5JQC2dmPzgC" role="3cqZAp">
            <node concept="1PaTwC" id="1fGNp1n8TpV" role="3ndbpf">
              <node concept="3oM_SD" id="1fGNp1n8TpW" role="1PaTwD">
                <property role="3oM_SC" value="We" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8TpX" role="1PaTwD">
                <property role="3oM_SC" value="want" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8TpY" role="1PaTwD">
                <property role="3oM_SC" value="to" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8TpZ" role="1PaTwD">
                <property role="3oM_SC" value="use" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq0" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq1" role="1PaTwD">
                <property role="3oM_SC" value="multimap's" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq2" role="1PaTwD">
                <property role="3oM_SC" value="toString()" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq3" role="1PaTwD">
                <property role="3oM_SC" value="instead" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq4" role="1PaTwD">
                <property role="3oM_SC" value="of" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq5" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq6" role="1PaTwD">
                <property role="3oM_SC" value="iterable" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq7" role="1PaTwD">
                <property role="3oM_SC" value="of" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq8" role="1PaTwD">
                <property role="3oM_SC" value="entries'" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tq9" role="1PaTwD">
                <property role="3oM_SC" value="toString():" />
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyUO" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPyUP" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPyUQ" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPyUR" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPyUS" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPyUD" resolve="stringRepresentation" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmPyUT" role="37vLTx">
                <node concept="2OqwBi" id="5JQC2dmPBim" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPBil" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyUL" resolve="multimapSubject" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBin" role="2OqNvi">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPyUV" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Object.toString():java.lang.String" resolve="toString" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3SKdUt" id="5JQC2dmPzgE" role="3cqZAp">
            <node concept="1PaTwC" id="1fGNp1n8Tqa" role="3ndbpf">
              <node concept="3oM_SD" id="1fGNp1n8Tqb" role="1PaTwD">
                <property role="3oM_SC" value="If" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqc" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqd" role="1PaTwD">
                <property role="3oM_SC" value="multimap" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqe" role="1PaTwD">
                <property role="3oM_SC" value="subject" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqf" role="1PaTwD">
                <property role="3oM_SC" value="is" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqg" role="1PaTwD">
                <property role="3oM_SC" value="named()" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqh" role="1PaTwD">
                <property role="3oM_SC" value="then" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqi" role="1PaTwD">
                <property role="3oM_SC" value="this" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqj" role="1PaTwD">
                <property role="3oM_SC" value="should" />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tqk" role="1PaTwD">
                <property role="3oM_SC" value="be," />
              </node>
              <node concept="3oM_SD" id="1fGNp1n8Tql" role="1PaTwD">
                <property role="3oM_SC" value="too:" />
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyUW" role="3cqZAp">
            <node concept="3y3z36" id="5JQC2dmPyUX" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPBir" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmPBiq" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPyUL" resolve="multimapSubject" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBis" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
              <node concept="10Nm6u" id="5JQC2dmPyUZ" role="3uHU7w" />
            </node>
            <node concept="3clFbS" id="5JQC2dmPyV1" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPyV2" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyV3" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                  <node concept="2OqwBi" id="5JQC2dmPBiw" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPBiv" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyUL" resolve="multimapSubject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBix" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyVa" role="jymVt">
        <property role="TrG5h" value="actualCustomStringRepresentation" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyVb" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPyVc" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPyVd" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPyVe" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmPyUD" resolve="stringRepresentation" />
            </node>
          </node>
        </node>
        <node concept="3Tmbuc" id="5JQC2dmPyVf" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPyVg" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPyVh" role="jymVt">
      <property role="TrG5h" value="MultimapInOrder" />
      <property role="2bfB8j" value="true" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPyVi" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPyVj" role="EKbjA">
        <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
      </node>
      <node concept="312cEg" id="5JQC2dmPyVk" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="expectedMultimap" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyVm" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPyVn" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPyVo" role="11_B2D" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyVp" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPyVq" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPyVr" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPyVs" role="3clF46">
          <property role="TrG5h" value="expectedMultimap" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyVt" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
            <node concept="3qTvmN" id="5JQC2dmPyVu" role="11_B2D" />
            <node concept="3qTvmN" id="5JQC2dmPyVv" role="11_B2D" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyVw" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyVx" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPyVy" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPyVz" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPyV$" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPyV_" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPyVA" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmPyVs" resolve="expectedMultimap" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyVB" role="jymVt">
        <property role="TrG5h" value="inOrder" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPyVC" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPyVD" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPyVF" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyVE" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="keysInOrder" />
              <node concept="10P_77" id="5JQC2dmPyVG" role="1tU5fm" />
              <node concept="2OqwBi" id="5JQC2dmPyVH" role="33vP2m">
                <node concept="2YIFZM" id="5JQC2dobPHP" role="2Oq$k0">
                  <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                  <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                  <node concept="2OqwBi" id="5JQC2dobPHQ" role="37wK5m">
                    <node concept="1rXfSq" id="5JQC2dobPHR" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dobPHS" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPyVM" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~AbstractList.equals(java.lang.Object):boolean" resolve="equals" />
                  <node concept="2YIFZM" id="5JQC2dosyvQ" role="37wK5m">
                    <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                    <node concept="2OqwBi" id="5JQC2douN7y" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2douN7x" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                      </node>
                      <node concept="liA8E" id="5JQC2douN7z" role="2OqNvi">
                        <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPyVQ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyVP" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="keysWithValuesOutOfOrder" />
              <node concept="3uibUv" id="5JQC2dmPyVR" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~LinkedHashSet" resolve="LinkedHashSet" />
                <node concept="3uibUv" id="5JQC2dmPyVS" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dogx_H" role="33vP2m">
                <ref role="1Pybhc" to="3o3z:~Sets" resolve="Sets" />
                <ref role="37wK5l" to="3o3z:~Sets.newLinkedHashSet():java.util.LinkedHashSet" resolve="newLinkedHashSet" />
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmPyVV" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPyVU" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="allKeys" />
              <node concept="3uibUv" id="5JQC2dmPyVW" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~LinkedHashSet" resolve="LinkedHashSet" />
                <node concept="3uibUv" id="5JQC2dmPyVX" role="11_B2D">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dokqJy" role="33vP2m">
                <ref role="1Pybhc" to="3o3z:~Sets" resolve="Sets" />
                <ref role="37wK5l" to="3o3z:~Sets.newLinkedHashSet():java.util.LinkedHashSet" resolve="newLinkedHashSet" />
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyVZ" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPBiI" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmPBiH" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyVU" resolve="allKeys" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBiJ" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~AbstractCollection.addAll(java.util.Collection):boolean" resolve="addAll" />
                <node concept="2OqwBi" id="5JQC2dmPBiK" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmPBiL" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBiM" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmPyW4" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPBjU" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmPBjT" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPyVU" resolve="allKeys" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBjV" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~AbstractCollection.addAll(java.util.Collection):boolean" resolve="addAll" />
                <node concept="2OqwBi" id="5JQC2dmPCHI" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPCHH" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCHJ" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmPyW7" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmPyWA" role="1DdaDG">
              <ref role="3cqZAo" node="5JQC2dmPyVU" resolve="allKeys" />
            </node>
            <node concept="3cpWsn" id="5JQC2dmPyWz" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="key" />
              <node concept="3uibUv" id="5JQC2dmPyW_" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyW9" role="2LFqv$">
              <node concept="3cpWs8" id="5JQC2dmPyWb" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyWa" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualVals" />
                  <node concept="3uibUv" id="5JQC2dmPyWc" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~List" resolve="List" />
                    <node concept="3qTvmN" id="5JQC2dmPyWd" role="11_B2D" />
                  </node>
                  <node concept="2YIFZM" id="5JQC2dop8e0" role="33vP2m">
                    <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                    <node concept="1rXfSq" id="5JQC2dop8e1" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzb5" resolve="get" />
                      <node concept="1rXfSq" id="5JQC2dop8e2" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dop8e3" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyWz" resolve="key" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPyWj" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyWi" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="expectedVals" />
                  <node concept="3uibUv" id="5JQC2dmPyWk" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~List" resolve="List" />
                    <node concept="3qTvmN" id="5JQC2dmPyWl" role="11_B2D" />
                  </node>
                  <node concept="2YIFZM" id="5JQC2dokLxQ" role="33vP2m">
                    <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                    <node concept="1rXfSq" id="5JQC2dokLxR" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzb5" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dokLxS" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dokLxT" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyWz" resolve="key" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPyWq" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPyWr" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmPBk4" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmPBk3" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyWa" resolve="actualVals" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBk5" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.equals(java.lang.Object):boolean" resolve="equals" />
                      <node concept="37vLTw" id="5JQC2dmPBk6" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyWi" resolve="expectedVals" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyWv" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPyWw" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmPBka" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmPBk9" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyVP" resolve="keysWithValuesOutOfOrder" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBkb" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~HashSet.add(java.lang.Object):boolean" resolve="add" />
                        <node concept="37vLTw" id="5JQC2dmPBkc" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyWz" resolve="key" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPyWB" role="3cqZAp">
            <node concept="3fqX7Q" id="5JQC2dmPyWC" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPyWD" role="3fr31v">
                <ref role="3cqZAo" node="5JQC2dmPyVE" resolve="keysInOrder" />
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPyWY" role="9aQIa">
              <node concept="3fqX7Q" id="5JQC2dmPyWZ" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPBkg" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPBkf" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPyVP" resolve="keysWithValuesOutOfOrder" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBkh" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~HashSet.isEmpty():boolean" resolve="isEmpty" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPyX2" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPyX3" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPyX4" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPyX5" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s contains exactly &lt;%s&gt; in order. The values for keys &lt;%s&gt; are not in order" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPyX6" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyX7" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPyX8" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPyVP" resolve="keysWithValuesOutOfOrder" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyWF" role="3clFbx">
              <node concept="3clFbJ" id="5JQC2dmPyWG" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPyWH" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmPBkl" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmPBkk" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyVP" resolve="keysWithValuesOutOfOrder" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBkm" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~HashSet.isEmpty():boolean" resolve="isEmpty" />
                    </node>
                  </node>
                </node>
                <node concept="9aQIb" id="5JQC2dmPyWR" role="9aQIa">
                  <node concept="3clFbS" id="5JQC2dmPyWS" role="9aQI4">
                    <node concept="3clFbF" id="5JQC2dmPyWT" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPyWU" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPyWV" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s contains exactly &lt;%s&gt; in order. The keys are not in order" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPyWW" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyWX" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyWK" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPyWL" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPyWM" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPyWN" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s contains exactly &lt;%s&gt; in order. The keys are not in order, and the values for keys &lt;%s&gt; are not in order either" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPyWO" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPyWP" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyVk" resolve="expectedMultimap" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPyWQ" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyVP" resolve="keysWithValuesOutOfOrder" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyX9" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyXa" role="3clF45" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzb5" role="jymVt">
      <property role="TrG5h" value="get" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPzb6" role="16eVyc">
        <property role="TrG5h" value="K" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPzb7" role="16eVyc">
        <property role="TrG5h" value="V" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzb8" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzb9" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="16syzq" id="5JQC2dmPzba" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzb6" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzbb" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzb7" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzbc" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzbd" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzbe" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzbf" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzbg" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBkp" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPBko" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzb8" resolve="multimap" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBkq" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
              <node concept="37vLTw" id="5JQC2dmPBkr" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzbc" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPzbq" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPzbr" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPzbs" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2dmPBkt" role="3cqZAk">
                  <ref role="1Pybhc" to="33ny:~Collections" resolve="Collections" />
                  <ref role="37wK5l" to="33ny:~Collections.emptyList():java.util.List" resolve="emptyList" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzbk" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPzbl" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPzbm" role="3cqZAk">
                <node concept="2OqwBi" id="5JQC2dmPBkw" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPBkv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPzb8" resolve="multimap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBkx" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.asMap():java.util.Map" resolve="asMap" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPzbo" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                  <node concept="37vLTw" id="5JQC2dmPzbp" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzbc" resolve="key" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzbu" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzbv" role="3clF45">
        <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
        <node concept="16syzq" id="5JQC2dmPzbw" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzb7" resolve="V" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzbx" role="jymVt">
      <property role="TrG5h" value="difference" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzby" role="3clF46">
        <property role="TrG5h" value="minuend" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzbz" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPzb$" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzb_" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzbA" role="3clF46">
        <property role="TrG5h" value="subtrahend" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzbB" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPzbC" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzbD" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzbE" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzbG" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzbF" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="difference" />
            <node concept="3uibUv" id="5JQC2dmPzbH" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
              <node concept="3uibUv" id="5JQC2dmPzbI" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPzbJ" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2domUfT" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~LinkedListMultimap" resolve="LinkedListMultimap" />
              <ref role="37wK5l" to="3o3z:~LinkedListMultimap.create():com.google.common.collect.LinkedListMultimap" resolve="create" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPzbL" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBk_" role="1DdaDG">
            <node concept="37vLTw" id="5JQC2dmPBk$" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzby" resolve="minuend" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBkA" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
            </node>
          </node>
          <node concept="3cpWsn" id="5JQC2dmPzc5" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="key" />
            <node concept="3uibUv" id="5JQC2dmPzc7" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzbN" role="2LFqv$">
            <node concept="3cpWs8" id="5JQC2dmPzbP" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPzbO" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="valDifference" />
                <node concept="3uibUv" id="5JQC2dmPzbQ" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~List" resolve="List" />
                  <node concept="3qTvmN" id="5JQC2dmPzbR" role="11_B2D" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzbS" role="33vP2m">
                  <ref role="37wK5l" node="5JQC2dmPzcf" resolve="difference" />
                  <node concept="2YIFZM" id="5JQC2dovN$y" role="37wK5m">
                    <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                    <node concept="1rXfSq" id="5JQC2dovN$z" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzb5" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dovN$$" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzby" resolve="minuend" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dovN$_" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzc5" resolve="key" />
                      </node>
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5JQC2doj6j6" role="37wK5m">
                    <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
                    <ref role="37wK5l" to="3o3z:~Lists.newArrayList(java.lang.Object...):java.util.ArrayList" resolve="newArrayList" />
                    <node concept="1rXfSq" id="5JQC2doj6j7" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPzb5" resolve="get" />
                      <node concept="37vLTw" id="5JQC2doj6j8" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzbA" resolve="subtrahend" />
                      </node>
                      <node concept="37vLTw" id="5JQC2doj6j9" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzc5" resolve="key" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPzc1" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBkF" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBkE" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzbF" resolve="difference" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBkG" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multimap.putAll(java.lang.Object,java.lang.Iterable):boolean" resolve="putAll" />
                  <node concept="37vLTw" id="5JQC2dmPBkH" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzc5" resolve="key" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPBkI" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzbO" resolve="valDifference" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzc9" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzca" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPzbF" resolve="difference" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzcb" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzcc" role="3clF45">
        <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
        <node concept="3qTvmN" id="5JQC2dmPzcd" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPzce" role="11_B2D" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzcf" role="jymVt">
      <property role="TrG5h" value="difference" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzcg" role="3clF46">
        <property role="TrG5h" value="minuend" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzch" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3qTvmN" id="5JQC2dmPzci" role="11_B2D" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzcj" role="3clF46">
        <property role="TrG5h" value="subtrahend" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzck" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3qTvmN" id="5JQC2dmPzcl" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzcm" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzco" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzcn" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="remaining" />
            <node concept="3uibUv" id="5JQC2dmPzcp" role="1tU5fm">
              <ref role="3uigEE" to="3o3z:~LinkedHashMultiset" resolve="LinkedHashMultiset" />
              <node concept="3uibUv" id="5JQC2dmPzcq" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dooH3T" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~LinkedHashMultiset" resolve="LinkedHashMultiset" />
              <ref role="37wK5l" to="3o3z:~LinkedHashMultiset.create(java.lang.Iterable):com.google.common.collect.LinkedHashMultiset" resolve="create" />
              <node concept="37vLTw" id="5JQC2dooH3U" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzcj" resolve="subtrahend" />
              </node>
              <node concept="3uibUv" id="5JQC2dooH3V" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzcv" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzcu" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="difference" />
            <node concept="3uibUv" id="5JQC2dmPzcw" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPzcx" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dosF_O" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Lists" resolve="Lists" />
              <ref role="37wK5l" to="3o3z:~Lists.newArrayList():java.util.ArrayList" resolve="newArrayList" />
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPzcz" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzcM" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPzcg" resolve="minuend" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPzcJ" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="elem" />
            <node concept="3uibUv" id="5JQC2dmPzcL" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzc_" role="2LFqv$">
            <node concept="3clFbJ" id="5JQC2dmPzcA" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPzcB" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmPBkN" role="3fr31v">
                  <node concept="37vLTw" id="5JQC2dmPBkM" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPzcn" resolve="remaining" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBkO" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~AbstractMultiset.remove(java.lang.Object):boolean" resolve="remove" />
                    <node concept="37vLTw" id="5JQC2dmPBkP" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPzcJ" resolve="elem" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzcF" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPzcG" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPBkS" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPBkR" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzcu" resolve="difference" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBkT" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                      <node concept="37vLTw" id="5JQC2dmPBkU" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzcJ" resolve="elem" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzcN" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzcO" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPzcu" resolve="difference" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzcP" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzcQ" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3qTvmN" id="5JQC2dmPzcR" role="11_B2D" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzcS" role="jymVt">
      <property role="TrG5h" value="countDuplicatesMultimap" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPzcT" role="16eVyc">
        <property role="TrG5h" value="K" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPzcU" role="16eVyc">
        <property role="TrG5h" value="V" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzcV" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzcW" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="16syzq" id="5JQC2dmPzcX" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzcT" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzcY" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzcU" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzcZ" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzd1" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzd0" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="entries" />
            <node concept="3uibUv" id="5JQC2dmPzd2" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPzd3" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~String" resolve="String" />
              </node>
            </node>
            <node concept="2ShNRf" id="5JQC2dmPBkV" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPBkW" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="5JQC2dotk07" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPzd6" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBl0" role="1DdaDG">
            <node concept="37vLTw" id="5JQC2dmPBkZ" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzcV" resolve="multimap" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBl1" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Multimap.keySet():java.util.Set" resolve="keySet" />
            </node>
          </node>
          <node concept="3cpWsn" id="5JQC2dmPzdi" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="key" />
            <node concept="16syzq" id="5JQC2dmPzdk" role="1tU5fm">
              <ref role="16sUi3" node="5JQC2dmPzcT" resolve="K" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzd8" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPzd9" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBl4" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPBl3" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzd0" resolve="entries" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBl5" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="3cpWs3" id="5JQC2dmPBl6" role="37wK5m">
                    <node concept="3cpWs3" id="5JQC2dmPBl7" role="3uHU7B">
                      <node concept="37vLTw" id="5JQC2dmPBl8" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPzdi" resolve="key" />
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPBl9" role="3uHU7w">
                        <property role="Xl_RC" value="=" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmPCK1" role="3uHU7w">
                      <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                      <ref role="37wK5l" node="5JQC2dmPwaN" resolve="countDuplicates" />
                      <node concept="2OqwBi" id="5JQC2dmPCKX" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPCKW" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPzcV" resolve="multimap" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCKY" role="2OqNvi">
                          <ref role="37wK5l" to="3o3z:~Multimap.get(java.lang.Object):java.util.Collection" resolve="get" />
                          <node concept="37vLTw" id="5JQC2dmPCKZ" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzdi" resolve="key" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPzdn" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzdm" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="sb" />
            <node concept="3uibUv" id="5JQC2dmPzdo" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmPBld" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPBle" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;()" resolve="StringBuilder" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzdq" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBlh" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPBlg" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzdm" resolve="sb" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBli" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
              <node concept="Xl_RD" id="5JQC2dmPBlj" role="37wK5m">
                <property role="Xl_RC" value="{" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzdt" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzdu" role="3clFbG">
            <node concept="2YIFZM" id="5JQC2dokAiv" role="2Oq$k0">
              <ref role="1Pybhc" to="gyfg:~Joiner" resolve="Joiner" />
              <ref role="37wK5l" to="gyfg:~Joiner.on(java.lang.String):com.google.common.base.Joiner" resolve="on" />
              <node concept="Xl_RD" id="5JQC2dokAiw" role="37wK5m">
                <property role="Xl_RC" value=", " />
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPzdx" role="2OqNvi">
              <ref role="37wK5l" to="gyfg:~Joiner.appendTo(java.lang.StringBuilder,java.lang.Iterable):java.lang.StringBuilder" resolve="appendTo" />
              <node concept="37vLTw" id="5JQC2dmPzdy" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzdm" resolve="sb" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPzdz" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzd0" resolve="entries" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzd$" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBln" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPBlm" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzdm" resolve="sb" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBlo" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
              <node concept="Xl_RD" id="5JQC2dmPBlp" role="37wK5m">
                <property role="Xl_RC" value="}" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzdB" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBls" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPBlr" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzdm" resolve="sb" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBlt" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzdD" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzdE" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzdF" role="jymVt">
      <property role="TrG5h" value="annotateEmptyStringsMultimap" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzdG" role="3clF46">
        <property role="TrG5h" value="multimap" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzdH" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPzdI" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzdJ" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzdK" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzdL" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzdM" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPBlw" role="3uHU7B">
              <node concept="37vLTw" id="5JQC2dmPBlv" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPzdG" resolve="multimap" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBlx" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="Xl_RD" id="5JQC2dmPBly" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBl_" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPBl$" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPzdG" resolve="multimap" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBlA" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                <node concept="Xl_RD" id="5JQC2dmPBlB" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPzey" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPzez" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPze$" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPze_" role="3cqZAk">
                  <ref role="3cqZAo" node="5JQC2dmPzdG" resolve="multimap" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzdS" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPzdU" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPzdT" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="annotatedMultimap" />
                <node concept="3uibUv" id="5JQC2dmPzdV" role="1tU5fm">
                  <ref role="3uigEE" to="3o3z:~ListMultimap" resolve="ListMultimap" />
                  <node concept="3uibUv" id="5JQC2dmPzdW" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPzdX" role="11_B2D">
                    <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2doooVV" role="33vP2m">
                  <ref role="1Pybhc" to="3o3z:~LinkedListMultimap" resolve="LinkedListMultimap" />
                  <ref role="37wK5l" to="3o3z:~LinkedListMultimap.create():com.google.common.collect.LinkedListMultimap" resolve="create" />
                </node>
              </node>
            </node>
            <node concept="1DcWWT" id="5JQC2dmPzdZ" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPBlF" role="1DdaDG">
                <node concept="37vLTw" id="5JQC2dmPBlE" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPzdG" resolve="multimap" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBlG" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                </node>
              </node>
              <node concept="3cpWsn" id="5JQC2dmPzeq" role="1Duv9x">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="entry" />
                <node concept="3uibUv" id="5JQC2dmPzes" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                  <node concept="3qTvmN" id="5JQC2dmPzet" role="11_B2D" />
                  <node concept="3qTvmN" id="5JQC2dmPzeu" role="11_B2D" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPze1" role="2LFqv$">
                <node concept="3cpWs8" id="5JQC2dmPze3" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPze2" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="key" />
                    <node concept="3uibUv" id="5JQC2dmPze4" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPzeb" role="33vP2m">
                      <node concept="2OqwBi" id="5JQC2dmPze5" role="3K4Cdx">
                        <node concept="Xl_RD" id="5JQC2dmPze6" role="2Oq$k0">
                          <property role="Xl_RC" value="" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPze7" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                          <node concept="2OqwBi" id="5JQC2dmPBlJ" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmPBlI" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzeq" resolve="entry" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPBlK" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="10M0yZ" id="5JQC2dmQbnB" role="3K4E3e">
                        <ref role="1PxDUh" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="3cqZAo" node="5JQC2dmPw9j" resolve="HUMAN_UNDERSTANDABLE_EMPTY_STRING" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPBlN" role="3K4GZi">
                        <node concept="37vLTw" id="5JQC2dmPBlM" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPzeq" resolve="entry" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBlO" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs8" id="5JQC2dmPzed" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPzec" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="value" />
                    <node concept="3uibUv" id="5JQC2dmPzee" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                    <node concept="3K4zz7" id="5JQC2dmPzel" role="33vP2m">
                      <node concept="2OqwBi" id="5JQC2dmPzef" role="3K4Cdx">
                        <node concept="Xl_RD" id="5JQC2dmPzeg" role="2Oq$k0">
                          <property role="Xl_RC" value="" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPzeh" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                          <node concept="2OqwBi" id="5JQC2dmPBlR" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmPBlQ" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPzeq" resolve="entry" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPBlS" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="10M0yZ" id="5JQC2dmQbnC" role="3K4E3e">
                        <ref role="1PxDUh" node="5JQC2dmPw9i" resolve="SubjectUtils" />
                        <ref role="3cqZAo" node="5JQC2dmPw9j" resolve="HUMAN_UNDERSTANDABLE_EMPTY_STRING" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPBlV" role="3K4GZi">
                        <node concept="37vLTw" id="5JQC2dmPBlU" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPzeq" resolve="entry" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBlW" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPzem" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPBlZ" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPBlY" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzdT" resolve="annotatedMultimap" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBm0" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~Multimap.put(java.lang.Object,java.lang.Object):boolean" resolve="put" />
                      <node concept="37vLTw" id="5JQC2dmPBm1" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPze2" resolve="key" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPBm2" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzec" resolve="value" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmPzew" role="3cqZAp">
              <node concept="37vLTw" id="5JQC2dmPzex" role="3cqZAk">
                <ref role="3cqZAo" node="5JQC2dmPzdT" resolve="annotatedMultimap" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzeA" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzeB" role="3clF45">
        <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
        <node concept="3qTvmN" id="5JQC2dmPzeC" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPzeD" role="11_B2D" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzeE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzgF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgG" role="1dT_Ay">
            <property role="1dT_AB" value=" Returns a multimap with all empty strings (as keys or values) replaced by a non-empty human" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgI" role="1dT_Ay">
            <property role="1dT_AB" value=" understandable indicator for an empty string." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgK" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgM" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Returns the given multimap if it contains no empty strings." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzeF" role="jymVt">
      <property role="TrG5h" value="comparingValuesUsing" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPzeG" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPzeH" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzeI" role="3clF46">
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzeJ" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPzeK" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzeG" resolve="A" />
          </node>
          <node concept="16syzq" id="5JQC2dmPzeL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzeH" resolve="E" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzeM" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzeN" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPBm3" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPBo0" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPyXl" resolve="MultimapSubject.UsingCorrespondence" />
              <node concept="37vLTw" id="5JQC2dmPBo1" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzeI" resolve="correspondence" />
              </node>
              <node concept="16syzq" id="5JQC2dmPBo2" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPzeG" resolve="A" />
              </node>
              <node concept="16syzq" id="5JQC2dmPBo3" role="1pMfVU">
                <ref role="16sUi3" node="5JQC2dmPzeH" resolve="E" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzeS" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzeT" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPyXb" resolve="MultimapSubject.UsingCorrespondence" />
        <node concept="16syzq" id="5JQC2dmPzeU" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzeG" resolve="A" />
        </node>
        <node concept="16syzq" id="5JQC2dmPzeV" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzeH" resolve="E" />
        </node>
      </node>
      <node concept="P$JXv" id="5JQC2dmPzeW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzgN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgO" role="1dT_Ay">
            <property role="1dT_AB" value=" Starts a method chain for a test proposition in which the actual values (i.e. the values of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgQ" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Multimap} under test) are compared to expected values using the given {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgS" role="1dT_Ay">
            <property role="1dT_AB" value=" Correspondence}. The actual values must be of type {@code A}, and the expected values must be" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgU" role="1dT_Ay">
            <property role="1dT_AB" value=" of type {@code E}. The proposition is actually executed by continuing the method chain. For" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgW" role="1dT_Ay">
            <property role="1dT_AB" value=" example:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzgY" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzgZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh0" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh2" role="1dT_Ay">
            <property role="1dT_AB" value=" assertThat(actualMultimap)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh4" role="1dT_Ay">
            <property role="1dT_AB" value="   .comparingValuesUsing(correspondence)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh6" role="1dT_Ay">
            <property role="1dT_AB" value="   .containsEntry(expectedKey, expectedValue);" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh8" role="1dT_Ay">
            <property role="1dT_AB" value=" }&lt;/pre&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzha" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhc" role="1dT_Ay">
            <property role="1dT_AB" value=" where {@code actualMultimap} is a {@code Multimap&lt;?, A&gt;} (or, more generally, a {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhe" role="1dT_Ay">
            <property role="1dT_AB" value=" Multimap&lt;?, ? extends A&gt;}), {@code correspondence} is a {@code Correspondence&lt;A, E&gt;}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhg" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code expectedValue} is an {@code E}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhi" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhk" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Note that keys will always be compared with regular object equality ({@link Object#equals})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhm" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzho" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Any of the methods on the returned object may throw {@link ClassCastException} if they" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhq" role="1dT_Ay">
            <property role="1dT_AB" value=" encounter an actual value that is not of type {@code A}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPyXb" role="jymVt">
      <property role="TrG5h" value="UsingCorrespondence" />
      <property role="2bfB8j" value="true" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tm1VV" id="5JQC2dmPyXc" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmPyXd" role="16eVyc">
        <property role="TrG5h" value="A" />
      </node>
      <node concept="16euLQ" id="5JQC2dmPyXe" role="16eVyc">
        <property role="TrG5h" value="E" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmPz1k" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzhr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhs" role="1dT_Ay">
            <property role="1dT_AB" value=" A partially specified proposition in which the actual values (i.e. the values of the {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzht" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhu" role="1dT_Ay">
            <property role="1dT_AB" value=" Multimap} under test) are compared to expected values using a {@link Correspondence}. The" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhw" role="1dT_Ay">
            <property role="1dT_AB" value=" expected values are of type {@code E}. Call methods on this object to actually execute the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhy" role="1dT_Ay">
            <property role="1dT_AB" value=" proposition." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzhz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzh$" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzh_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzhA" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Note that keys will always be compared with regular object equality ({@link Object#equals})." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmPyXf" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="correspondence" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmPyXh" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
          <node concept="16syzq" id="5JQC2dmPyXi" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyXj" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyXk" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPyXl" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPyXm" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPyXn" role="3clF46">
          <property role="TrG5h" value="correspondence" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPyXo" role="1tU5fm">
            <ref role="3uigEE" node="5JQC2dmPxpk" resolve="Correspondence" />
            <node concept="16syzq" id="5JQC2dmPyXp" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
            </node>
            <node concept="16syzq" id="5JQC2dmPyXq" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyXr" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmPyXs" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmPyXt" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmPyXu" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmPyXv" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmPyXw" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmPyXf" resolve="correspondence" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dosnP4" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dosnP5" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyXn" resolve="correspondence" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPyXz" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPyX$" role="jymVt">
        <property role="TrG5h" value="containsEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyX_" role="3clF46">
          <property role="TrG5h" value="expectedKey" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyXA" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPyXB" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyXC" role="3clF46">
          <property role="TrG5h" value="expectedValue" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyXD" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyXE" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyXF" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPyXG" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPyXH" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPyXI" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyXJ" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPyXK" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyX_" resolve="expectedKey" />
                </node>
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPyYj" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPyYk" role="9aQI4">
                <node concept="3cpWs8" id="5JQC2dmPyYm" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPyYl" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="keys" />
                    <node concept="3uibUv" id="5JQC2dmPyYn" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                      <node concept="3uibUv" id="5JQC2dmPyYo" role="11_B2D">
                        <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                      </node>
                    </node>
                    <node concept="2ShNRf" id="5JQC2dmPBo4" role="33vP2m">
                      <node concept="1pGfFk" id="5JQC2dmPBo5" role="2ShVmc">
                        <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                        <node concept="3uibUv" id="5JQC2dodcZT" role="1pMfVU">
                          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1DcWWT" id="5JQC2dmPyYr" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPyYG" role="1DdaDG">
                    <node concept="1rXfSq" id="5JQC2dmPyYH" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmPz15" resolve="getCastActual" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPyYI" role="2OqNvi">
                      <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                    </node>
                  </node>
                  <node concept="3cpWsn" id="5JQC2dmPyYB" role="1Duv9x">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="actualEntry" />
                    <node concept="3uibUv" id="5JQC2dmPyYD" role="1tU5fm">
                      <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                      <node concept="3qTvmN" id="5JQC2dmPyYE" role="11_B2D" />
                      <node concept="16syzq" id="5JQC2dmPyYF" role="11_B2D">
                        <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPyYt" role="2LFqv$">
                    <node concept="3clFbJ" id="5JQC2dmPyYu" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPBop" role="3clFbw">
                        <node concept="37vLTw" id="5JQC2dmPBoo" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBoq" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                          <node concept="2OqwBi" id="5JQC2dmPCJs" role="37wK5m">
                            <node concept="37vLTw" id="5JQC2dmPCJr" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPyYB" resolve="actualEntry" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPCJt" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPBos" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyXC" resolve="expectedValue" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPyYz" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPyY$" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmPBoy" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPBox" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPyYl" resolve="keys" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPBoz" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                              <node concept="2OqwBi" id="5JQC2dmPCIv" role="37wK5m">
                                <node concept="37vLTw" id="5JQC2dmPCIu" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPyYB" resolve="actualEntry" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPCIw" role="2OqNvi">
                                  <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmPyYJ" role="3cqZAp">
                  <node concept="3fqX7Q" id="5JQC2dmPyYK" role="3clFbw">
                    <node concept="2OqwBi" id="5JQC2dmPBoE" role="3fr31v">
                      <node concept="37vLTw" id="5JQC2dmPBoD" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyYl" resolve="keys" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBoF" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Set.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                  </node>
                  <node concept="9aQIb" id="5JQC2dmPyYW" role="9aQIa">
                    <node concept="3clFbS" id="5JQC2dmPyYX" role="9aQI4">
                      <node concept="3clFbF" id="5JQC2dmPyYY" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmPyYZ" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmPyZ0" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s contains at least one entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmPyZ1" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPyZ2" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyX_" resolve="expectedKey" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPyZ3" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmPyZ4" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPyXC" resolve="expectedValue" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPyYN" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmPyYO" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPyYP" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmPyYQ" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s contains at least one entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. However, the following keys are mapped to such values: &lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPyYR" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyYS" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyX_" resolve="expectedKey" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyYT" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyYU" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyXC" resolve="expectedValue" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPyYV" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyYl" resolve="keys" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyXM" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmPyXO" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyXN" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValues" />
                  <node concept="3uibUv" id="5JQC2dmPyXP" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                    <node concept="16syzq" id="5JQC2dmPyXQ" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPyXR" role="33vP2m">
                    <node concept="2OqwBi" id="5JQC2dmPyXS" role="2Oq$k0">
                      <node concept="1rXfSq" id="5JQC2dmPyXT" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPz15" resolve="getCastActual" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPyXU" role="2OqNvi">
                        <ref role="37wK5l" to="3o3z:~Multimap.asMap():java.util.Map" resolve="asMap" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPyXV" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dmPyXW" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyX_" resolve="expectedKey" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="1DcWWT" id="5JQC2dmPyXX" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPyYa" role="1DdaDG">
                  <ref role="3cqZAo" node="5JQC2dmPyXN" resolve="actualValues" />
                </node>
                <node concept="3cpWsn" id="5JQC2dmPyY7" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValue" />
                  <node concept="16syzq" id="5JQC2dmPyY9" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyXZ" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPyY0" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmPBoL" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmPBoK" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBoM" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                        <node concept="37vLTw" id="5JQC2dmPBoN" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyY7" resolve="actualValue" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPBoO" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyXC" resolve="expectedValue" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyY5" role="3clFbx">
                      <node concept="3cpWs6" id="5JQC2dmPyY6" role="3cqZAp" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="5JQC2dmPyYb" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPyYc" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPyYd" role="37wK5m">
                    <property role="Xl_RC" value="Not true that %s contains at least one entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. However, it has a mapping from that key to &lt;%s&gt;" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPyYe" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyYf" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyX_" resolve="expectedKey" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyYg" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyYh" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyXC" resolve="expectedValue" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPyYi" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPyXN" resolve="actualValues" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPyZ5" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPyZ6" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPyZ7" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzhB" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhC" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the multimap does not contain an entry with the given key and a value that" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhD" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhE" role="1dT_Ay">
              <property role="1dT_AB" value="corresponds to the given value." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPyZ8" role="jymVt">
        <property role="TrG5h" value="doesNotContainEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPyZ9" role="3clF46">
          <property role="TrG5h" value="excludedKey" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyZa" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPyZb" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPyZc" role="3clF46">
          <property role="TrG5h" value="excludedValue" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPyZd" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="16syzq" id="5JQC2dmPyZe" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPyZf" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmPyZg" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPyZh" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPyZi" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPyZj" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Multimap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPyZk" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPyZ9" resolve="excludedKey" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPyZm" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmPyZo" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyZn" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValues" />
                  <node concept="3uibUv" id="5JQC2dmPyZp" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~Collection" resolve="Collection" />
                    <node concept="16syzq" id="5JQC2dmPyZq" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPyZr" role="33vP2m">
                    <node concept="2OqwBi" id="5JQC2dmPyZs" role="2Oq$k0">
                      <node concept="1rXfSq" id="5JQC2dmPyZt" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmPz15" resolve="getCastActual" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPyZu" role="2OqNvi">
                        <ref role="37wK5l" to="3o3z:~Multimap.asMap():java.util.Map" resolve="asMap" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPyZv" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5JQC2dmPyZw" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyZ9" resolve="excludedKey" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs8" id="5JQC2dmPyZy" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmPyZx" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="matchingValues" />
                  <node concept="3uibUv" id="5JQC2dmPyZz" role="1tU5fm">
                    <ref role="3uigEE" to="33ny:~List" resolve="List" />
                    <node concept="16syzq" id="5JQC2dmPyZ$" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                    </node>
                  </node>
                  <node concept="2ShNRf" id="5JQC2dmPBoP" role="33vP2m">
                    <node concept="1pGfFk" id="5JQC2dmPBoQ" role="2ShVmc">
                      <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                      <node concept="16syzq" id="5JQC2doerf7" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="1DcWWT" id="5JQC2dmPyZB" role="3cqZAp">
                <node concept="37vLTw" id="5JQC2dmPyZQ" role="1DdaDG">
                  <ref role="3cqZAo" node="5JQC2dmPyZn" resolve="actualValues" />
                </node>
                <node concept="3cpWsn" id="5JQC2dmPyZN" role="1Duv9x">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="actualValue" />
                  <node concept="16syzq" id="5JQC2dmPyZP" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyZD" role="2LFqv$">
                  <node concept="3clFbJ" id="5JQC2dmPyZE" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmPBoX" role="3clFbw">
                      <node concept="37vLTw" id="5JQC2dmPBoW" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBoY" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmPxqz" resolve="compare" />
                        <node concept="37vLTw" id="5JQC2dmPBoZ" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyZN" resolve="actualValue" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPBp0" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPyZc" resolve="excludedValue" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmPyZJ" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmPyZK" role="3cqZAp">
                        <node concept="2OqwBi" id="5JQC2dmPBp6" role="3clFbG">
                          <node concept="37vLTw" id="5JQC2dmPBp5" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmPyZx" resolve="matchingValues" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPBp7" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                            <node concept="37vLTw" id="5JQC2dmPBp8" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPyZN" resolve="actualValue" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmPyZR" role="3cqZAp">
                <node concept="3fqX7Q" id="5JQC2dmPyZS" role="3clFbw">
                  <node concept="2OqwBi" id="5JQC2dmPBpe" role="3fr31v">
                    <node concept="37vLTw" id="5JQC2dmPBpd" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPyZx" resolve="matchingValues" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBpf" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmPyZV" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmPyZW" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPyZX" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmPyZY" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s did not contain an entry with key &lt;%s&gt; and a value that %s &lt;%s&gt;. It maps that key to the following such values: &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPyZZ" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz00" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyZ9" resolve="excludedKey" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz01" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz02" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyZc" resolve="excludedValue" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPz03" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyZx" resolve="matchingValues" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPz04" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPz05" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPz06" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzhF" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhG" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the multimap contains an entry with the given key and a value that corresponds to" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhI" role="1dT_Ay">
              <property role="1dT_AB" value="the given value." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPz07" role="jymVt">
        <property role="TrG5h" value="containsExactlyEntriesIn" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPz09" role="16eVyc">
          <property role="TrG5h" value="K" />
        </node>
        <node concept="16euLQ" id="5JQC2dmPz0a" role="16eVyc">
          <property role="TrG5h" value="V" />
          <node concept="16syzq" id="5JQC2dmPz0b" role="3ztrMU">
            <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPz0c" role="3clF46">
          <property role="TrG5h" value="expectedMultimap" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPz0d" role="1tU5fm">
            <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
            <node concept="16syzq" id="5JQC2dmPz0e" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPz09" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmPz0f" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmPz0a" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPz0g" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPz0h" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPz0i" role="3cqZAk">
              <node concept="2OqwBi" id="5JQC2dmPz0j" role="2Oq$k0">
                <node concept="2ShNRf" id="5JQC2dmPBpg" role="2Oq$k0">
                  <node concept="1pGfFk" id="5JQC2dmPBpH" role="2ShVmc">
                    <ref role="37wK5l" node="5JQC2dmPyUH" resolve="MultimapSubject.IterableEntries" />
                    <node concept="37vLTw" id="5JQC2dmPBpI" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                    </node>
                    <node concept="Xjq3P" id="5JQC2dmPBpN" role="37wK5m">
                      <ref role="1HBi2w" node="5JQC2dmPyTy" resolve="MultimapSubject" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPz0o" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPy$0" resolve="comparingElementsUsing" />
                  <node concept="2ShNRf" id="5JQC2dmPBpO" role="37wK5m">
                    <node concept="1pGfFk" id="5JQC2dmPBsq" role="2ShVmc">
                      <ref role="37wK5l" node="5JQC2dmPxcX" resolve="MapSubject.EntryCorrespondence" />
                      <node concept="37vLTw" id="5JQC2dmPBsr" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPyXf" resolve="correspondence" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmPBsv" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPz09" resolve="K" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmPBsw" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                      </node>
                      <node concept="16syzq" id="5JQC2dmPBsx" role="1pMfVU">
                        <ref role="16sUi3" node="5JQC2dmPz0a" resolve="V" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPz0u" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPy6g" resolve="containsExactlyElementsIn" />
                <node concept="2OqwBi" id="5JQC2dmPBsB" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPBsA" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPz0c" resolve="expectedMultimap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBsC" role="2OqNvi">
                    <ref role="37wK5l" to="3o3z:~Multimap.entries():java.util.Collection" resolve="entries" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPz0w" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPz0x" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPz0y" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzhJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhK" role="1dT_Ay">
              <property role="1dT_AB" value=" Fails if the map does not contain exactly the keys in the given multimap, mapping to values" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhM" role="1dT_Ay">
              <property role="1dT_AB" value=" that correspond to the values of the given multimap." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhO" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhQ" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;A subsequent call to {@link Ordered#inOrder} may be made if the caller wishes to verify" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhS" role="1dT_Ay">
              <property role="1dT_AB" value=" that the two Multimaps iterate fully in the same order. That is, their key sets iterate in" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhU" role="1dT_Ay">
              <property role="1dT_AB" value=" the same order, and the corresponding value collections for each key iterate in the same" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhW" role="1dT_Ay">
              <property role="1dT_AB" value=" order." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPz0z" role="jymVt">
        <property role="TrG5h" value="containsExactly" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmPz0_" role="16eVyc">
          <property role="TrG5h" value="K" />
        </node>
        <node concept="16euLQ" id="5JQC2dmPz0A" role="16eVyc">
          <property role="TrG5h" value="V" />
          <node concept="16syzq" id="5JQC2dmPz0B" role="3ztrMU">
            <ref role="16sUi3" node="5JQC2dmPyXe" resolve="E" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPz0C" role="3clF46">
          <property role="TrG5h" value="k0" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPz0D" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPz0E" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPz0F" role="3clF46">
          <property role="TrG5h" value="v0" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPz0G" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPz0H" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPz0I" role="3clF46">
          <property role="TrG5h" value="rest" />
          <property role="3TUv4t" value="false" />
          <node concept="8X2XB" id="5JQC2dmPz0K" role="1tU5fm">
            <node concept="3uibUv" id="5JQC2dmPz0J" role="8Xvag">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPz0L" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmPz0N" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmPz0M" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="expectedMultimap" />
              <node concept="3uibUv" id="5JQC2dmPz0O" role="1tU5fm">
                <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                <node concept="16syzq" id="5JQC2dmPz0P" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPz0_" resolve="K" />
                </node>
                <node concept="16syzq" id="5JQC2dmPz0Q" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPz0A" resolve="V" />
                </node>
              </node>
              <node concept="10QFUN" id="5JQC2dmPz0R" role="33vP2m">
                <node concept="1rXfSq" id="5JQC2dmPz0S" role="10QFUP">
                  <ref role="37wK5l" node="5JQC2dmPz9T" resolve="accumulateMultimap" />
                  <node concept="37vLTw" id="5JQC2dmPz0T" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz0C" resolve="k0" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPz0U" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz0F" resolve="v0" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPz0V" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPz0I" resolve="rest" />
                  </node>
                </node>
                <node concept="3uibUv" id="5JQC2dmPz0W" role="10QFUM">
                  <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                  <node concept="16syzq" id="5JQC2dmPz0X" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPz0_" resolve="K" />
                  </node>
                  <node concept="16syzq" id="5JQC2dmPz0Y" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmPz0A" resolve="V" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmPz0Z" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmPz10" role="3cqZAk">
              <ref role="37wK5l" node="5JQC2dmPz07" resolve="containsExactlyEntriesIn" />
              <node concept="37vLTw" id="5JQC2dmPz11" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz0M" resolve="expectedMultimap" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPz12" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPz13" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmPzCc" resolve="Ordered" />
        </node>
        <node concept="P$JXv" id="5JQC2dmPz14" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzhX" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzhY" role="1dT_Ay">
              <property role="1dT_AB" value=" Fails if the multimap does not contain exactly the given set of key/value pairs." />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzhZ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzi0" role="1dT_Ay">
              <property role="1dT_AB" value="" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzi1" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzi2" role="1dT_Ay">
              <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; the use of varargs means that we cannot guarantee an equal number of" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzi3" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzi4" role="1dT_Ay">
              <property role="1dT_AB" value=" key/value pairs at compile time. Please make sure you provide varargs in key/value pairs!" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPz15" role="jymVt">
        <property role="TrG5h" value="getCastActual" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz16" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
          <node concept="2B6LJw" id="5JQC2dmPz17" role="2B76xF">
            <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
            <node concept="Xl_RD" id="5JQC2dmPz18" role="2B70Vg">
              <property role="Xl_RC" value="unchecked" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPz19" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmPz1a" role="3cqZAp">
            <node concept="10QFUN" id="5JQC2dmPz1b" role="3cqZAk">
              <node concept="1rXfSq" id="5JQC2dmPz1c" role="10QFUP">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPz1d" role="10QFUM">
                <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
                <node concept="3qTvmN" id="5JQC2dmPz1e" role="11_B2D" />
                <node concept="16syzq" id="5JQC2dmPz1f" role="11_B2D">
                  <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmPz1g" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmPz1h" role="3clF45">
          <ref role="3uigEE" to="3o3z:~Multimap" resolve="Multimap" />
          <node concept="3qTvmN" id="5JQC2dmPz1i" role="11_B2D" />
          <node concept="16syzq" id="5JQC2dmPz1j" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPyXd" resolve="A" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$_h">
    <property role="TrG5h" value="SortedMapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmP$_i" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmP$DO" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPx92" resolve="MapSubject" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$L4" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$Ll" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$Lm" role="1dT_Ay">
          <property role="1dT_AB" value="Tests for {@link SortedMap} and {@link NavigableMap} objects. This class supports assertions" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$Ln" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$Lo" role="1dT_Ay">
          <property role="1dT_AB" value="based on {@code NavigableMap}'s API even if the subject only implements {@code SortedMap}." />
        </node>
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmP$DP" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="actualAsNavigableMap" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmP$DR" role="1tU5fm">
        <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
        <node concept="3qTvmN" id="5JQC2dmP$DS" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmP$DT" role="11_B2D" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$DU" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmP$DV" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$DW" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$DX" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$DY" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$DZ" role="3clF46">
        <property role="TrG5h" value="map" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$E0" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
          <node concept="3qTvmN" id="5JQC2dmP$E1" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmP$E2" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$E3" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBsD" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPxdJ" resolve="MapSubject" />
          <node concept="37vLTw" id="5JQC2dmPBsE" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$DX" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPBsF" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$DZ" resolve="map" />
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$E4" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmP$E5" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmP$E6" role="37vLTJ">
              <ref role="3cqZAo" node="5JQC2dmP$DP" resolve="actualAsNavigableMap" />
            </node>
            <node concept="3K4zz7" id="5JQC2dmP$Ed" role="37vLTx">
              <node concept="3clFbC" id="5JQC2dmP$E7" role="3K4Cdx">
                <node concept="37vLTw" id="5JQC2dmP$E8" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmP$DZ" resolve="map" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmP$E9" role="3uHU7w" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$Ea" role="3K4E3e" />
              <node concept="2YIFZM" id="5JQC2dmPBtp" role="3K4GZi">
                <ref role="1Pybhc" node="5JQC2dmP$_j" resolve="SortedMapSubject.SortedMapAsNavigableMap" />
                <ref role="37wK5l" node="5JQC2dmP$_z" resolve="wrapIfNecessary" />
                <node concept="37vLTw" id="5JQC2dmPBtq" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$DZ" resolve="map" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$Eh" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$Ei" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$Ej" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$Ek" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$El" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmP$En" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmP$Em" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$Eo" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$Ep" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmP$Eq" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
            <node concept="37vLTw" id="5JQC2dmP$Er" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$Ej" resolve="format" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$Es" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$El" resolve="args" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$Et" role="3cqZAp">
          <node concept="Xjq3P" id="5JQC2dmP$Eu" role="3cqZAk" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$Ev" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$Ew" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$_h" resolve="SortedMapSubject" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$Ex" role="jymVt">
      <property role="TrG5h" value="hasFirstKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$Ey" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Ez" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$E$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$E_" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmP$EA" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$EB" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmP$EC" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$ED" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$EF" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$EG" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$EH" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmP$EI" role="37wK5m">
                  <property role="Xl_RC" value="has first key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$EJ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$Ey" resolve="key" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmP$EK" role="3cqZAp" />
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$EL" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$EM" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do3yG7" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="2OqwBi" id="5JQC2do3yG8" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2do3yG9" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                </node>
                <node concept="liA8E" id="5JQC2do3yGa" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~SortedMap.firstKey():java.lang.Object" resolve="firstKey" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2do3yGb" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$Ey" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$ET" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmP$EU" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP$EV" role="3clFbw">
                <node concept="1rXfSq" id="5JQC2dmP$EW" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                </node>
                <node concept="liA8E" id="5JQC2dmP$EX" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                  <node concept="37vLTw" id="5JQC2dmP$EY" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$Ey" resolve="key" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$F0" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$F1" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$F2" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$F3" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has first key &lt;%s&gt;. It does contain this key, but the first key is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$F4" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$F5" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$Ey" resolve="key" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmP$F6" role="37wK5m">
                      <node concept="1rXfSq" id="5JQC2dmP$F7" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$F8" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~SortedMap.firstKey():java.lang.Object" resolve="firstKey" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$F9" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$Fa" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$Fb" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmP$Fc" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s has first key &lt;%s&gt;. It does not contain this key, and the first key is &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmP$Fd" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Fe" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$Ey" resolve="key" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP$Ff" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmP$Fg" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$Fh" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedMap.firstKey():java.lang.Object" resolve="firstKey" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$Fi" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$Fj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$Fk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$Lp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$Lq" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map's first key is not equal to the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$Fl" role="jymVt">
      <property role="TrG5h" value="hasFirstEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$Fm" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Fn" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$Fo" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$Fp" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Fq" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$Fr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$Fs" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$Fu" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$Ft" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedEntry" />
            <node concept="3uibUv" id="5JQC2dmP$Fv" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3uibUv" id="5JQC2dmP$Fw" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmP$Fx" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2do1Hwl" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
              <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
              <node concept="37vLTw" id="5JQC2do1Hwm" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$Fm" resolve="key" />
              </node>
              <node concept="37vLTw" id="5JQC2do1Hwn" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$Fp" resolve="value" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$F_" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$FA" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmP$FB" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$FC" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$FE" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$FF" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$FG" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmP$FH" role="37wK5m">
                  <property role="Xl_RC" value="has first entry" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$FI" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmP$FJ" role="3cqZAp" />
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmP$FL" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$FK" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualFirstEntry" />
            <node concept="3uibUv" id="5JQC2dmP$FM" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3qTvmN" id="5JQC2dmP$FN" role="11_B2D" />
              <node concept="3qTvmN" id="5JQC2dmP$FO" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$FP" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmP$FQ" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$FR" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~NavigableMap.firstEntry():java.util.Map$Entry" resolve="firstEntry" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$FS" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$FT" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do21nq" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="37vLTw" id="5JQC2do21nr" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
              </node>
              <node concept="37vLTw" id="5JQC2do21ns" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$FY" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmP$G0" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$FZ" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="actualFirstKey" />
                <node concept="3uibUv" id="5JQC2dmP$G1" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPBtw" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPBtv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBtx" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$G3" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP$G4" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmP$G5" role="2Oq$k0">
                  <node concept="1rXfSq" id="5JQC2dmP$G6" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$G7" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmP$G8" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmP$G9" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmP$Gi" role="9aQIa">
                <node concept="2YIFZM" id="5JQC2do2qS6" role="3clFbw">
                  <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                  <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                  <node concept="37vLTw" id="5JQC2do2qS7" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$FZ" resolve="actualFirstKey" />
                  </node>
                  <node concept="37vLTw" id="5JQC2do2qS8" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$Fm" resolve="key" />
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmP$Gu" role="9aQIa">
                  <node concept="2YIFZM" id="5JQC2do1I33" role="3clFbw">
                    <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                    <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                    <node concept="2OqwBi" id="5JQC2do1Kmh" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2do1Kmg" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                      </node>
                      <node concept="liA8E" id="5JQC2do1Kmi" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2do1I35" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$Fp" resolve="value" />
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmP$GE" role="9aQIa">
                    <node concept="2OqwBi" id="5JQC2dmP$GF" role="3clFbw">
                      <node concept="1rXfSq" id="5JQC2dmP$GG" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$GH" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                        <node concept="37vLTw" id="5JQC2dmP$GI" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$Fm" resolve="key" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$GV" role="9aQIa">
                      <node concept="2OqwBi" id="5JQC2dmP$GW" role="3clFbw">
                        <node concept="1rXfSq" id="5JQC2dmP$GX" role="2Oq$k0">
                          <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP$GY" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                          <node concept="37vLTw" id="5JQC2dmP$GZ" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$Fp" resolve="value" />
                          </node>
                        </node>
                      </node>
                      <node concept="9aQIb" id="5JQC2dmP$Hz" role="9aQIa">
                        <node concept="3clFbS" id="5JQC2dmP$H$" role="9aQI4">
                          <node concept="3clFbF" id="5JQC2dmP$H_" role="3cqZAp">
                            <node concept="1rXfSq" id="5JQC2dmP$HA" role="3clFbG">
                              <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                              <node concept="Xl_RD" id="5JQC2dmP$HB" role="37wK5m">
                                <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;. It does not contain this entry, and the first entry is &lt;%s&gt;" />
                              </node>
                              <node concept="1rXfSq" id="5JQC2dmP$HC" role="37wK5m">
                                <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmP$HD" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmP$HE" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$H1" role="3clFbx">
                        <node concept="3cpWs8" id="5JQC2dmP$H3" role="3cqZAp">
                          <node concept="3cpWsn" id="5JQC2dmP$H2" role="3cpWs9">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="keys" />
                            <node concept="3uibUv" id="5JQC2dmP$H4" role="1tU5fm">
                              <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                              <node concept="3uibUv" id="5JQC2dmP$H5" role="11_B2D">
                                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                              </node>
                            </node>
                            <node concept="2ShNRf" id="5JQC2dmPBt$" role="33vP2m">
                              <node concept="1pGfFk" id="5JQC2dmPBt_" role="2ShVmc">
                                <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                                <node concept="3uibUv" id="5JQC2do1Qxx" role="1pMfVU">
                                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="1DcWWT" id="5JQC2dmP$H8" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmP$Hp" role="1DdaDG">
                            <node concept="1rXfSq" id="5JQC2dmP$Hq" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP$Hr" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                            </node>
                          </node>
                          <node concept="3cpWsn" id="5JQC2dmP$Hk" role="1Duv9x">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="actualEntry" />
                            <node concept="3uibUv" id="5JQC2dmP$Hm" role="1tU5fm">
                              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                              <node concept="3qTvmN" id="5JQC2dmP$Hn" role="11_B2D" />
                              <node concept="3qTvmN" id="5JQC2dmP$Ho" role="11_B2D" />
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmP$Ha" role="2LFqv$">
                            <node concept="3clFbJ" id="5JQC2dmP$Hb" role="3cqZAp">
                              <node concept="2YIFZM" id="5JQC2do1Jc7" role="3clFbw">
                                <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                                <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                                <node concept="2OqwBi" id="5JQC2do1X_E" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2do1X_D" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmP$Hk" resolve="actualEntry" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2do1X_F" role="2OqNvi">
                                    <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2do1Jc9" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmP$Fp" resolve="value" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="5JQC2dmP$Hg" role="3clFbx">
                                <node concept="3clFbF" id="5JQC2dmP$Hh" role="3cqZAp">
                                  <node concept="2OqwBi" id="5JQC2dmPBtE" role="3clFbG">
                                    <node concept="37vLTw" id="5JQC2dmPBtD" role="2Oq$k0">
                                      <ref role="3cqZAo" node="5JQC2dmP$H2" resolve="keys" />
                                    </node>
                                    <node concept="liA8E" id="5JQC2dmPBtF" role="2OqNvi">
                                      <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                                      <node concept="2OqwBi" id="5JQC2dmPCGG" role="37wK5m">
                                        <node concept="37vLTw" id="5JQC2dmPCGF" role="2Oq$k0">
                                          <ref role="3cqZAo" node="5JQC2dmP$Hk" resolve="actualEntry" />
                                        </node>
                                        <node concept="liA8E" id="5JQC2dmPCGH" role="2OqNvi">
                                          <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmP$Hs" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmP$Ht" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmP$Hu" role="37wK5m">
                              <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;. It does contain this value, but the value is mapped from the keys &lt;%s&gt;, and the first entry is &lt;%s&gt;" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmP$Hv" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$Hw" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$Hx" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$H2" resolve="keys" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$Hy" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmP$GK" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmP$GL" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmP$GM" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmP$GN" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;. It does contain this key, but the key is mapped to &lt;%s&gt;, and the first entry is &lt;%s&gt;" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmP$GO" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP$GP" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP$GQ" role="37wK5m">
                            <node concept="1rXfSq" id="5JQC2dmP$GR" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP$GS" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                              <node concept="37vLTw" id="5JQC2dmP$GT" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$Fm" resolve="key" />
                              </node>
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP$GU" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$Gz" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmP$G$" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmP$G_" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmP$GA" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;, the first key is &lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmP$GB" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$GC" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$GD" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$FZ" resolve="actualFirstKey" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmP$Gn" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmP$Go" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmP$Gp" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmP$Gq" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;, the first value is &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmP$Gr" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmP$Gs" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPBtJ" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPBtI" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBtK" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$Gb" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$Gc" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$Gd" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$Ge" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has first entry &lt;%s&gt;. It does contain this entry, but the first entry is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$Gf" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$Gg" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$Ft" resolve="expectedEntry" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$Gh" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$FK" resolve="actualFirstEntry" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$HF" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$HG" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$HH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$Lr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$Ls" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map's first key/value pair is not equal to the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$HI" role="jymVt">
      <property role="TrG5h" value="hasLastKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$HJ" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$HK" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$HL" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$HM" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmP$HN" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$HO" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmP$HP" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$HQ" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$HS" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$HT" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$HU" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmP$HV" role="37wK5m">
                  <property role="Xl_RC" value="has last key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$HW" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$HJ" resolve="key" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmP$HX" role="3cqZAp" />
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$HY" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$HZ" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do2DmJ" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="2OqwBi" id="5JQC2do2DmK" role="37wK5m">
                <node concept="1rXfSq" id="5JQC2do2DmL" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                </node>
                <node concept="liA8E" id="5JQC2do2DmM" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~SortedMap.lastKey():java.lang.Object" resolve="lastKey" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2do2DmN" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$HJ" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$I6" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmP$I7" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP$I8" role="3clFbw">
                <node concept="1rXfSq" id="5JQC2dmP$I9" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                </node>
                <node concept="liA8E" id="5JQC2dmP$Ia" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                  <node concept="37vLTw" id="5JQC2dmP$Ib" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$HJ" resolve="key" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$Id" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$Ie" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$If" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$Ig" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has last key &lt;%s&gt;. It does contain this key, but the last key is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$Ih" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$Ii" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$HJ" resolve="key" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmP$Ij" role="37wK5m">
                      <node concept="1rXfSq" id="5JQC2dmP$Ik" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$Il" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~SortedMap.lastKey():java.lang.Object" resolve="lastKey" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3cpWs6" id="5JQC2dmP$Im" role="3cqZAp" />
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmP$In" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$Io" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmP$Ip" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s has last key &lt;%s&gt;. It does not contain this key, and the last key is &lt;%s&gt;" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmP$Iq" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$Ir" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$HJ" resolve="key" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmP$Is" role="37wK5m">
                  <node concept="1rXfSq" id="5JQC2dmP$It" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$Iu" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedMap.lastKey():java.lang.Object" resolve="lastKey" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$Iv" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$Iw" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$Ix" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$Lt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$Lu" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map's last key is not equal to the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$Iy" role="jymVt">
      <property role="TrG5h" value="hasLastEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmP$Iz" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$I$" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$I_" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$IA" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$IB" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$IC" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$ID" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$IF" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$IE" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedEntry" />
            <node concept="3uibUv" id="5JQC2dmP$IG" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3uibUv" id="5JQC2dmP$IH" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dmP$II" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2do3nxa" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
              <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
              <node concept="37vLTw" id="5JQC2do3nxb" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$Iz" resolve="key" />
              </node>
              <node concept="37vLTw" id="5JQC2do3nxc" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$IA" resolve="value" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$IM" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmP$IN" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmP$IO" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
            </node>
            <node concept="liA8E" id="5JQC2dmP$IP" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$IR" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmP$IS" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmP$IT" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmP$IU" role="37wK5m">
                  <property role="Xl_RC" value="has last entry" />
                </node>
                <node concept="37vLTw" id="5JQC2dmP$IV" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                </node>
              </node>
            </node>
            <node concept="3cpWs6" id="5JQC2dmP$IW" role="3cqZAp" />
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmP$IY" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$IX" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualLastEntry" />
            <node concept="3uibUv" id="5JQC2dmP$IZ" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
              <node concept="3qTvmN" id="5JQC2dmP$J0" role="11_B2D" />
              <node concept="3qTvmN" id="5JQC2dmP$J1" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$J2" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmP$J3" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$J4" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~NavigableMap.lastEntry():java.util.Map$Entry" resolve="lastEntry" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmP$J5" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$J6" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2do1H4G" role="3fr31v">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="37vLTw" id="5JQC2do1H4H" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
              </node>
              <node concept="37vLTw" id="5JQC2do1H4I" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$Jb" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmP$Jd" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$Jc" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="actualLastKey" />
                <node concept="3uibUv" id="5JQC2dmP$Je" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPBtQ" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPBtP" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBtR" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$Jg" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmP$Jh" role="3clFbw">
                <node concept="2OqwBi" id="5JQC2dmP$Ji" role="2Oq$k0">
                  <node concept="1rXfSq" id="5JQC2dmP$Jj" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$Jk" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmP$Jl" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                  <node concept="37vLTw" id="5JQC2dmP$Jm" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmP$Jv" role="9aQIa">
                <node concept="2YIFZM" id="5JQC2do3MAM" role="3clFbw">
                  <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                  <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                  <node concept="37vLTw" id="5JQC2do3MAN" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$Jc" resolve="actualLastKey" />
                  </node>
                  <node concept="37vLTw" id="5JQC2do3MAO" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$Iz" resolve="key" />
                  </node>
                </node>
                <node concept="3clFbJ" id="5JQC2dmP$JF" role="9aQIa">
                  <node concept="2YIFZM" id="5JQC2do3FHu" role="3clFbw">
                    <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                    <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                    <node concept="2OqwBi" id="5JQC2do3FHv" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2do3FHw" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                      </node>
                      <node concept="liA8E" id="5JQC2do3FHx" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2do3FHy" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$IA" resolve="value" />
                    </node>
                  </node>
                  <node concept="3clFbJ" id="5JQC2dmP$JR" role="9aQIa">
                    <node concept="2OqwBi" id="5JQC2dmP$JS" role="3clFbw">
                      <node concept="1rXfSq" id="5JQC2dmP$JT" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$JU" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~Map.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                        <node concept="37vLTw" id="5JQC2dmP$JV" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$Iz" resolve="key" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$K8" role="9aQIa">
                      <node concept="2OqwBi" id="5JQC2dmP$K9" role="3clFbw">
                        <node concept="1rXfSq" id="5JQC2dmP$Ka" role="2Oq$k0">
                          <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmP$Kb" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                          <node concept="37vLTw" id="5JQC2dmP$Kc" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$IA" resolve="value" />
                          </node>
                        </node>
                      </node>
                      <node concept="9aQIb" id="5JQC2dmP$KK" role="9aQIa">
                        <node concept="3clFbS" id="5JQC2dmP$KL" role="9aQI4">
                          <node concept="3clFbF" id="5JQC2dmP$KM" role="3cqZAp">
                            <node concept="1rXfSq" id="5JQC2dmP$KN" role="3clFbG">
                              <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                              <node concept="Xl_RD" id="5JQC2dmP$KO" role="37wK5m">
                                <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;. It does not contain this entry, and the last entry is &lt;%s&gt;" />
                              </node>
                              <node concept="1rXfSq" id="5JQC2dmP$KP" role="37wK5m">
                                <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmP$KQ" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                              </node>
                              <node concept="37vLTw" id="5JQC2dmP$KR" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$Ke" role="3clFbx">
                        <node concept="3cpWs8" id="5JQC2dmP$Kg" role="3cqZAp">
                          <node concept="3cpWsn" id="5JQC2dmP$Kf" role="3cpWs9">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="keys" />
                            <node concept="3uibUv" id="5JQC2dmP$Kh" role="1tU5fm">
                              <ref role="3uigEE" to="33ny:~Set" resolve="Set" />
                              <node concept="3uibUv" id="5JQC2dmP$Ki" role="11_B2D">
                                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                              </node>
                            </node>
                            <node concept="2ShNRf" id="5JQC2dmPBtU" role="33vP2m">
                              <node concept="1pGfFk" id="5JQC2dmPBtV" role="2ShVmc">
                                <ref role="37wK5l" to="33ny:~LinkedHashSet.&lt;init&gt;()" resolve="LinkedHashSet" />
                                <node concept="3uibUv" id="5JQC2do2LaW" role="1pMfVU">
                                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="1DcWWT" id="5JQC2dmP$Kl" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmP$KA" role="1DdaDG">
                            <node concept="1rXfSq" id="5JQC2dmP$KB" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP$KC" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                            </node>
                          </node>
                          <node concept="3cpWsn" id="5JQC2dmP$Kx" role="1Duv9x">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="actualEntry" />
                            <node concept="3uibUv" id="5JQC2dmP$Kz" role="1tU5fm">
                              <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                              <node concept="3qTvmN" id="5JQC2dmP$K$" role="11_B2D" />
                              <node concept="3qTvmN" id="5JQC2dmP$K_" role="11_B2D" />
                            </node>
                          </node>
                          <node concept="3clFbS" id="5JQC2dmP$Kn" role="2LFqv$">
                            <node concept="3clFbJ" id="5JQC2dmP$Ko" role="3cqZAp">
                              <node concept="2YIFZM" id="5JQC2do2cEL" role="3clFbw">
                                <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                                <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                                <node concept="2OqwBi" id="5JQC2do2BN2" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2do2BN1" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmP$Kx" resolve="actualEntry" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2do2BN3" role="2OqNvi">
                                    <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                                  </node>
                                </node>
                                <node concept="37vLTw" id="5JQC2do2cEN" role="37wK5m">
                                  <ref role="3cqZAo" node="5JQC2dmP$IA" resolve="value" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="5JQC2dmP$Kt" role="3clFbx">
                                <node concept="3clFbF" id="5JQC2dmP$Ku" role="3cqZAp">
                                  <node concept="2OqwBi" id="5JQC2dmPBu0" role="3clFbG">
                                    <node concept="37vLTw" id="5JQC2dmPBtZ" role="2Oq$k0">
                                      <ref role="3cqZAo" node="5JQC2dmP$Kf" resolve="keys" />
                                    </node>
                                    <node concept="liA8E" id="5JQC2dmPBu1" role="2OqNvi">
                                      <ref role="37wK5l" to="33ny:~Set.add(java.lang.Object):boolean" resolve="add" />
                                      <node concept="2OqwBi" id="5JQC2dmPCJB" role="37wK5m">
                                        <node concept="37vLTw" id="5JQC2dmPCJA" role="2Oq$k0">
                                          <ref role="3cqZAo" node="5JQC2dmP$Kx" resolve="actualEntry" />
                                        </node>
                                        <node concept="liA8E" id="5JQC2dmPCJC" role="2OqNvi">
                                          <ref role="37wK5l" to="33ny:~Map$Entry.getKey():java.lang.Object" resolve="getKey" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmP$KD" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmP$KE" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmP$KF" role="37wK5m">
                              <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;. It does contain this value, but the value is mapped from the keys &lt;%s&gt;, and the last entry is &lt;%s&gt;" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmP$KG" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$KH" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$KI" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$Kf" resolve="keys" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmP$KJ" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbS" id="5JQC2dmP$JX" role="3clFbx">
                      <node concept="3clFbF" id="5JQC2dmP$JY" role="3cqZAp">
                        <node concept="1rXfSq" id="5JQC2dmP$JZ" role="3clFbG">
                          <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                          <node concept="Xl_RD" id="5JQC2dmP$K0" role="37wK5m">
                            <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;. It does contain this key, but the key is mapped to &lt;%s&gt;, and the last entry is &lt;%s&gt;" />
                          </node>
                          <node concept="1rXfSq" id="5JQC2dmP$K1" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP$K2" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                          </node>
                          <node concept="2OqwBi" id="5JQC2dmP$K3" role="37wK5m">
                            <node concept="1rXfSq" id="5JQC2dmP$K4" role="2Oq$k0">
                              <ref role="37wK5l" node="5JQC2dmP$KV" resolve="actualAsNavigableMap" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmP$K5" role="2OqNvi">
                              <ref role="37wK5l" to="33ny:~Map.get(java.lang.Object):java.lang.Object" resolve="get" />
                              <node concept="37vLTw" id="5JQC2dmP$K6" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$Iz" resolve="key" />
                              </node>
                            </node>
                          </node>
                          <node concept="37vLTw" id="5JQC2dmP$K7" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$JK" role="3clFbx">
                    <node concept="3clFbF" id="5JQC2dmP$JL" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmP$JM" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                        <node concept="Xl_RD" id="5JQC2dmP$JN" role="37wK5m">
                          <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;, the last key is &lt;%s&gt;" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmP$JO" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$JP" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmP$JQ" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$Jc" resolve="actualLastKey" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmP$J$" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmP$J_" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmP$JA" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                      <node concept="Xl_RD" id="5JQC2dmP$JB" role="37wK5m">
                        <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;, the last value is &lt;%s&gt;" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmP$JC" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmP$JD" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPBu5" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPBu4" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBu6" role="2OqNvi">
                          <ref role="37wK5l" to="33ny:~Map$Entry.getValue():java.lang.Object" resolve="getValue" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$Jo" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$Jp" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$Jq" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$Jr" role="37wK5m">
                      <property role="Xl_RC" value="Not true that %s has last entry &lt;%s&gt;. It does contain this entry, but the last entry is &lt;%s&gt;" />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$Js" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$Jt" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$IE" resolve="expectedEntry" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmP$Ju" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmP$IX" resolve="actualLastEntry" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$KS" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$KT" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$KU" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$Lv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$Lw" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the map's last key/value pair is not equal to the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$KV" role="jymVt">
      <property role="TrG5h" value="actualAsNavigableMap" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$KW" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$KX" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmP$KY" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmP$DP" resolve="actualAsNavigableMap" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$KZ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$L0" role="3clF45">
        <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
        <node concept="3qTvmN" id="5JQC2dmP$L1" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmP$L2" role="11_B2D" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$L3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$Lx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$Ly" role="1dT_Ay">
            <property role="1dT_AB" value="Provides access to the actual value via {@link NavigableMap}'s API. This may or may be the same" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$Lz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$L$" role="1dT_Ay">
            <property role="1dT_AB" value="object as returned by {@link #actual}, therefore you should avoid identity (e.g. {@code ==}) or" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$L_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LA" role="1dT_Ay">
            <property role="1dT_AB" value="type (e.g. {@code instanceof}) assertions on this object." />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmP$_j" role="jymVt">
      <property role="TrG5h" value="SortedMapAsNavigableMap" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmP$_k" role="1B3o_S" />
      <node concept="16euLQ" id="5JQC2dmP$_l" role="16eVyc">
        <property role="TrG5h" value="K" />
      </node>
      <node concept="16euLQ" id="5JQC2dmP$_m" role="16eVyc">
        <property role="TrG5h" value="V" />
      </node>
      <node concept="3uibUv" id="5JQC2dmP$_n" role="1zkMxy">
        <ref role="3uigEE" to="3o3z:~ForwardingSortedMap" resolve="ForwardingSortedMap" />
        <node concept="16syzq" id="5JQC2dmP$_o" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
        <node concept="16syzq" id="5JQC2dmP$_p" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmP$_q" role="EKbjA">
        <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
        <node concept="16syzq" id="5JQC2dmP$_r" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
        <node concept="16syzq" id="5JQC2dmP$_s" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
        </node>
      </node>
      <node concept="3UR2Jj" id="5JQC2dmP$DN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$LB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LC" role="1dT_Ay">
            <property role="1dT_AB" value=" A view into a {@link SortedMap} as a {@link NavigableMap}, enabling Truth to support assertions" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LE" role="1dT_Ay">
            <property role="1dT_AB" value=" on {@code NavigableMap}'s API even if the user only has a {@code SortedMap}. For now only the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LG" role="1dT_Ay">
            <property role="1dT_AB" value=" functionality needed for the existing assertions has been implemented. Reference {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LI" role="1dT_Ay">
            <property role="1dT_AB" value=" com.google.common.collect.ForwardingNavigableMap}'s behavior when implementing additional" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LK" role="1dT_Ay">
            <property role="1dT_AB" value=" methods." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LM" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LO" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;TODO(diamondm): consider moving this to com.google.common.collect if it's ever fully" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$LP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$LQ" role="1dT_Ay">
            <property role="1dT_AB" value=" implemented." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmP$_t" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="delegate" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$_v" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
          <node concept="16syzq" id="5JQC2dmP$_w" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$_x" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$_y" role="1B3o_S" />
      </node>
      <node concept="2YIFZL" id="5JQC2dmP$_z" role="jymVt">
        <property role="TrG5h" value="wrapIfNecessary" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="16euLQ" id="5JQC2dmP$_$" role="16eVyc">
          <property role="TrG5h" value="K" />
        </node>
        <node concept="16euLQ" id="5JQC2dmP$__" role="16eVyc">
          <property role="TrG5h" value="V" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$_A" role="3clF46">
          <property role="TrG5h" value="map" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$_B" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
            <node concept="16syzq" id="5JQC2dmP$_C" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$_$" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$_D" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$__" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$_E" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmP$_F" role="3cqZAp">
            <node concept="2ZW3vV" id="5JQC2dmP$_I" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmP$_G" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmP$_A" resolve="map" />
              </node>
              <node concept="3uibUv" id="5JQC2dmP$_H" role="2ZW6by">
                <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmP$_K" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmP$_L" role="3cqZAp">
                <node concept="10QFUN" id="5JQC2dmP$_M" role="3cqZAk">
                  <node concept="37vLTw" id="5JQC2dmP$_N" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$_A" resolve="map" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmP$_O" role="10QFUM">
                    <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
                    <node concept="16syzq" id="5JQC2dmP$_P" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmP$_$" resolve="K" />
                    </node>
                    <node concept="16syzq" id="5JQC2dmP$_Q" role="11_B2D">
                      <ref role="16sUi3" node="5JQC2dmP$__" resolve="V" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmP$_R" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBu7" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmPBwl" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmP$_Z" resolve="SortedMapSubject.SortedMapAsNavigableMap" />
                <node concept="37vLTw" id="5JQC2dmPBwm" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$_A" resolve="map" />
                </node>
                <node concept="16syzq" id="5JQC2dmPBwn" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmP$_$" resolve="K" />
                </node>
                <node concept="16syzq" id="5JQC2dmPBwo" role="1pMfVU">
                  <ref role="16sUi3" node="5JQC2dmP$__" resolve="V" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmP$_W" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
          <node concept="16syzq" id="5JQC2dmP$_X" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_$" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$_Y" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$__" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmP$_Z" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$A0" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmP$A1" role="3clF46">
          <property role="TrG5h" value="delegate" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$A2" role="1tU5fm">
            <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
            <node concept="16syzq" id="5JQC2dmP$A3" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
            </node>
            <node concept="16syzq" id="5JQC2dmP$A4" role="11_B2D">
              <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$A5" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$A6" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$A7" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$A8" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$A9" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$Aa" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$_t" resolve="delegate" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2do4zNQ" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2do4zNR" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$A1" resolve="delegate" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Ad" role="jymVt">
        <property role="TrG5h" value="delegate" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Ae" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$Af" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$Ag" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmP$Ah" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmP$_t" resolve="delegate" />
            </node>
          </node>
        </node>
        <node concept="3Tmbuc" id="5JQC2dmP$Ai" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Aj" role="3clF45">
          <ref role="3uigEE" to="33ny:~SortedMap" resolve="SortedMap" />
          <node concept="16syzq" id="5JQC2dmP$Ak" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Al" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Am" role="jymVt">
        <property role="TrG5h" value="ceilingEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$An" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Ao" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$Ap" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$Aq" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$As" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBwp" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPBwq" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$At" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Au" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$Av" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Aw" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Ax" role="jymVt">
        <property role="TrG5h" value="ceilingKey" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Ay" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Az" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$A$" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$A_" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$AB" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBwr" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPBws" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$AC" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmP$AD" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$AE" role="jymVt">
        <property role="TrG5h" value="descendingKeySet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$AF" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$AG" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$AI" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBwt" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPBwu" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$AJ" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$AK" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmP$AL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$AM" role="jymVt">
        <property role="TrG5h" value="descendingMap" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$AN" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$AO" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$AQ" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBwv" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPBww" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$AR" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$AS" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
          <node concept="16syzq" id="5JQC2dmP$AT" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$AU" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$AV" role="jymVt">
        <property role="TrG5h" value="firstEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$AW" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$AX" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmP$AZ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmP$AY" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="entryIterator" />
              <node concept="3uibUv" id="5JQC2dmP$B0" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~Iterator" resolve="Iterator" />
                <node concept="3uibUv" id="5JQC2dmP$B1" role="11_B2D">
                  <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
                  <node concept="16syzq" id="5JQC2dmP$B2" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
                  </node>
                  <node concept="16syzq" id="5JQC2dmP$B3" role="11_B2D">
                    <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
                  </node>
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmP$B4" role="33vP2m">
                <node concept="2OqwBi" id="5JQC2dmP$B5" role="2Oq$k0">
                  <node concept="1rXfSq" id="5JQC2dmP$B6" role="2Oq$k0">
                    <ref role="37wK5l" node="5JQC2dmP$Ad" resolve="delegate" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$B7" role="2OqNvi">
                    <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmP$B8" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Set.iterator():java.util.Iterator" resolve="iterator" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmP$B9" role="3cqZAp">
            <node concept="3K4zz7" id="5JQC2dmP$Bd" role="3cqZAk">
              <node concept="2OqwBi" id="5JQC2dmPBys" role="3K4Cdx">
                <node concept="37vLTw" id="5JQC2dmPByr" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$AY" resolve="entryIterator" />
                </node>
                <node concept="liA8E" id="5JQC2dmPByt" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.hasNext():boolean" resolve="hasNext" />
                </node>
              </node>
              <node concept="2OqwBi" id="5JQC2dmPByz" role="3K4E3e">
                <node concept="37vLTw" id="5JQC2dmPByy" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$AY" resolve="entryIterator" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBy$" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~Iterator.next():java.lang.Object" resolve="next" />
                </node>
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$Bc" role="3K4GZi" />
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$Be" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Bf" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$Bg" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Bh" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Bi" role="jymVt">
        <property role="TrG5h" value="floorEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Bj" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Bk" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$Bl" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$Bm" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$Bo" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBy_" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByA" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$Bp" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Bq" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$Br" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Bs" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Bt" role="jymVt">
        <property role="TrG5h" value="floorKey" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Bu" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Bv" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$Bw" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$Bx" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$Bz" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByB" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByC" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$B$" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmP$B_" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$BA" role="jymVt">
        <property role="TrG5h" value="headMap" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$BB" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$BC" role="3clF46">
          <property role="TrG5h" value="toKey" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$BD" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$BE" role="3clF46">
          <property role="TrG5h" value="inclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmP$BF" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$BG" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$BI" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByD" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByE" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$BJ" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$BK" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
          <node concept="16syzq" id="5JQC2dmP$BL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$BM" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$BN" role="jymVt">
        <property role="TrG5h" value="higherEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$BO" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$BP" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$BQ" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$BR" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$BT" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByF" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByG" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$BU" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$BV" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$BW" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$BX" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$BY" role="jymVt">
        <property role="TrG5h" value="higherKey" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$BZ" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$C0" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$C1" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$C2" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$C4" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByH" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByI" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$C5" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmP$C6" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$C7" role="jymVt">
        <property role="TrG5h" value="lastEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$C8" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$C9" role="3clF47">
          <node concept="SfApY" id="5JQC2dmP$Cx" role="3cqZAp">
            <node concept="TDmWw" id="5JQC2dmP$Cy" role="TEbGg">
              <node concept="3clFbS" id="5JQC2dmP$Cu" role="TDEfX">
                <node concept="3cpWs6" id="5JQC2dmP$Cv" role="3cqZAp">
                  <node concept="10Nm6u" id="5JQC2dmP$Cw" role="3cqZAk" />
                </node>
              </node>
              <node concept="3cpWsn" id="5JQC2dmP$Cq" role="TDEfY">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="e" />
                <node concept="3uibUv" id="5JQC2dmP$Cs" role="1tU5fm">
                  <ref role="3uigEE" to="33ny:~NoSuchElementException" resolve="NoSuchElementException" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmP$Cb" role="SfCbr">
              <node concept="3cpWs8" id="5JQC2dmP$Cd" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmP$Cc" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="lastKey" />
                  <node concept="16syzq" id="5JQC2dmP$Ce" role="1tU5fm">
                    <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmP$Cf" role="33vP2m">
                    <node concept="1rXfSq" id="5JQC2dmP$Cg" role="2Oq$k0">
                      <ref role="37wK5l" node="5JQC2dmP$Ad" resolve="delegate" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmP$Ch" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~SortedMap.lastKey():java.lang.Object" resolve="lastKey" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmP$Ci" role="3cqZAp">
                <node concept="2YIFZM" id="5JQC2do2v4Y" role="3cqZAk">
                  <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
                  <ref role="37wK5l" to="3o3z:~Iterables.getOnlyElement(java.lang.Iterable):java.lang.Object" resolve="getOnlyElement" />
                  <node concept="2OqwBi" id="5JQC2do2v4Z" role="37wK5m">
                    <node concept="2OqwBi" id="5JQC2do2v50" role="2Oq$k0">
                      <node concept="1rXfSq" id="5JQC2do2v51" role="2Oq$k0">
                        <ref role="37wK5l" node="5JQC2dmP$Ad" resolve="delegate" />
                      </node>
                      <node concept="liA8E" id="5JQC2do2v52" role="2OqNvi">
                        <ref role="37wK5l" to="33ny:~SortedMap.tailMap(java.lang.Object):java.util.SortedMap" resolve="tailMap" />
                        <node concept="37vLTw" id="5JQC2do2v53" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$Cc" resolve="lastKey" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2do2v54" role="2OqNvi">
                      <ref role="37wK5l" to="33ny:~SortedMap.entrySet():java.util.Set" resolve="entrySet" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$Cz" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$C$" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$C_" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$CA" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$CB" role="jymVt">
        <property role="TrG5h" value="lowerEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$CC" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$CD" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$CE" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$CF" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$CH" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByN" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByO" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$CI" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$CJ" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$CK" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$CL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$CM" role="jymVt">
        <property role="TrG5h" value="lowerKey" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$CN" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$CO" role="3clF46">
          <property role="TrG5h" value="key" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$CP" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$CQ" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$CS" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByP" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByQ" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$CT" role="1B3o_S" />
        <node concept="16syzq" id="5JQC2dmP$CU" role="3clF45">
          <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$CV" role="jymVt">
        <property role="TrG5h" value="navigableKeySet" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$CW" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$CX" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$CZ" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByR" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByS" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$D0" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$D1" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableSet" resolve="NavigableSet" />
          <node concept="16syzq" id="5JQC2dmP$D2" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$D3" role="jymVt">
        <property role="TrG5h" value="pollFirstEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$D4" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$D5" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$D7" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByT" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByU" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$D8" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$D9" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$Da" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Db" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Dc" role="jymVt">
        <property role="TrG5h" value="pollLastEntry" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Dd" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$De" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$Dg" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByV" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByW" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$Dh" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Di" role="3clF45">
          <ref role="3uigEE" to="33ny:~Map$Entry" resolve="Map.Entry" />
          <node concept="16syzq" id="5JQC2dmP$Dj" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$Dk" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$Dl" role="jymVt">
        <property role="TrG5h" value="subMap" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$Dm" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Dn" role="3clF46">
          <property role="TrG5h" value="fromKey" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$Do" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Dp" role="3clF46">
          <property role="TrG5h" value="fromInclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmP$Dq" role="1tU5fm" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Dr" role="3clF46">
          <property role="TrG5h" value="toKey" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$Ds" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$Dt" role="3clF46">
          <property role="TrG5h" value="toInclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmP$Du" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$Dv" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$Dx" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByX" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPByY" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$Dy" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$Dz" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
          <node concept="16syzq" id="5JQC2dmP$D$" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$D_" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$DA" role="jymVt">
        <property role="TrG5h" value="tailMap" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$DB" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$DC" role="3clF46">
          <property role="TrG5h" value="fromKey" />
          <property role="3TUv4t" value="false" />
          <node concept="16syzq" id="5JQC2dmP$DD" role="1tU5fm">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$DE" role="3clF46">
          <property role="TrG5h" value="inclusive" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmP$DF" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$DG" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmP$DI" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPByZ" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPBz0" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$DJ" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$DK" role="3clF45">
          <ref role="3uigEE" to="33ny:~NavigableMap" resolve="NavigableMap" />
          <node concept="16syzq" id="5JQC2dmP$DL" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_l" resolve="K" />
          </node>
          <node concept="16syzq" id="5JQC2dmP$DM" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmP$_m" resolve="V" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$8X">
    <property role="TrG5h" value="AbstractFailureStrategy" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmP$8Y" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmP$8Z" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$9K" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$9N" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$9O" role="1dT_Ay">
          <property role="1dT_AB" value="A skeletal implementation of {@code FailureStrategy} that defines {@link #fail(String)} and both" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$9P" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$9Q" role="1dT_Ay">
          <property role="1dT_AB" value="{@code #failComparing} methods in terms of {@link #fail(String, Throwable)}. For most" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$9R" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$9S" role="1dT_Ay">
          <property role="1dT_AB" value="implementations this should be sufficient and easier to use than directly extending {@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$9T" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$9U" role="1dT_Ay">
          <property role="1dT_AB" value="FailureStrategy}." />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$90" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$91" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$92" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$93" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$94" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$95" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmP$96" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
            <node concept="37vLTw" id="5JQC2dmP$97" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$92" resolve="message" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmP$98" role="37wK5m" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$99" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$9a" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$9b" role="jymVt">
      <property role="TrG5h" value="failComparing" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$9c" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9d" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9e" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9f" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9g" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9h" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9i" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$9j" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$9k" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmP$9l" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmP$9s" resolve="failComparing" />
            <node concept="37vLTw" id="5JQC2dmP$9m" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$9d" resolve="message" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$9n" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$9f" resolve="expected" />
            </node>
            <node concept="37vLTw" id="5JQC2dmP$9o" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$9h" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmP$9p" role="37wK5m" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$9q" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$9r" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$9s" role="jymVt">
      <property role="TrG5h" value="failComparing" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$9t" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9u" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9v" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9w" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9x" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9y" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9z" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$9$" role="3clF46">
        <property role="TrG5h" value="cause" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$9_" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$9A" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmP$9W" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tqm" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tqn" role="1PaTwD">
              <property role="3oM_SC" value="TODO(diamondm)" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqo" role="1PaTwD">
              <property role="3oM_SC" value="should" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqp" role="1PaTwD">
              <property role="3oM_SC" value="this" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqq" role="1PaTwD">
              <property role="3oM_SC" value="be" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqr" role="1PaTwD">
              <property role="3oM_SC" value="fail(Platform.comparisonFailure(...).getMessage());?" />
            </node>
          </node>
        </node>
        <node concept="3SKdUt" id="5JQC2dmP$9Y" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tqs" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tqt" role="1PaTwD">
              <property role="3oM_SC" value="It" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqu" role="1PaTwD">
              <property role="3oM_SC" value="unnecessarily" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqv" role="1PaTwD">
              <property role="3oM_SC" value="allocates" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqw" role="1PaTwD">
              <property role="3oM_SC" value="an" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqx" role="1PaTwD">
              <property role="3oM_SC" value="exception," />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqy" role="1PaTwD">
              <property role="3oM_SC" value="but" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tqz" role="1PaTwD">
              <property role="3oM_SC" value="ensures" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tq$" role="1PaTwD">
              <property role="3oM_SC" value="a" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tq_" role="1PaTwD">
              <property role="3oM_SC" value="consistent" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TqA" role="1PaTwD">
              <property role="3oM_SC" value="failure" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8TqB" role="1PaTwD">
              <property role="3oM_SC" value="message." />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$9B" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmP$9C" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwSQ" resolve="fail" />
            <node concept="2YIFZM" id="5JQC2dmPBz4" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$r_" resolve="messageFor" />
              <node concept="37vLTw" id="5JQC2dmPBz5" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$9u" resolve="message" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPBz6" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$9w" resolve="expected" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPBz7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$9y" resolve="actual" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmP$9H" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$9$" resolve="cause" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$9I" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$9J" role="3clF45" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzCp">
    <property role="TrG5h" value="PrimitiveByteArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzCq" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzCr" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPzCs" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzCp" resolve="PrimitiveByteArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPzCu" role="11_B2D">
        <node concept="10PrrI" id="5JQC2dmPzCt" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzFF" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzFM" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzFN" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code byte[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzFO" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzFP" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzFQ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzFR" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzCA" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzCB" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzCC" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzCD" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzCE" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzCF" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzCH" role="1tU5fm">
          <node concept="10PrrI" id="5JQC2dmPzCG" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzCI" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBJ5" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPBJ6" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzCC" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPBJ7" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzCE" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzCM" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzCN" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzCO" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzCP" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPzCQ" role="3cqZAk">
            <property role="Xl_RC" value="byte" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzCR" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzCS" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzCT" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzCU" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzCV" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzCW" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doDYLQ" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Bytes" resolve="Bytes" />
            <ref role="37wK5l" to="gxwn:~Bytes.asList(byte...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="5JQC2doDYLR" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzCZ" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzD0" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPzD1" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Byte" resolve="Byte" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzD2" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzD3" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzD4" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzD5" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doE1Pw" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzD6" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzD8" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzD7" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPzDa" role="1tU5fm">
              <node concept="10PrrI" id="5JQC2dmPzD9" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPzDb" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPzDc" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPzDd" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPzDe" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPzD7" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPzDf" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPzD4" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzDh" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPzDi" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPzFZ" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8TqC" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8TqD" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPzDW" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPzDX" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPzDS" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPzDT" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPzDU" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPzDV" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzD4" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPzDO" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPzDQ" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzDk" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPzDm" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPzDl" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPzDo" role="1tU5fm">
                  <node concept="10PrrI" id="5JQC2dmPzDn" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPzDp" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPzDq" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPzD4" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPzDs" role="10QFUM">
                    <node concept="10PrrI" id="5JQC2dmPzDr" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPzDt" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPzDu" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPBJR" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(byte[],byte[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPBJS" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzD7" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPBJT" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzDl" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzDz" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPzD$" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPBJW" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPBJV" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPBJX" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPwSZ" resolve="failComparing" />
                      <node concept="3cpWs3" id="5JQC2dmPBJY" role="37wK5m">
                        <node concept="3cpWs3" id="5JQC2dmPBJZ" role="3uHU7B">
                          <node concept="3cpWs3" id="5JQC2dmPBK0" role="3uHU7B">
                            <node concept="3cpWs3" id="5JQC2dmPBK1" role="3uHU7B">
                              <node concept="Xl_RD" id="5JQC2dmPBK2" role="3uHU7B">
                                <property role="Xl_RC" value="Not true that " />
                              </node>
                              <node concept="1rXfSq" id="5JQC2dmPBK3" role="3uHU7w">
                                <ref role="37wK5l" node="5JQC2dmPwtV" resolve="getDisplaySubject" />
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPBK4" role="3uHU7w">
                              <property role="Xl_RC" value=" is equal to &lt;" />
                            </node>
                          </node>
                          <node concept="2YIFZM" id="5JQC2dmPCFN" role="3uHU7w">
                            <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                            <ref role="37wK5l" to="33ny:~Arrays.toString(byte[]):java.lang.String" resolve="toString" />
                            <node concept="37vLTw" id="5JQC2dmPCFO" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzDl" resolve="expectedArray" />
                            </node>
                          </node>
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmPBK7" role="3uHU7w">
                          <property role="Xl_RC" value="&gt;;" />
                        </node>
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPBKa" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPzE1" resolve="base16" />
                        <node concept="37vLTw" id="5JQC2dmPBKb" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzDl" resolve="expectedArray" />
                        </node>
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPBKe" role="37wK5m">
                        <ref role="37wK5l" node="5JQC2dmPzE1" resolve="base16" />
                        <node concept="1rXfSq" id="5JQC2dmPBKf" role="37wK5m">
                          <ref role="37wK5l" node="5JQC2dmPwtG" resolve="getSubject" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzDY" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzDZ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzE0" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzFS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzFT" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzFU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzFV" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzFW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzFX" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzE1" role="jymVt">
      <property role="TrG5h" value="base16" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzE2" role="3clF46">
        <property role="TrG5h" value="bytes" />
        <property role="3TUv4t" value="false" />
        <node concept="10Q1$e" id="5JQC2dmPzE4" role="1tU5fm">
          <node concept="10PrrI" id="5JQC2dmPzE3" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzE5" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzE7" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzE6" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="sb" />
            <node concept="3uibUv" id="5JQC2dmPzE8" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
            </node>
            <node concept="2ShNRf" id="5JQC2dmPBKk" role="33vP2m">
              <node concept="1pGfFk" id="5JQC2dmPBOf" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;(int)" resolve="StringBuilder" />
                <node concept="17qRlL" id="5JQC2dmPBOg" role="37wK5m">
                  <node concept="3cmrfG" id="5JQC2dmPBOh" role="3uHU7B">
                    <property role="3cmrfH" value="2" />
                  </node>
                  <node concept="2OqwBi" id="5JQC2dmPCFD" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmPCFC" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPzE2" resolve="bytes" />
                    </node>
                    <node concept="1Rwk04" id="5JQC2dmQb_5" role="2OqNvi" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1DcWWT" id="5JQC2dmPzEd" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPzE$" role="1DdaDG">
            <ref role="3cqZAo" node="5JQC2dmPzE2" resolve="bytes" />
          </node>
          <node concept="3cpWsn" id="5JQC2dmPzEx" role="1Duv9x">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="b" />
            <node concept="10PrrI" id="5JQC2dmPzEz" role="1tU5fm" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPzEf" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPzEg" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPzEh" role="3clFbG">
                <node concept="2OqwBi" id="5JQC2dmPBOl" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPBOk" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPzE6" resolve="sb" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBOm" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.append(char):java.lang.StringBuilder" resolve="append" />
                    <node concept="AH0OO" id="5JQC2dmPBOn" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPBOo" role="AHHXb">
                        <ref role="3cqZAo" node="5JQC2dmPzCv" resolve="hexDigits" />
                      </node>
                      <node concept="pVHWs" id="5JQC2dmPBOp" role="AHEQo">
                        <node concept="1eOMI4" id="5JQC2dmPBOq" role="3uHU7B">
                          <node concept="1GS532" id="5JQC2dmPBOr" role="1eOMHV">
                            <node concept="37vLTw" id="5JQC2dmPBOs" role="3uHU7B">
                              <ref role="3cqZAo" node="5JQC2dmPzEx" resolve="b" />
                            </node>
                            <node concept="3cmrfG" id="5JQC2dmPBOt" role="3uHU7w">
                              <property role="3cmrfH" value="4" />
                            </node>
                          </node>
                        </node>
                        <node concept="2nou5x" id="5JQC2dmPBOu" role="3uHU7w">
                          <property role="2noCCI" value="f" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPzEr" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(char):java.lang.StringBuilder" resolve="append" />
                  <node concept="AH0OO" id="5JQC2dmPzEs" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPzEt" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmPzCv" resolve="hexDigits" />
                    </node>
                    <node concept="pVHWs" id="5JQC2dmPzEu" role="AHEQo">
                      <node concept="37vLTw" id="5JQC2dmPzEv" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmPzEx" resolve="b" />
                      </node>
                      <node concept="2nou5x" id="5JQC2dmPzEw" role="3uHU7w">
                        <property role="2noCCI" value="f" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPzE_" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBOy" role="3cqZAk">
            <node concept="37vLTw" id="5JQC2dmPBOx" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzE6" resolve="sb" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBOz" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzEB" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzEC" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPzCv" role="jymVt">
      <property role="TrG5h" value="hexDigits" />
      <property role="3TUv4t" value="true" />
      <node concept="10Q1$e" id="5JQC2dmPzCx" role="1tU5fm">
        <node concept="10Pfzv" id="5JQC2dmPzCw" role="10Q1$1" />
      </node>
      <node concept="2OqwBi" id="5JQC2dmPzCy" role="33vP2m">
        <node concept="Xl_RD" id="5JQC2dmPzCz" role="2Oq$k0">
          <property role="Xl_RC" value="0123456789ABCDEF" />
        </node>
        <node concept="liA8E" id="5JQC2dmPzC$" role="2OqNvi">
          <ref role="37wK5l" to="wyt6:~String.toCharArray():char[]" resolve="toCharArray" />
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzC_" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPzED" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzEE" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzEF" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzEG" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doE3Or" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzEH" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzEJ" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzEI" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPzEL" role="1tU5fm">
              <node concept="10PrrI" id="5JQC2dmPzEK" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPzEM" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPzFi" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPzFj" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPzFh" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPzG7" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8TqE" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8TqF" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqG" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqH" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqI" role="1PaTwD">
                    <property role="3oM_SC" value="byte[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqJ" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqK" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqL" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqM" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqN" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqO" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqP" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8TqQ" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPzFd" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPzFf" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzEO" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPzEQ" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPzEP" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPzES" role="1tU5fm">
                  <node concept="10PrrI" id="5JQC2dmPzER" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPzET" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPzEU" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPzEF" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPzEW" role="10QFUM">
                    <node concept="10PrrI" id="5JQC2dmPzEV" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPzEX" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPzEY" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPzEZ" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPzF0" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPzEI" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPzF1" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPzEF" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPBO_" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(byte[],byte[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPBOA" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzEI" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPBOB" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzEP" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPzF6" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPzF7" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPzF8" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPzF9" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPzFa" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmPBOD" role="37wK5m">
                      <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                      <ref role="37wK5l" to="33ny:~Arrays.toString(byte[]):java.lang.String" resolve="toString" />
                      <node concept="37vLTw" id="5JQC2dmPBOE" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzEP" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzFk" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzFl" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzFm" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzG0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzG1" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzG2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzG3" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzG4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzG5" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzFn" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzFo" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzFp" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPzFC" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPzFq" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPzFr" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzFs" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPzFt" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPzFu" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPzFv" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzFw" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPzFx" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPzCT" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPzFy" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPzFz" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPzF$" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPzF_" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzFA" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPzFB" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPzCT" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzFD" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzFE" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw1A">
    <property role="TrG5h" value="AbstractArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="16euLQ" id="5JQC2dmPw1B" role="16eVyc">
      <property role="TrG5h" value="S" />
      <node concept="3uibUv" id="5JQC2dmPw1C" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
        <node concept="16syzq" id="5JQC2dmUuWL" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPw1B" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmUv0T" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPw1F" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="16euLQ" id="5JQC2dmPw1F" role="16eVyc">
      <property role="TrG5h" value="T" />
    </node>
    <node concept="3uibUv" id="5JQC2dmPw1G" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="16syzq" id="5JQC2dmPw1H" role="11_B2D">
        <ref role="16sUi3" node="5JQC2dmPw1B" resolve="S" />
      </node>
      <node concept="16syzq" id="5JQC2dmPw1I" role="11_B2D">
        <ref role="16sUi3" node="5JQC2dmPw1F" resolve="T" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPw3W" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw42" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw43" role="1dT_Ay">
          <property role="1dT_AB" value=" A common supertype for Array subjects, abstracting some common display and error infrastructure." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw44" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw45" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw46" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw47" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPw1J" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPw1K" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPw1L" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw1M" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw1N" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw1O" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPw1P" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPw1F" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw1Q" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBOF" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPBOG" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw1L" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPBOH" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw1N" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw1U" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw1V" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPw1W" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPw1X" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPw1Y" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPw1Z" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPw2N" resolve="listRepresentation" />
              </node>
              <node concept="liA8E" id="5JQC2dmPw20" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw22" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPw23" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPw24" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwuY" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPw25" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw26" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw27" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw28" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw48" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw49" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the array is not empty (i.e. {@code array.length != 0}). " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw29" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw2a" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPw2b" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPw2c" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPw2d" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPw2N" resolve="listRepresentation" />
            </node>
            <node concept="liA8E" id="5JQC2dmPw2e" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw2g" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPw2h" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPw2i" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwuY" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPw2j" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw2k" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw2l" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw2m" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw4a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4b" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the array is empty (i.e. {@code array.length == 0}). " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw2n" role="jymVt">
      <property role="TrG5h" value="hasLength" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPw2o" role="3clF46">
        <property role="TrG5h" value="length" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPw2p" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw2q" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPw2r" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmTL8V" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dmTL8W" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmTL8X" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPw2o" resolve="length" />
              </node>
              <node concept="3cmrfG" id="5JQC2dmTL8Y" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmTL8Z" role="37wK5m">
              <property role="Xl_RC" value="length (%s) must be &gt;= 0" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPw2x" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPw2y" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPw2z" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPw2$" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPw2N" resolve="listRepresentation" />
              </node>
              <node concept="liA8E" id="5JQC2dmPw2_" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPw2A" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPw2o" resolve="length" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw2C" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPw2D" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPw2E" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPw2F" role="37wK5m">
                  <property role="Xl_RC" value="has length" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPw2G" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPw2o" resolve="length" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw2H" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw2I" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw2J" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw4c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4d" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the array does not have the given length." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw4e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4f" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw4g" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4h" role="1dT_Ay">
            <property role="1dT_AB" value=" @throws IllegalArgumentException if {@code length &lt; 0}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw2K" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw2L" role="3clF47" />
      <node concept="3uibUv" id="5JQC2dmPw2M" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw2N" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw2O" role="3clF47" />
      <node concept="3uibUv" id="5JQC2dmPw2P" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3qTvmN" id="5JQC2dmPw2Q" role="11_B2D" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPw2R" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw4i" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4j" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a List representation suitable for displaying in a string. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw2S" role="jymVt">
      <property role="TrG5h" value="actualCustomStringRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw2T" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw2U" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw2V" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPw3c" role="3cqZAk">
            <node concept="1eOMI4" id="5JQC2dmPw2Z" role="3K4Cdx">
              <node concept="3clFbC" id="5JQC2dmPw2W" role="1eOMHV">
                <node concept="1rXfSq" id="5JQC2dmPw2X" role="3uHU7B">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPw2Y" role="3uHU7w" />
              </node>
            </node>
            <node concept="3cpWs3" id="5JQC2dmPw30" role="3K4E3e">
              <node concept="3cpWs3" id="5JQC2dmPw31" role="3uHU7B">
                <node concept="3cpWs3" id="5JQC2dmPw32" role="3uHU7B">
                  <node concept="3cpWs3" id="5JQC2dmPw33" role="3uHU7B">
                    <node concept="3cpWs3" id="5JQC2dmPw34" role="3uHU7B">
                      <node concept="Xl_RD" id="5JQC2dmPw35" role="3uHU7B">
                        <property role="Xl_RC" value="(" />
                      </node>
                      <node concept="1rXfSq" id="5JQC2dmPw36" role="3uHU7w">
                        <ref role="37wK5l" node="5JQC2dmPw2K" resolve="underlyingType" />
                      </node>
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPw37" role="3uHU7w">
                      <ref role="37wK5l" node="5JQC2dmPw3Q" resolve="brackets" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPw38" role="3uHU7w">
                    <property role="Xl_RC" value=") " />
                  </node>
                </node>
                <node concept="1rXfSq" id="5JQC2dmPw39" role="3uHU7w">
                  <ref role="37wK5l" node="5JQC2dmPw2N" resolve="listRepresentation" />
                </node>
              </node>
              <node concept="Xl_RD" id="5JQC2dmPw3a" role="3uHU7w">
                <property role="Xl_RC" value="" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmPw3b" role="3K4GZi">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPw3d" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPw3e" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw3f" role="jymVt">
      <property role="TrG5h" value="failWithBadType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPw3g" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw3h" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw3i" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPw3k" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw3j" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedBrackets" />
            <node concept="3uibUv" id="5JQC2dmPw3l" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmPw3m" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPw3o" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw3n" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedType" />
            <node concept="3uibUv" id="5JQC2dmPw3p" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
              <node concept="3qTvmN" id="5JQC2dmPw3q" role="11_B2D" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPBPv" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmPBPu" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPw3g" resolve="expected" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBPw" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPw3B" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPBP_" role="2$JKZa">
            <node concept="37vLTw" id="5JQC2dmPBP$" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPw3n" resolve="expectedType" />
            </node>
            <node concept="liA8E" id="5JQC2dmPBPA" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Class.isArray():boolean" resolve="isArray" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw3u" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPw3v" role="3cqZAp">
              <node concept="d57v9" id="5JQC2dmPw3w" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPw3x" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPw3j" resolve="expectedBrackets" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPw3y" role="37vLTx">
                  <property role="Xl_RC" value="[]" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPw3z" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPw3$" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPw3_" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPw3n" resolve="expectedType" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPBPF" role="37vLTx">
                  <node concept="37vLTw" id="5JQC2dmPBPE" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPw3n" resolve="expectedType" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPBPG" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getComponentType():java.lang.Class" resolve="getComponentType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPw3D" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw3C" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="expectedTypeString" />
            <node concept="3uibUv" id="5JQC2dmPw3E" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="3cpWs3" id="5JQC2dmPw3F" role="33vP2m">
              <node concept="2OqwBi" id="5JQC2dmPBPL" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmPBPK" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPw3n" resolve="expectedType" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBPM" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPw3H" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPw3j" resolve="expectedBrackets" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPw3I" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPw3J" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
            <node concept="Xl_RD" id="5JQC2dmPw3K" role="37wK5m">
              <property role="Xl_RC" value="Incompatible types compared. expected: %s, actual: %s%s" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmUf7e" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
              <ref role="37wK5l" node="5JQC2dmPxHw" resolve="compressType" />
              <node concept="37vLTw" id="5JQC2dmUf7f" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPw3C" resolve="expectedTypeString" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPw3N" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPw2K" resolve="underlyingType" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPw3O" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPw3Q" resolve="brackets" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3cqZAl" id="5JQC2dmPw3P" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPw3Q" role="jymVt">
      <property role="TrG5h" value="brackets" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw3R" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw3S" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPw3T" role="3cqZAk">
            <property role="Xl_RC" value="[]" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPw3U" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPw3V" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw4k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4l" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the brackets to put after the underlying type. Multi-dimensional array subjects should" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw4m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw4n" role="1dT_Ay">
            <property role="1dT_AB" value="override this to return the correct number of brackets." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="3HP615" id="5JQC2dmPy2W">
    <property role="TrG5h" value="DelegatedVerbFactory" />
    <property role="2bfB8j" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPy2X" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPy2Y" role="16eVyc">
      <property role="TrG5h" value="V" />
      <node concept="3uibUv" id="5JQC2dmPy2Z" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmPvSf" resolve="AbstractDelegatedVerb" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPy37" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPy3a" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3b" role="1dT_Ay">
          <property role="1dT_AB" value=" A generic version of {@link SubjectFactory} which defines its own verb type." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3c" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3d" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3e" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3f" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;The verb defines one or more {@code that()} methods which accept an object to test and return" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3g" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3h" role="1dT_Ay">
          <property role="1dT_AB" value=" a {@link Subject} which provides testing methods. Generally, if writing an extension to Truth," />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3i" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3j" role="1dT_Ay">
          <property role="1dT_AB" value=" you should use a {@link SubjectFactory} instead, and let Truth handle the verb glue." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3k" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3l" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3m" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3n" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;However, a {@link DelegatedVerbFactory} is useful when the generics on {@link SubjectFactory}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3o" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3p" role="1dT_Ay">
          <property role="1dT_AB" value=" are too strict - for example, if your custom {@link Subject} is parameterized, and you want to" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3q" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3r" role="1dT_Ay">
          <property role="1dT_AB" value=" infer the parameter type from the test object. See {@link DelegatedVerbFactoryTest} for an" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPy3s" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPy3t" role="1dT_Ay">
          <property role="1dT_AB" value=" example implementation." />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPy30" role="jymVt">
      <property role="TrG5h" value="createVerb" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPy31" role="1B3o_S" />
      <node concept="37vLTG" id="5JQC2dmPy32" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPy33" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPy34" role="3clF47" />
      <node concept="16syzq" id="5JQC2dmPy35" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPy2Y" resolve="V" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPy36" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPy3u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPy3v" role="1dT_Ay">
            <property role="1dT_AB" value="Instantiates a new V with {@code failureStrategy} and itself. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmP$ul">
    <property role="TrG5h" value="Expect" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmP$um" role="1B3o_S" />
    <node concept="2AHcQZ" id="5JQC2dmP$y_" role="2AJF6D">
      <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
      <node concept="2B6LJw" id="5JQC2dmP$yA" role="2B76xF">
        <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
        <node concept="Xl_RD" id="5JQC2dmP$yB" role="2B70Vg">
          <property role="Xl_RC" value="JUnit4" />
        </node>
      </node>
    </node>
    <node concept="3uibUv" id="5JQC2dmP$yC" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
    </node>
    <node concept="3uibUv" id="5JQC2dmP$yD" role="EKbjA">
      <ref role="3uigEE" to="a19p:~TestRule" resolve="TestRule" />
    </node>
    <node concept="312cEu" id="5JQC2dmP$un" role="jymVt">
      <property role="TrG5h" value="ExpectationGatherer" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmP$uo" role="1B3o_S" />
      <node concept="2AHcQZ" id="5JQC2dmP$up" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="3uibUv" id="5JQC2dmP$uq" role="1zkMxy">
        <ref role="3uigEE" node="5JQC2dmP$8X" resolve="AbstractFailureStrategy" />
      </node>
      <node concept="3UR2Jj" id="5JQC2dmP$wY" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$$X" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$$Y" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated To provide your own failure handling, use {@code new TestVerb(new" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$$Z" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_0" role="1dT_Ay">
            <property role="1dT_AB" value="    AbstractFailureStrategy() { ... })} instead of {@code Expect.create(new" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$_1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_2" role="1dT_Ay">
            <property role="1dT_AB" value="    ExpectationGatherer() { ... })}. Or, if you're testing that assertions on a custom {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$_3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_4" role="1dT_Ay">
            <property role="1dT_AB" value="    Subject} fail (using {@code ExpectationGatherer} to capture the failures), use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$_5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_6" role="1dT_Ay">
            <property role="1dT_AB" value="    ExpectFailure}." />
          </node>
        </node>
      </node>
      <node concept="312cEg" id="5JQC2dmP$ur" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="messages" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$ut" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3uibUv" id="5JQC2dmP$uu" role="11_B2D">
            <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
          </node>
        </node>
        <node concept="2ShNRf" id="5JQC2dmPBPQ" role="33vP2m">
          <node concept="1pGfFk" id="5JQC2dmPBPR" role="2ShVmc">
            <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
            <node concept="3uibUv" id="5JQC2dn09N4" role="1pMfVU">
              <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$ux" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmP$uy" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="showStackTrace" />
        <property role="3TUv4t" value="true" />
        <node concept="10P_77" id="5JQC2dmP$u$" role="1tU5fm" />
        <node concept="3Tm6S6" id="5JQC2dmP$u_" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmP$uA" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$uB" role="3clF45" />
        <node concept="3clFbS" id="5JQC2dmP$uC" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$uD" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$uE" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$uF" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$uG" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$uH" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$uy" resolve="showStackTrace" />
                </node>
              </node>
              <node concept="3clFbT" id="5JQC2dmP$uI" role="37vLTx">
                <property role="3clFbU" value="false" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$uJ" role="1B3o_S" />
      </node>
      <node concept="3clFbW" id="5JQC2dmP$uK" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$uL" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmP$uM" role="3clF46">
          <property role="TrG5h" value="showStackTrace" />
          <property role="3TUv4t" value="false" />
          <node concept="10P_77" id="5JQC2dmP$uN" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$uO" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$uP" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$uQ" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$uR" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$uS" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$uT" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$uy" resolve="showStackTrace" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmP$uU" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmP$uM" resolve="showStackTrace" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$uV" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$uW" role="jymVt">
        <property role="TrG5h" value="failComparing" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$uX" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$uY" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$uZ" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$v0" role="3clF46">
          <property role="TrG5h" value="expected" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$v1" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$v2" role="3clF46">
          <property role="TrG5h" value="actual" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$v3" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$v4" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$v5" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$v6" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$v7" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmP$v8" role="3clFbG">
              <ref role="37wK5l" node="5JQC2dmP$vg" resolve="fail" />
              <node concept="2YIFZM" id="5JQC2dmQbxx" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$r_" resolve="messageFor" />
                <node concept="37vLTw" id="5JQC2dmQbxy" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$uY" resolve="message" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbxz" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$v0" resolve="expected" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbx$" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$v2" resolve="actual" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmP$vd" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$v4" resolve="cause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$ve" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$vf" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$vg" role="jymVt">
        <property role="TrG5h" value="fail" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$vh" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$vi" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$vj" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$vk" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$vl" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$vm" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$vn" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPBQf" role="3clFbG">
              <node concept="37vLTw" id="5JQC2dmPBQe" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$ur" resolve="messages" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBQg" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                <node concept="2YIFZM" id="5JQC2dmPCHW" role="37wK5m">
                  <ref role="1Pybhc" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
                  <ref role="37wK5l" node="5JQC2dmP$xa" resolve="create" />
                  <node concept="37vLTw" id="5JQC2dmPCHX" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$vi" resolve="message" />
                  </node>
                  <node concept="3K4zz7" id="5JQC2dmPCHY" role="37wK5m">
                    <node concept="3y3z36" id="5JQC2dmPCHZ" role="3K4Cdx">
                      <node concept="37vLTw" id="5JQC2dmPCI0" role="3uHU7B">
                        <ref role="3cqZAo" node="5JQC2dmP$vk" resolve="cause" />
                      </node>
                      <node concept="10Nm6u" id="5JQC2dmPCI1" role="3uHU7w" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPCI2" role="3K4E3e">
                      <ref role="3cqZAo" node="5JQC2dmP$vk" resolve="cause" />
                    </node>
                    <node concept="2ShNRf" id="5JQC2dmPCL3" role="3K4GZi">
                      <node concept="1pGfFk" id="5JQC2dmPCLk" role="2ShVmc">
                        <ref role="37wK5l" to="wyt6:~Throwable.&lt;init&gt;(java.lang.String)" resolve="Throwable" />
                        <node concept="37vLTw" id="5JQC2dmPCLl" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmP$vi" resolve="message" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$vy" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmP$vz" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$v$" role="jymVt">
        <property role="TrG5h" value="getMessages" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3clFbS" id="5JQC2dmP$v_" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$vA" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmP$vB" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmP$ur" resolve="messages" />
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$vC" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$vD" role="3clF45">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3uibUv" id="5JQC2dmP$vE" role="11_B2D">
            <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$vF" role="jymVt">
        <property role="TrG5h" value="toString" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$vG" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$vH" role="3clF47">
          <node concept="3cpWs8" id="5JQC2dmP$vJ" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmP$vI" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="earliestCause" />
              <node concept="3uibUv" id="5JQC2dmP$vK" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$vL" role="33vP2m" />
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmP$vN" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmP$vM" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="message" />
              <node concept="3uibUv" id="5JQC2dmP$vO" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
              </node>
              <node concept="2ShNRf" id="5JQC2dmPBQq" role="33vP2m">
                <node concept="1pGfFk" id="5JQC2dmPBRE" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;(java.lang.String)" resolve="StringBuilder" />
                  <node concept="Xl_RD" id="5JQC2dmPBRF" role="37wK5m">
                    <property role="Xl_RC" value="All failed expectations:\n" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="5JQC2dmP$vS" role="3cqZAp">
            <node concept="3cpWsn" id="5JQC2dmP$vR" role="3cpWs9">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="count" />
              <node concept="10Oyi0" id="5JQC2dmP$vT" role="1tU5fm" />
              <node concept="3cmrfG" id="5JQC2dmP$vU" role="33vP2m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
          <node concept="1DcWWT" id="5JQC2dmP$vV" role="3cqZAp">
            <node concept="1rXfSq" id="5JQC2dmP$wT" role="1DdaDG">
              <ref role="37wK5l" node="5JQC2dmP$v$" resolve="getMessages" />
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$wQ" role="1Duv9x">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="failure" />
              <node concept="3uibUv" id="5JQC2dmP$wS" role="1tU5fm">
                <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmP$vX" role="2LFqv$">
              <node concept="3clFbJ" id="5JQC2dmP$vY" role="3cqZAp">
                <node concept="1Wc70l" id="5JQC2dmP$vZ" role="3clFbw">
                  <node concept="3clFbC" id="5JQC2dmP$w0" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmP$w1" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmP$vI" resolve="earliestCause" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmP$w2" role="3uHU7w" />
                  </node>
                  <node concept="3y3z36" id="5JQC2dmP$w3" role="3uHU7w">
                    <node concept="2OqwBi" id="5JQC2dmPBRJ" role="3uHU7B">
                      <node concept="37vLTw" id="5JQC2dmPBRI" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$wQ" resolve="failure" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBRK" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmP$xL" resolve="cause" />
                      </node>
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmP$w5" role="3uHU7w" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmP$w7" role="3clFbx">
                  <node concept="3clFbF" id="5JQC2dmP$w8" role="3cqZAp">
                    <node concept="37vLTI" id="5JQC2dmP$w9" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmP$wa" role="37vLTJ">
                        <ref role="3cqZAo" node="5JQC2dmP$vI" resolve="earliestCause" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPBRO" role="37vLTx">
                        <node concept="37vLTw" id="5JQC2dmPBRN" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$wQ" resolve="failure" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBRP" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmP$xL" resolve="cause" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="5JQC2dmP$wc" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmP$wd" role="3clFbG">
                  <node concept="2OqwBi" id="5JQC2dmP$we" role="2Oq$k0">
                    <node concept="2OqwBi" id="5JQC2dmP$wf" role="2Oq$k0">
                      <node concept="2OqwBi" id="5JQC2dmP$wg" role="2Oq$k0">
                        <node concept="2OqwBi" id="5JQC2dmPBRT" role="2Oq$k0">
                          <node concept="37vLTw" id="5JQC2dmPBRS" role="2Oq$k0">
                            <ref role="3cqZAo" node="5JQC2dmP$vM" resolve="message" />
                          </node>
                          <node concept="liA8E" id="5JQC2dmPBRU" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                            <node concept="Xl_RD" id="5JQC2dmPBRV" role="37wK5m">
                              <property role="Xl_RC" value="  " />
                            </node>
                          </node>
                        </node>
                        <node concept="liA8E" id="5JQC2dmP$wj" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~StringBuilder.append(int):java.lang.StringBuilder" resolve="append" />
                          <node concept="3cpWs3" id="5JQC2dmP$wk" role="37wK5m">
                            <node concept="1eOMI4" id="5JQC2dmP$wn" role="3uHU7B">
                              <node concept="3uNrnE" id="5JQC2dmP$wl" role="1eOMHV">
                                <node concept="37vLTw" id="5JQC2dmP$wm" role="2$L3a6">
                                  <ref role="3cqZAo" node="5JQC2dmP$vR" resolve="count" />
                                </node>
                              </node>
                            </node>
                            <node concept="3cmrfG" id="5JQC2dmP$wo" role="3uHU7w">
                              <property role="3cmrfH" value="1" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$wp" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                        <node concept="Xl_RD" id="5JQC2dmP$wq" role="37wK5m">
                          <property role="Xl_RC" value=". " />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmP$wr" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                      <node concept="2OqwBi" id="5JQC2dmPBRZ" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPBRY" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$wQ" resolve="failure" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBS0" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmP$xG" resolve="message" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmP$wt" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                    <node concept="Xl_RD" id="5JQC2dmP$wu" role="37wK5m">
                      <property role="Xl_RC" value="\n" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbJ" id="5JQC2dmP$wv" role="3cqZAp">
                <node concept="1Wc70l" id="5JQC2dmP$ww" role="3clFbw">
                  <node concept="37vLTw" id="5JQC2dmP$wx" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmP$uy" resolve="showStackTrace" />
                  </node>
                  <node concept="3y3z36" id="5JQC2dmP$wy" role="3uHU7w">
                    <node concept="2OqwBi" id="5JQC2dmPBS4" role="3uHU7B">
                      <node concept="37vLTw" id="5JQC2dmPBS3" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$wQ" resolve="failure" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBS5" role="2OqNvi">
                        <ref role="37wK5l" node="5JQC2dmP$xL" resolve="cause" />
                      </node>
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmP$w$" role="3uHU7w" />
                  </node>
                </node>
                <node concept="3clFbS" id="5JQC2dmP$wA" role="3clFbx">
                  <node concept="3SKdUt" id="5JQC2dmP$_8" role="3cqZAp">
                    <node concept="1PaTwC" id="1fGNp1n8TqR" role="3ndbpf">
                      <node concept="3oM_SD" id="1fGNp1n8TqS" role="1PaTwD">
                        <property role="3oM_SC" value="Append" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqT" role="1PaTwD">
                        <property role="3oM_SC" value="stack" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqU" role="1PaTwD">
                        <property role="3oM_SC" value="trace" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqV" role="1PaTwD">
                        <property role="3oM_SC" value="to" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqW" role="1PaTwD">
                        <property role="3oM_SC" value="the" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqX" role="1PaTwD">
                        <property role="3oM_SC" value="failure" />
                      </node>
                      <node concept="3oM_SD" id="1fGNp1n8TqY" role="1PaTwD">
                        <property role="3oM_SC" value="message" />
                      </node>
                    </node>
                  </node>
                  <node concept="3cpWs8" id="5JQC2dmP$wC" role="3cqZAp">
                    <node concept="3cpWsn" id="5JQC2dmP$wB" role="3cpWs9">
                      <property role="3TUv4t" value="false" />
                      <property role="TrG5h" value="stackTraceWriter" />
                      <node concept="3uibUv" id="5JQC2dmP$wD" role="1tU5fm">
                        <ref role="3uigEE" to="guwi:~StringWriter" resolve="StringWriter" />
                      </node>
                      <node concept="2ShNRf" id="5JQC2dmPBS6" role="33vP2m">
                        <node concept="1pGfFk" id="5JQC2dmPBSa" role="2ShVmc">
                          <ref role="37wK5l" to="guwi:~StringWriter.&lt;init&gt;()" resolve="StringWriter" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmP$wF" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmP$wG" role="3clFbG">
                      <node concept="2OqwBi" id="5JQC2dmPBSe" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPBSd" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$wQ" resolve="failure" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBSf" role="2OqNvi">
                          <ref role="37wK5l" node="5JQC2dmP$xL" resolve="cause" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmP$wI" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.printStackTrace(java.io.PrintWriter):void" resolve="printStackTrace" />
                        <node concept="2ShNRf" id="5JQC2dmPBSg" role="37wK5m">
                          <node concept="1pGfFk" id="5JQC2dmPBSD" role="2ShVmc">
                            <ref role="37wK5l" to="guwi:~PrintWriter.&lt;init&gt;(java.io.Writer)" resolve="PrintWriter" />
                            <node concept="37vLTw" id="5JQC2dmPBSE" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmP$wB" resolve="stackTraceWriter" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3clFbF" id="5JQC2dmP$wL" role="3cqZAp">
                    <node concept="2OqwBi" id="5JQC2dmPBSI" role="3clFbG">
                      <node concept="37vLTw" id="5JQC2dmPBSH" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$vM" resolve="message" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPBSJ" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                        <node concept="3cpWs3" id="5JQC2dmPBSK" role="37wK5m">
                          <node concept="37vLTw" id="5JQC2dmPBSL" role="3uHU7B">
                            <ref role="3cqZAo" node="5JQC2dmP$wB" resolve="stackTraceWriter" />
                          </node>
                          <node concept="Xl_RD" id="5JQC2dmPBSM" role="3uHU7w">
                            <property role="Xl_RC" value="\n" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="5JQC2dmP$wU" role="3cqZAp">
            <node concept="2OqwBi" id="5JQC2dmPBSQ" role="3cqZAk">
              <node concept="37vLTw" id="5JQC2dmPBSP" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmP$vM" resolve="message" />
              </node>
              <node concept="liA8E" id="5JQC2dmPBSR" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$wW" role="1B3o_S" />
        <node concept="3uibUv" id="5JQC2dmP$wX" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmP$wZ" role="jymVt">
      <property role="TrG5h" value="ExpectationFailure" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="true" />
      <node concept="3Tm6S6" id="5JQC2dmP$x0" role="1B3o_S" />
      <node concept="312cEg" id="5JQC2dmP$x1" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$x3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$x4" role="1B3o_S" />
      </node>
      <node concept="312cEg" id="5JQC2dmP$x5" role="jymVt">
        <property role="34CwA1" value="false" />
        <property role="eg7rD" value="false" />
        <property role="TrG5h" value="cause" />
        <property role="3TUv4t" value="true" />
        <node concept="2AHcQZ" id="5JQC2dmP$x7" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmP$x8" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$x9" role="1B3o_S" />
      </node>
      <node concept="2YIFZL" id="5JQC2dmP$xa" role="jymVt">
        <property role="TrG5h" value="create" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmP$xb" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$xc" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$xd" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$xe" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmP$xf" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$xg" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$xh" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPBSS" role="3cqZAk">
              <node concept="1pGfFk" id="5JQC2dmPBT3" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmP$xm" resolve="Expect.ExpectationFailure" />
                <node concept="37vLTw" id="5JQC2dmPBT4" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$xb" resolve="message" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPBT5" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$xd" resolve="cause" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmP$xl" role="3clF45">
          <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmP$xm" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmP$xn" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmP$xo" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmP$xp" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmP$xq" role="3clF46">
          <property role="TrG5h" value="cause" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$xr" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmP$xs" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$xt" role="3clF47">
          <node concept="3clFbF" id="5JQC2dmP$xu" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$xv" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$xw" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$xx" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$xy" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$x1" resolve="message" />
                </node>
              </node>
              <node concept="2YIFZM" id="5JQC2dn12b1" role="37vLTx">
                <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
                <node concept="37vLTw" id="5JQC2dn12b2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmP$xo" resolve="message" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbF" id="5JQC2dmP$x_" role="3cqZAp">
            <node concept="37vLTI" id="5JQC2dmP$xA" role="3clFbG">
              <node concept="2OqwBi" id="5JQC2dmP$xB" role="37vLTJ">
                <node concept="Xjq3P" id="5JQC2dmP$xC" role="2Oq$k0" />
                <node concept="2OwXpG" id="5JQC2dmP$xD" role="2OqNvi">
                  <ref role="2Oxat5" node="5JQC2dmP$x5" resolve="cause" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmP$xE" role="37vLTx">
                <ref role="3cqZAo" node="5JQC2dmP$xq" resolve="cause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm6S6" id="5JQC2dmP$xF" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$xG" role="jymVt">
        <property role="TrG5h" value="message" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3clFbS" id="5JQC2dmP$xH" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$xI" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmP$xJ" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmP$x1" resolve="message" />
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmP$xK" role="3clF45">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$xL" role="jymVt">
        <property role="TrG5h" value="cause" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$xM" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$xN" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$xO" role="3cqZAp">
            <node concept="37vLTw" id="5JQC2dmP$xP" role="3cqZAk">
              <ref role="3cqZAo" node="5JQC2dmP$x5" resolve="cause" />
            </node>
          </node>
        </node>
        <node concept="3uibUv" id="5JQC2dmP$xQ" role="3clF45">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmP$xR" role="jymVt">
        <property role="TrG5h" value="equals" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$xS" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmP$xT" role="3clF46">
          <property role="TrG5h" value="other" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmP$xU" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmP$xV" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmP$xW" role="3clF47">
          <node concept="3clFbJ" id="5JQC2dmP$xX" role="3cqZAp">
            <node concept="2ZW3vV" id="5JQC2dmP$y0" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmP$xY" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmP$xT" resolve="other" />
              </node>
              <node concept="3uibUv" id="5JQC2dmP$xZ" role="2ZW6by">
                <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmP$ym" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmP$yn" role="9aQI4">
                <node concept="3cpWs6" id="5JQC2dmP$yo" role="3cqZAp">
                  <node concept="3clFbT" id="5JQC2dmP$yp" role="3cqZAk">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmP$y2" role="3clFbx">
              <node concept="3cpWs8" id="5JQC2dmP$y4" role="3cqZAp">
                <node concept="3cpWsn" id="5JQC2dmP$y3" role="3cpWs9">
                  <property role="3TUv4t" value="false" />
                  <property role="TrG5h" value="that" />
                  <node concept="3uibUv" id="5JQC2dmP$y5" role="1tU5fm">
                    <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
                  </node>
                  <node concept="10QFUN" id="5JQC2dmP$y6" role="33vP2m">
                    <node concept="37vLTw" id="5JQC2dmP$y7" role="10QFUP">
                      <ref role="3cqZAo" node="5JQC2dmP$xT" resolve="other" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmP$y8" role="10QFUM">
                      <ref role="3uigEE" node="5JQC2dmP$wZ" resolve="Expect.ExpectationFailure" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3cpWs6" id="5JQC2dmP$y9" role="3cqZAp">
                <node concept="1Wc70l" id="5JQC2dmP$ya" role="3cqZAk">
                  <node concept="2OqwBi" id="5JQC2dmP$yb" role="3uHU7B">
                    <node concept="2OqwBi" id="5JQC2dmP$yc" role="2Oq$k0">
                      <node concept="Xjq3P" id="5JQC2dmP$yd" role="2Oq$k0" />
                      <node concept="2OwXpG" id="5JQC2dmP$ye" role="2OqNvi">
                        <ref role="2Oxat5" node="5JQC2dmP$x1" resolve="message" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmP$yf" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                      <node concept="2OqwBi" id="5JQC2dmPBTa" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPBT9" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$y3" resolve="that" />
                        </node>
                        <node concept="2OwXpG" id="5JQC2dmPBTb" role="2OqNvi">
                          <ref role="2Oxat5" node="5JQC2dmP$x1" resolve="message" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5JQC2dn2dS6" role="3uHU7w">
                    <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
                    <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
                    <node concept="2OqwBi" id="5JQC2dn2dS7" role="37wK5m">
                      <node concept="Xjq3P" id="5JQC2dn2dS8" role="2Oq$k0" />
                      <node concept="2OwXpG" id="5JQC2dn2dS9" role="2OqNvi">
                        <ref role="2Oxat5" node="5JQC2dmP$x5" resolve="cause" />
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5JQC2dn2C7G" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dn2C7F" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmP$y3" resolve="that" />
                      </node>
                      <node concept="2OwXpG" id="5JQC2dn2C7H" role="2OqNvi">
                        <ref role="2Oxat5" node="5JQC2dmP$x5" resolve="cause" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$yq" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmP$yr" role="3clF45" />
      </node>
      <node concept="3clFb_" id="5JQC2dmP$ys" role="jymVt">
        <property role="TrG5h" value="hashCode" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmP$yt" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmP$yu" role="3clF47">
          <node concept="3cpWs6" id="5JQC2dmP$yv" role="3cqZAp">
            <node concept="2YIFZM" id="5JQC2dn1ut$" role="3cqZAk">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.hashCode(java.lang.Object...):int" resolve="hashCode" />
              <node concept="37vLTw" id="5JQC2dn1ut_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$x1" resolve="message" />
              </node>
              <node concept="37vLTw" id="5JQC2dn1utA" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$x5" resolve="cause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmP$yz" role="1B3o_S" />
        <node concept="10Oyi0" id="5JQC2dmP$y$" role="3clF45" />
      </node>
    </node>
    <node concept="312cEg" id="5JQC2dmP$yE" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="gatherer" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmP$yG" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmP$un" resolve="Expect.ExpectationGatherer" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$yH" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmP$yI" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="inRuleContext" />
      <property role="3TUv4t" value="false" />
      <node concept="10P_77" id="5JQC2dmP$yK" role="1tU5fm" />
      <node concept="3clFbT" id="5JQC2dmP$yL" role="33vP2m">
        <property role="3clFbU" value="false" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmP$yM" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$yN" role="jymVt">
      <property role="TrG5h" value="create" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$yO" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$yP" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmP$yQ" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmP$yU" resolve="create" />
            <node concept="2ShNRf" id="5JQC2dmPBTg" role="37wK5m">
              <node concept="1pGfFk" id="5JQC2dmPBTi" role="2ShVmc">
                <ref role="37wK5l" node="5JQC2dmP$uA" resolve="Expect.ExpectationGatherer" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$yS" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$yT" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$ul" resolve="Expect" />
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$yU" role="jymVt">
      <property role="TrG5h" value="create" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$yV" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$yW" role="3clF46">
        <property role="TrG5h" value="gatherer" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$yX" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmP$un" resolve="Expect.ExpectationGatherer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$yY" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$yZ" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPBTj" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPBTv" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$zd" resolve="Expect" />
              <node concept="37vLTw" id="5JQC2dmPBTw" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$yW" resolve="gatherer" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$z2" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$z3" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$ul" resolve="Expect" />
      </node>
      <node concept="P$JXv" id="5JQC2dmP$z4" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$_9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_a" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated To provide your own failure handling, use {@code new TestVerb(new" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$_b" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_c" role="1dT_Ay">
            <property role="1dT_AB" value="    AbstractFailureStrategy() { ... })} instead of {@code Expect.create(new" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$_d" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$_e" role="1dT_Ay">
            <property role="1dT_AB" value="    ExpectationGatherer() { ... })}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmP$z5" role="jymVt">
      <property role="TrG5h" value="createAndEnableStackTrace" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$z6" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmP$_g" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8TqZ" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tr0" role="1PaTwD">
              <property role="3oM_SC" value="showStackTrace" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$z7" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPBTx" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPBTM" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmP$zd" resolve="Expect" />
              <node concept="2ShNRf" id="5JQC2dmPCGS" role="37wK5m">
                <node concept="1pGfFk" id="5JQC2dmPCH3" role="2ShVmc">
                  <ref role="37wK5l" node="5JQC2dmP$uK" resolve="Expect.ExpectationGatherer" />
                  <node concept="3clFbT" id="5JQC2dmPCH4" role="37wK5m">
                    <property role="3clFbU" value="true" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$zb" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$zc" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmP$ul" resolve="Expect" />
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmP$zd" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmP$ze" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmP$zf" role="3clF46">
        <property role="TrG5h" value="gatherer" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$zg" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmP$un" resolve="Expect.ExpectationGatherer" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$zh" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBTP" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
          <node concept="37vLTw" id="5JQC2dmPBTQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmP$zf" resolve="gatherer" />
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$zi" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmP$zj" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmP$zk" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmP$zl" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmP$zm" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmP$yE" resolve="gatherer" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dn0Njh" role="37vLTx">
              <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
              <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
              <node concept="37vLTw" id="5JQC2dn0Nji" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmP$zf" resolve="gatherer" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$zr" role="jymVt">
      <property role="TrG5h" value="hasFailures" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$zs" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$zt" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$zu" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmP$zv" role="3fr31v">
              <node concept="2OqwBi" id="5JQC2dmPBTT" role="2Oq$k0">
                <node concept="37vLTw" id="5JQC2dmPBTS" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmP$yE" resolve="gatherer" />
                </node>
                <node concept="liA8E" id="5JQC2dmPBTU" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmP$v$" resolve="getMessages" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmP$zx" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$zy" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmP$zz" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmP$z$" role="jymVt">
      <property role="TrG5h" value="getFailureStrategy" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$z_" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmP$zA" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmP$zB" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmP$zC" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmP$zD" role="3fr31v">
              <ref role="3cqZAo" node="5JQC2dmP$yI" resolve="inRuleContext" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$zF" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmP$zH" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$zG" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="message" />
                <node concept="3uibUv" id="5JQC2dmP$zI" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmP$zJ" role="33vP2m">
                  <property role="Xl_RC" value="assertion made on Expect instance, but it's not enabled as a @Rule." />
                </node>
              </node>
            </node>
            <node concept="YS8fn" id="5JQC2dmP$zM" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmPBTV" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmPBUb" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~IllegalStateException.&lt;init&gt;(java.lang.String)" resolve="IllegalStateException" />
                  <node concept="37vLTw" id="5JQC2dmPBUc" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$zG" resolve="message" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$zN" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmP$zO" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmP$5L" resolve="getFailureStrategy" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmP$zP" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$zQ" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$zR" role="jymVt">
      <property role="TrG5h" value="apply" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$zS" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$zT" role="3clF46">
        <property role="TrG5h" value="base" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5JQC2dmP$zU" role="1tU5fm">
          <ref role="3uigEE" to="7cms:~Statement" resolve="Statement" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmP$zV" role="3clF46">
        <property role="TrG5h" value="description" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$zW" role="1tU5fm">
          <ref role="3uigEE" to="cvlm:~Description" resolve="Description" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$zX" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmP$zY" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn1Ash" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dn1Asi" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$zT" resolve="base" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmP$$1" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dn1nDV" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dn1nDW" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmP$zV" resolve="description" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmP$$4" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmP$$5" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmP$$6" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmP$$7" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="37wK5l" to="7cms:~Statement.&lt;init&gt;()" resolve="Statement" />
                <ref role="1Y3XeK" to="7cms:~Statement" resolve="Statement" />
                <node concept="3clFb_" id="5JQC2dmP$$8" role="jymVt">
                  <property role="TrG5h" value="evaluate" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmP$$9" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmP$$a" role="Sfmx6">
                    <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmP$$b" role="3clF47">
                    <node concept="3clFbF" id="5JQC2dmP$$c" role="3cqZAp">
                      <node concept="37vLTI" id="5JQC2dmP$$d" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP$$e" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmP$yI" resolve="inRuleContext" />
                        </node>
                        <node concept="3clFbT" id="5JQC2dmP$$f" role="37vLTx">
                          <property role="3clFbU" value="true" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmP$$g" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPBUh" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmPBUg" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmP$zT" resolve="base" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPBUi" role="2OqNvi">
                          <ref role="37wK5l" to="7cms:~Statement.evaluate():void" resolve="evaluate" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmP$$i" role="3cqZAp">
                      <node concept="37vLTI" id="5JQC2dmP$$j" role="3clFbG">
                        <node concept="37vLTw" id="5JQC2dmP$$k" role="37vLTJ">
                          <ref role="3cqZAo" node="5JQC2dmP$yI" resolve="inRuleContext" />
                        </node>
                        <node concept="3clFbT" id="5JQC2dmP$$l" role="37vLTx">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                    <node concept="3cpWs8" id="5JQC2dmP$$n" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmP$$m" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="earliestCause" />
                        <node concept="3uibUv" id="5JQC2dmP$$o" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                        </node>
                        <node concept="10Nm6u" id="5JQC2dmP$$p" role="33vP2m" />
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmP$$q" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmP$$r" role="3clFbw">
                        <node concept="2OqwBi" id="5JQC2dmP$$s" role="3fr31v">
                          <node concept="2OqwBi" id="5JQC2dmPBUm" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmPBUl" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmP$yE" resolve="gatherer" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPBUn" role="2OqNvi">
                              <ref role="37wK5l" node="5JQC2dmP$v$" resolve="getMessages" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmP$$u" role="2OqNvi">
                            <ref role="37wK5l" to="33ny:~List.isEmpty():boolean" resolve="isEmpty" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmP$$w" role="3clFbx">
                        <node concept="3cpWs8" id="5JQC2dmP$$y" role="3cqZAp">
                          <node concept="3cpWsn" id="5JQC2dmP$$x" role="3cpWs9">
                            <property role="3TUv4t" value="false" />
                            <property role="TrG5h" value="error" />
                            <node concept="3uibUv" id="5JQC2dmP$$z" role="1tU5fm">
                              <ref role="3uigEE" to="wyt6:~AssertionError" resolve="AssertionError" />
                            </node>
                            <node concept="2ShNRf" id="5JQC2dmPBUo" role="33vP2m">
                              <node concept="1pGfFk" id="5JQC2dmPBV1" role="2ShVmc">
                                <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                                <node concept="2OqwBi" id="5JQC2dmPCCU" role="37wK5m">
                                  <node concept="37vLTw" id="5JQC2dmPCCT" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5JQC2dmP$yE" resolve="gatherer" />
                                  </node>
                                  <node concept="liA8E" id="5JQC2dmPCCV" role="2OqNvi">
                                    <ref role="37wK5l" node="5JQC2dmP$vF" resolve="toString" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5JQC2dmP$$A" role="3cqZAp">
                          <node concept="2OqwBi" id="5JQC2dmPBV6" role="3clFbG">
                            <node concept="37vLTw" id="5JQC2dmPBV5" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmP$$x" resolve="error" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPBV7" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~Throwable.initCause(java.lang.Throwable):java.lang.Throwable" resolve="initCause" />
                              <node concept="37vLTw" id="5JQC2dmPBV8" role="37wK5m">
                                <ref role="3cqZAo" node="5JQC2dmP$$m" resolve="earliestCause" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="YS8fn" id="5JQC2dmP$$E" role="3cqZAp">
                          <node concept="37vLTw" id="5JQC2dmP$$D" role="YScLw">
                            <ref role="3cqZAo" node="5JQC2dmP$$x" resolve="error" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmP$$F" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmP$$G" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$$H" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$$I" role="3clF45">
        <ref role="3uigEE" to="7cms:~Statement" resolve="Statement" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPvSQ">
    <property role="TrG5h" value="TruthJUnit" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPvSR" role="1B3o_S" />
    <node concept="2AHcQZ" id="5JQC2dmPvTg" role="2AJF6D">
      <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
      <node concept="2B6LJw" id="5JQC2dmPvTh" role="2B76xF">
        <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
        <node concept="Xl_RD" id="5JQC2dmPvTi" role="2B70Vg">
          <property role="Xl_RC" value="JUnit4" />
        </node>
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPvUr" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPvUx" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUy" role="1dT_Ay">
          <property role="1dT_AB" value=" Truth - a proposition framework for tests, supporting JUnit style assertion and assumption" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUz" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvU$" role="1dT_Ay">
          <property role="1dT_AB" value=" semantics in a fluent style." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvU_" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUA" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUB" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUC" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;TruthJUnit contains a junit-specific &quot;failure strategy&quot; known as an assumption. An assumption" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUD" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUE" role="1dT_Ay">
          <property role="1dT_AB" value=" is a proposition that, if the proposition is false, aborts (skips) the test. This is especially" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUF" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUG" role="1dT_Ay">
          <property role="1dT_AB" value=" useful in JUnit theories or parameterized tests, or other combinatorial tests where some subset" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUH" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUI" role="1dT_Ay">
          <property role="1dT_AB" value=" of the combinations are simply not applicable for testing." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUJ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUK" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUL" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUM" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;TruthJUnit is the entry point for assumptions, via the {@link #assume()} method." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUN" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUO" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUP" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUQ" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;eg:" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUR" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUS" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUT" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUU" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;pre&gt;{@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUV" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUW" role="1dT_Ay">
          <property role="1dT_AB" value=" import static com.google.common.truth.Truth.assertThat;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUX" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvUY" role="1dT_Ay">
          <property role="1dT_AB" value=" import static com.google.common.truth.TruthJUnit.assume;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvUZ" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvV0" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvV1" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvV2" role="1dT_Ay">
          <property role="1dT_AB" value=" public void @Test testFoosAgainstBars {" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvV3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvV4" role="1dT_Ay">
          <property role="1dT_AB" value="   assume().that(foo).isNotNull();" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvV5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvV6" role="1dT_Ay">
          <property role="1dT_AB" value="   assume().that(bar).isNotNull();" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvV7" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvV8" role="1dT_Ay">
          <property role="1dT_AB" value="   assertThat(foo.times(bar)).isEqualTo(blah);" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvV9" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvVa" role="1dT_Ay">
          <property role="1dT_AB" value=" }" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvVb" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvVc" role="1dT_Ay">
          <property role="1dT_AB" value=" }&lt;/pre&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvVd" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvVe" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvVf" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvVg" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvVh" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvVi" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPvTj" role="jymVt">
      <property role="TrG5h" value="THROW_ASSUMPTION_ERROR" />
      <property role="3TUv4t" value="true" />
      <node concept="2AHcQZ" id="5JQC2dmPvTk" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPvTl" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPvTm" role="2B70Vg">
            <property role="Xl_RC" value="JUnit4" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPvTn" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPvTo" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPvTp" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPvTq" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmP$8X" resolve="AbstractFailureStrategy" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPvTr" role="jymVt">
              <property role="TrG5h" value="failComparing" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPvTs" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTt" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvTu" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTv" role="3clF46">
                <property role="TrG5h" value="expected" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvTw" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTx" role="3clF46">
                <property role="TrG5h" value="actual" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvTy" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTz" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvT$" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPvT_" role="3clF47">
                <node concept="3clFbF" id="5JQC2dmPvTA" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPvTB" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPvTJ" resolve="fail" />
                    <node concept="2YIFZM" id="5JQC2dmQbx_" role="37wK5m">
                      <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                      <ref role="37wK5l" node="5JQC2dmP$r_" resolve="messageFor" />
                      <node concept="37vLTw" id="5JQC2dmQbxA" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvTt" resolve="message" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQbxB" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvTv" resolve="expected" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmQbxC" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvTx" resolve="actual" />
                      </node>
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPvTG" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPvTz" resolve="cause" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPvTH" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPvTI" role="3clF45" />
            </node>
            <node concept="3clFb_" id="5JQC2dmPvTJ" role="jymVt">
              <property role="TrG5h" value="fail" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPvTK" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTL" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvTM" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPvTN" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPvTO" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPvTP" role="3clF47">
                <node concept="YS8fn" id="5JQC2dmPvTT" role="3cqZAp">
                  <node concept="2ShNRf" id="5JQC2dmPBV9" role="YScLw">
                    <node concept="1pGfFk" id="5JQC2dmPBVk" role="2ShVmc">
                      <ref role="37wK5l" node="5JQC2dmPvSY" resolve="TruthJUnit.ThrowableAssumptionViolatedException" />
                      <node concept="37vLTw" id="5JQC2dmPBVl" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvTL" resolve="message" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmPBVm" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPvTN" resolve="cause" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3Tm1VV" id="5JQC2dmPvTU" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPvTV" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvTW" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPvU5" role="jymVt">
      <property role="TrG5h" value="throwAssumptionError" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPvU6" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPvU7" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPvU8" role="2B70Vg">
            <property role="Xl_RC" value="JUnit4" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvU9" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPvUa" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPvUb" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPvTj" resolve="THROW_ASSUMPTION_ERROR" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvUc" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvUd" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPvTX" role="jymVt">
      <property role="TrG5h" value="ASSUME" />
      <property role="3TUv4t" value="true" />
      <node concept="2AHcQZ" id="5JQC2dmPvTY" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPvTZ" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPvU0" role="2B70Vg">
            <property role="Xl_RC" value="JUnit4" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5JQC2dmPvU1" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPBVn" role="33vP2m">
        <node concept="1pGfFk" id="5JQC2dmPBVK" role="2ShVmc">
          <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
          <node concept="37vLTw" id="5JQC2dmPBVL" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPvTj" resolve="THROW_ASSUMPTION_ERROR" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPvU4" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPvUe" role="jymVt">
      <property role="TrG5h" value="assume" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPvUf" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPvUg" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPvUh" role="2B70Vg">
            <property role="Xl_RC" value="JUnit4" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvUi" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPvUj" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPvUk" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPvTX" resolve="ASSUME" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvUl" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPvUm" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPvSS" role="jymVt">
      <property role="TrG5h" value="ThrowableAssumptionViolatedException" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="false" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm6S6" id="5JQC2dmPvST" role="1B3o_S" />
      <node concept="2AHcQZ" id="5JQC2dmPvSU" role="2AJF6D">
        <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
        <node concept="2B6LJw" id="5JQC2dmPvSV" role="2B76xF">
          <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPvSW" role="2B70Vg">
            <property role="Xl_RC" value="JUnit4" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="wYVAq3g8C2" role="1zkMxy">
        <ref role="3uigEE" to="wyt6:~RuntimeException" resolve="RuntimeException" />
      </node>
      <node concept="3clFbW" id="5JQC2dmPvSY" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPvSZ" role="3clF45" />
        <node concept="37vLTG" id="5JQC2dmPvT0" role="3clF46">
          <property role="TrG5h" value="message" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPvT1" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~String" resolve="String" />
          </node>
        </node>
        <node concept="37vLTG" id="5JQC2dmPvT2" role="3clF46">
          <property role="TrG5h" value="throwable" />
          <property role="3TUv4t" value="false" />
          <node concept="3uibUv" id="5JQC2dmPvT3" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPvT4" role="3clF47">
          <node concept="XkiVB" id="5JQC2dmPBVN" role="3cqZAp">
            <ref role="37wK5l" to="wyt6:~Throwable.&lt;init&gt;(java.lang.String)" resolve="Throwable" />
            <node concept="37vLTw" id="5JQC2dmPBVO" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPvT0" resolve="message" />
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPvT5" role="3cqZAp">
            <node concept="3y3z36" id="5JQC2dmPvT6" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPvT7" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPvT2" resolve="throwable" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPvT8" role="3uHU7w" />
            </node>
            <node concept="3clFbS" id="5JQC2dmPvTc" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPvT9" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPvTa" role="3clFbG">
                  <ref role="37wK5l" to="wyt6:~Throwable.initCause(java.lang.Throwable):java.lang.Throwable" resolve="initCause" />
                  <node concept="37vLTw" id="5JQC2dmPvTb" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPvT2" resolve="throwable" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPvTf" role="1B3o_S" />
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPvUn" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPvUo" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPvUp" role="3clF47" />
      <node concept="3Tm6S6" id="5JQC2dmPvUq" role="1B3o_S" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwC8">
    <property role="TrG5h" value="BigDecimalSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwC9" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwCa" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmPwCb" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwC8" resolve="BigDecimalSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPwCc" role="11_B2D">
        <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwDz" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwDC" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwDD" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link BigDecimal} typed subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwDE" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwDF" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwDG" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwDH" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwCd" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwCe" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwCf" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwCg" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwCh" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwCi" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwCj" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwCk" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPBVP" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmPBVQ" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwCf" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPBVR" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwCh" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwCo" role="jymVt">
      <property role="TrG5h" value="isEqualToIgnoringScale" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwCp" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwCq" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwCr" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwCs" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwCt" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwDf" resolve="compareValues" />
            <node concept="37vLTw" id="5JQC2dmPwCu" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwCp" resolve="expected" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwCv" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwCw" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwCx" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwDI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDJ" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject's value is not equal to the value of the given {@link BigDecimal}. (i.e.," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDL" role="1dT_Ay">
            <property role="1dT_AB" value=" fails if {@code actual.comparesTo(expected) != 0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDN" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDP" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The scale of the BigDecimal is ignored. If you want to compare the values and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDR" role="1dT_Ay">
            <property role="1dT_AB" value=" the scales, use {@link #isEqualTo(Object)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwCy" role="jymVt">
      <property role="TrG5h" value="isEqualToIgnoringScale" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwCz" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwC$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwC_" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwCA" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwCB" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwDf" resolve="compareValues" />
            <node concept="2ShNRf" id="5JQC2dmPBVS" role="37wK5m">
              <node concept="1pGfFk" id="5JQC2dmPBWZ" role="2ShVmc">
                <ref role="37wK5l" to="xlxw:~BigDecimal.&lt;init&gt;(java.lang.String)" resolve="BigDecimal" />
                <node concept="37vLTw" id="5JQC2dmPBX0" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwCz" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwCE" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwCF" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwCG" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwDS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDT" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject's value is not equal to the value of the {@link BigDecimal} created from" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDV" role="1dT_Ay">
            <property role="1dT_AB" value=" the expected string (i.e., fails if {@code actual.comparesTo(new BigDecimal(expected)) != 0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDX" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwDY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwDZ" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The scale of the BigDecimal is ignored. If you want to compare the values and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwE0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwE1" role="1dT_Ay">
            <property role="1dT_AB" value=" the scales, use {@link #isEqualTo(Object)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwCH" role="jymVt">
      <property role="TrG5h" value="isEqualToIgnoringScale" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwCI" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3cpWsb" id="5JQC2dmPwCJ" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwCK" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwCL" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwCM" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwDf" resolve="compareValues" />
            <node concept="2ShNRf" id="5JQC2dmPBX1" role="37wK5m">
              <node concept="1pGfFk" id="5JQC2dmPC23" role="2ShVmc">
                <ref role="37wK5l" to="xlxw:~BigDecimal.&lt;init&gt;(long)" resolve="BigDecimal" />
                <node concept="37vLTw" id="5JQC2dmPC24" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwCI" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwCP" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwCQ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwCR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwE2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwE3" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject's value is not equal to the value of the {@link BigDecimal} created from" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwE4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwE5" role="1dT_Ay">
            <property role="1dT_AB" value=" the expected {@code long} (i.e., fails if {@code actual.comparesTo(new BigDecimal(expected)) !=" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwE6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwE7" role="1dT_Ay">
            <property role="1dT_AB" value=" 0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwE8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwE9" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEb" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The scale of the BigDecimal is ignored. If you want to compare the values and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEd" role="1dT_Ay">
            <property role="1dT_AB" value=" the scales, use {@link #isEqualTo(Object)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwCS" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwCT" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwCU" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwCV" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwCW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwCX" role="3clF47">
        <node concept="3SKdUt" id="5JQC2dmPwEn" role="3cqZAp">
          <node concept="1PaTwC" id="1fGNp1n8Tr1" role="3ndbpf">
            <node concept="3oM_SD" id="1fGNp1n8Tr2" role="1PaTwD">
              <property role="3oM_SC" value="To" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tr3" role="1PaTwD">
              <property role="3oM_SC" value="express" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tr4" role="1PaTwD">
              <property role="3oM_SC" value="more" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tr5" role="1PaTwD">
              <property role="3oM_SC" value="specific" />
            </node>
            <node concept="3oM_SD" id="1fGNp1n8Tr6" role="1PaTwD">
              <property role="3oM_SC" value="javadoc" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwCY" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPwCZ" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnk" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPwD0" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwCU" resolve="expected" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwD1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwD2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwD3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwEe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEf" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject's value and scale is not equal to the given {@link BigDecimal}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEh" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEj" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; If you only want to compare the values of the BigDecimals and not their scales," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEl" role="1dT_Ay">
            <property role="1dT_AB" value=" use {@link #isEqualToIgnoringScale(BigDecimal)} instead." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwD4" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwD5" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwD6" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwD7" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwD8" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwD9" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwDa" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwDf" resolve="compareValues" />
            <node concept="37vLTw" id="5JQC2dmPwDb" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwD6" resolve="expected" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwDc" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwDd" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwDe" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwEo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEp" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject is not equivalent to the given value according to {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEr" role="1dT_Ay">
            <property role="1dT_AB" value=" Comparable#compareTo}, (i.e., fails if {@code a.comparesTo(b) != 0}). This method behaves" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEt" role="1dT_Ay">
            <property role="1dT_AB" value=" identically to (the more clearly named) {@link #isEqualToIgnoringScale(BigDecimal)}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEv" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEx" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Do not use this method for checking object equality. Instead, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwEy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwEz" role="1dT_Ay">
            <property role="1dT_AB" value=" #isEqualTo(Object)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwDf" role="jymVt">
      <property role="TrG5h" value="compareValues" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwDg" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwDh" role="1tU5fm">
          <ref role="3uigEE" to="xlxw:~BigDecimal" resolve="BigDecimal" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwDi" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwDj" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwDk" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPwDl" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPwDm" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPwDn" role="2OqNvi">
                <ref role="37wK5l" to="xlxw:~BigDecimal.compareTo(java.math.BigDecimal):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPwDo" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwDg" resolve="expected" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPwDp" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwDr" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwDs" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwDt" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPwDu" role="37wK5m">
                  <property role="Xl_RC" value="%s should have had the same value as &lt;%s&gt; (scale is ignored)" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwDv" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwDw" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwDg" resolve="expected" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwDx" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwDy" role="3clF45" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzvD">
    <property role="TrG5h" value="ComparableSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPzvE" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPzvF" role="16eVyc">
      <property role="TrG5h" value="S" />
      <node concept="3uibUv" id="5JQC2dmPzvG" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
        <node concept="16syzq" id="5JQC2dmPzvH" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzvF" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmPzvI" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="16euLQ" id="5JQC2dmPzvJ" role="16eVyc">
      <property role="TrG5h" value="T" />
      <node concept="3uibUv" id="5JQC2dmPzvK" role="3ztrMU">
        <ref role="3uigEE" to="wyt6:~Comparable" resolve="Comparable" />
      </node>
    </node>
    <node concept="3uibUv" id="5JQC2dmPzvL" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="16syzq" id="5JQC2dmPzvM" role="11_B2D">
        <ref role="16sUi3" node="5JQC2dmPzvF" resolve="S" />
      </node>
      <node concept="16syzq" id="5JQC2dmPzvN" role="11_B2D">
        <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzyj" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzyo" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzyp" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Comparable} typed subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzyq" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzyr" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzys" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzyt" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzvO" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzvP" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzvQ" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzvR" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzvS" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzvT" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPzvU" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzvV" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC25" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPC26" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzvQ" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC27" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzvS" resolve="subject" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzvZ" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPzw0" role="jymVt">
      <property role="TrG5h" value="isIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzw1" role="3clF46">
        <property role="TrG5h" value="range" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzw2" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Range" resolve="Range" />
          <node concept="16syzq" id="5JQC2dmPzw3" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzw4" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzw5" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzw6" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPC34" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmPC33" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPzw1" resolve="range" />
              </node>
              <node concept="liA8E" id="5JQC2dmPC35" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Range.contains(java.lang.Comparable):boolean" resolve="contains" />
                <node concept="1rXfSq" id="5JQC2dmPC36" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzwa" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzwb" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzwc" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzwd" role="37wK5m">
                  <property role="Xl_RC" value="is in" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzwe" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzw1" resolve="range" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzwf" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzwg" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzwh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyv" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not in the given range. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzwi" role="jymVt">
      <property role="TrG5h" value="isNotIn" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzwj" role="3clF46">
        <property role="TrG5h" value="range" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzwk" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Range" resolve="Range" />
          <node concept="16syzq" id="5JQC2dmPzwl" role="11_B2D">
            <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzwm" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzwn" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPC3i" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPC3h" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPzwj" resolve="range" />
            </node>
            <node concept="liA8E" id="5JQC2dmPC3j" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Range.contains(java.lang.Comparable):boolean" resolve="contains" />
              <node concept="1rXfSq" id="5JQC2dmPC3k" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzwr" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzws" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzwt" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzwu" role="37wK5m">
                  <property role="Xl_RC" value="is not in" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzwv" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzwj" resolve="range" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzww" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzwx" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzwy" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyx" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is in the given range. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzwz" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzw$" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzw_" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzwA" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzwB" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPzwC" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzwD" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzwE" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzwF" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Comparable.compareTo(java.lang.Object):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPzwG" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzw$" resolve="other" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPzwH" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzwJ" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzwK" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzwL" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPzwM" role="37wK5m">
                  <property role="Xl_RC" value="%s should have been equivalent to &lt;%s&gt; according to compareTo()" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzwN" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzwO" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzw$" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzwP" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzwQ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzwR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyz" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject is not equivalent to the given value according to {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzy$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzy_" role="1dT_Ay">
            <property role="1dT_AB" value=" Comparable#compareTo}, (i.e., fails if {@code a.comparesTo(b) != 0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyB" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyD" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Do not use this method for checking object equality. Instead, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyF" role="1dT_Ay">
            <property role="1dT_AB" value=" #isEqualTo(Object)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzwS" role="jymVt">
      <property role="TrG5h" value="comparesEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzwT" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzwU" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzwV" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzwW" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzwX" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPzwY" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmPzwZ" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzwU" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzx0" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzx1" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzx2" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyH" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject is not equivalent to the given value according to {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyJ" role="1dT_Ay">
            <property role="1dT_AB" value=" Comparable#compareTo}, (i.e., fails if {@code a.comparesTo(b) != 0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyL" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyN" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Do not use this method for checking object equality. Instead, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyP" role="1dT_Ay">
            <property role="1dT_AB" value=" #isEqualTo(Object)}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyR" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzyS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyT" role="1dT_Ay">
            <property role="1dT_AB" value=" @deprecated Use {@link #isEquivalentAccordingToCompareTo} instead." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzx3" role="jymVt">
      <property role="TrG5h" value="isGreaterThan" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzx4" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzx5" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzx6" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzx7" role="3cqZAp">
          <node concept="2dkUwp" id="5JQC2dmPzx8" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzx9" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzxa" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzxb" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Comparable.compareTo(java.lang.Object):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPzxc" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzx4" resolve="other" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPzxd" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzxf" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzxg" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzxh" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzxi" role="37wK5m">
                  <property role="Xl_RC" value="is greater than" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzxj" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzx4" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzxk" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzxl" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzxm" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyV" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not greater than the given value. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzxn" role="jymVt">
      <property role="TrG5h" value="isLessThan" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzxo" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzxp" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzxq" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzxr" role="3cqZAp">
          <node concept="2d3UOw" id="5JQC2dmPzxs" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzxt" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzxu" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzxv" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Comparable.compareTo(java.lang.Object):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPzxw" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzxo" resolve="other" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPzxx" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzxz" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzx$" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzx_" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzxA" role="37wK5m">
                  <property role="Xl_RC" value="is less than" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzxB" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzxo" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzxC" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzxD" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzxE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyX" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not less than the given value. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzxF" role="jymVt">
      <property role="TrG5h" value="isAtMost" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzxG" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzxH" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzxI" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzxJ" role="3cqZAp">
          <node concept="3eOSWO" id="5JQC2dmPzxK" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzxL" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzxM" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzxN" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Comparable.compareTo(java.lang.Object):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPzxO" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzxG" resolve="other" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPzxP" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzxR" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzxS" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzxT" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzxU" role="37wK5m">
                  <property role="Xl_RC" value="is at most" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzxV" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzxG" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzxW" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzxX" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzxY" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzyY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzyZ" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is greater than the given value. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzxZ" role="jymVt">
      <property role="TrG5h" value="isAtLeast" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzy0" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPzy1" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPzvJ" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzy2" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzy3" role="3cqZAp">
          <node concept="3eOVzh" id="5JQC2dmPzy4" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzy5" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzy6" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzy7" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Comparable.compareTo(java.lang.Object):int" resolve="compareTo" />
                <node concept="37vLTw" id="5JQC2dmPzy8" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzy0" resolve="other" />
                </node>
              </node>
            </node>
            <node concept="3cmrfG" id="5JQC2dmPzy9" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzyb" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzyc" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzyd" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzye" role="37wK5m">
                  <property role="Xl_RC" value="is at least" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzyf" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzy0" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzyg" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzyh" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzyi" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzz0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzz1" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is less than the given value. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPw4o">
    <property role="TrG5h" value="PrimitiveBooleanArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPw4p" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPw4q" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPw4r" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPw4o" resolve="PrimitiveBooleanArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPw4t" role="11_B2D">
        <node concept="10P_77" id="5JQC2dmPw4s" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPw6K" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw6R" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw6S" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code boolean[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw6T" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw6U" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw6V" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw6W" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPw4u" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPw4v" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPw4w" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw4x" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPw4y" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw4z" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPw4_" role="1tU5fm">
          <node concept="10P_77" id="5JQC2dmPw4$" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw4A" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC3r" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPC3s" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw4w" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC3t" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPw4y" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw4E" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw4F" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw4G" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw4H" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPw4I" role="3cqZAk">
            <property role="Xl_RC" value="boolean" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPw4J" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPw4K" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw4L" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw4M" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw4N" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw4O" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doDRvH" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Booleans" resolve="Booleans" />
            <ref role="37wK5l" to="gxwn:~Booleans.asList(boolean...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="5JQC2doDRvI" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPw4R" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPw4S" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPw4T" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw4U" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw4V" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPw4W" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw4X" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doDSGn" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw4Y" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPw50" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw4Z" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPw52" role="1tU5fm">
              <node concept="10P_77" id="5JQC2dmPw51" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPw53" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPw54" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPw55" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPw56" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPw4Z" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPw57" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPw4W" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw59" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPw5a" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmPw74" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Tr7" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Tr8" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPw5D" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPw5E" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPw5_" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmPw5A" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPw5B" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmPw5C" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPw4W" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPw5x" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmPw5z" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw5c" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPw5e" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPw5d" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPw5g" role="1tU5fm">
                  <node concept="10P_77" id="5JQC2dmPw5f" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPw5h" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPw5i" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPw4W" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPw5k" role="10QFUM">
                    <node concept="10P_77" id="5JQC2dmPw5j" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPw5l" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPw5m" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPC4d" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(boolean[],boolean[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPC4e" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPw4Z" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPC4f" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPw5d" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPw5r" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPw5s" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPw5t" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPw5u" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doDQBN" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Booleans" resolve="Booleans" />
                      <ref role="37wK5l" to="gxwn:~Booleans.asList(boolean...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doDQBO" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPw5d" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw5F" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw5G" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw5H" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw6X" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw6Y" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw6Z" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw70" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw71" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw72" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw5I" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw5J" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPw5K" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPw5L" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doDTrZ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw5M" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPw5O" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPw5N" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPw5Q" role="1tU5fm">
              <node concept="10P_77" id="5JQC2dmPw5P" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPw5R" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmPw6n" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmPw6o" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmPw6m" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmPw7c" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tr9" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Tra" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trb" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trc" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trd" role="1PaTwD">
                    <property role="3oM_SC" value="boolean[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tre" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trf" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trg" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trh" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tri" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trj" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trk" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trl" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmPw6i" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmPw6k" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPw5T" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPw5V" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPw5U" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPw5X" role="1tU5fm">
                  <node concept="10P_77" id="5JQC2dmPw5W" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPw5Y" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPw5Z" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPw5K" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPw61" role="10QFUM">
                    <node concept="10P_77" id="5JQC2dmPw60" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPw62" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmPw63" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmPw64" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmPw65" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPw5N" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPw66" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPw5K" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPC4i" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(boolean[],boolean[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPC4j" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPw5N" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPC4k" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPw5U" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPw6b" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPw6c" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPw6d" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmPw6e" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPw6f" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doDTft" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Booleans" resolve="Booleans" />
                      <ref role="37wK5l" to="gxwn:~Booleans.asList(boolean...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doDTfu" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPw5U" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw6p" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw6q" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw6r" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw75" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw76" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw77" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw78" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw79" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw7a" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw6s" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw6t" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw6u" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPw6H" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmPw6v" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPw6w" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPw6x" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPw6y" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmPw6z" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPw6$" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmPw6_" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmPw6A" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPw4L" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPw6B" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmPw6C" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPw6D" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmPw6E" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmPw6F" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmPw6G" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPw4L" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw6I" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPw6J" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPvB_">
    <property role="TrG5h" value="ClassSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPvBA" role="1B3o_S" />
    <node concept="2AHcQZ" id="5JQC2dmPvBB" role="2AJF6D">
      <ref role="2AI5Lk" to="kh1l:~GwtIncompatible" resolve="GwtIncompatible" />
      <node concept="2B6LJw" id="5JQC2dmPvBC" role="2B76xF">
        <ref role="2B6OnR" to="kh1l:~GwtIncompatible.value()" resolve="value" />
        <node concept="Xl_RD" id="5JQC2dmPvBD" role="2B70Vg">
          <property role="Xl_RC" value="reflection" />
        </node>
      </node>
    </node>
    <node concept="3uibUv" id="5JQC2dmPvBE" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPvBF" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPvB_" resolve="ClassSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPvBG" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        <node concept="3qTvmN" id="5JQC2dmPvBH" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPvCc" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPvCh" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvCi" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Class} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvCj" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvCk" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvCl" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvCm" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPvBI" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPvBJ" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPvBK" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvBL" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPvBM" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPvBN" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPvBO" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPvBP" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvBQ" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC4m" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPC4n" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPvBK" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC4o" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPvBM" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPvBU" role="jymVt">
      <property role="TrG5h" value="isAssignableTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPvBV" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPvBW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPvBX" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPvBY" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPvBZ" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPvC0" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPC57" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmPC56" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPvBV" resolve="clazz" />
              </node>
              <node concept="liA8E" id="5JQC2dmPC58" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Class.isAssignableFrom(java.lang.Class):boolean" resolve="isAssignableFrom" />
                <node concept="1rXfSq" id="5JQC2dmPC59" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPvC4" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPvC5" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPvC6" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPvC7" role="37wK5m">
                  <property role="Xl_RC" value="is assignable to" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPvC8" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPvBV" resolve="clazz" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPvC9" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPvCa" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPvCb" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPvCn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvCo" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if this class or interface is not the same as or a subclass or subinterface of, the given" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPvCp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPvCq" role="1dT_Ay">
            <property role="1dT_AB" value="class or interface." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPvSf">
    <property role="TrG5h" value="AbstractDelegatedVerb" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPvSg" role="1B3o_S" />
    <node concept="3UR2Jj" id="5JQC2dmPvSl" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPvSo" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSp" role="1dT_Ay">
          <property role="1dT_AB" value=" An extendable type that allows plugin creators to define their own {@code that()} methods for the" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSq" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSr" role="1dT_Ay">
          <property role="1dT_AB" value=" Truth SPI. Intended for advanced usage only, generally you should prefer to create a {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSs" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSt" role="1dT_Ay">
          <property role="1dT_AB" value=" SubjectFactory} when extending Truth." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSu" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSv" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSw" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSx" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;This class has no abstract methods because it's intended to be extended only when unique" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSy" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSz" role="1dT_Ay">
          <property role="1dT_AB" value=" generics are required on the {@code that()} method. Regardless, any subclass should define at" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvS$" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvS_" role="1dT_Ay">
          <property role="1dT_AB" value=" least one {@code that()} method which accepts a single argument and returns a {@link Subject}, to" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSA" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSB" role="1dT_Ay">
          <property role="1dT_AB" value=" be consistent with the Truth SPI." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSC" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSD" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSE" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSF" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Every subclass of {@link AbstractDelegatedVerb} should also have a companion {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSG" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSH" role="1dT_Ay">
          <property role="1dT_AB" value=" DelegatedVerbFactory} which knows how to instantiate it. The factory should pass the {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSI" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSJ" role="1dT_Ay">
          <property role="1dT_AB" value=" FailureStrategy} it receives, along with itself ({@code this}) into the constructor for the" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSK" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSL" role="1dT_Ay">
          <property role="1dT_AB" value=" {@link AbstractDelegatedVerb}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSM" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSN" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPvSO" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPvSP" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;For an example implementation and usage, see {@link DelegatedVerbFactoryTest}." />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPvSh" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPvSi" role="3clF45" />
      <node concept="3clFbS" id="5JQC2dmPvSj" role="3clF47" />
      <node concept="3Tmbuc" id="5JQC2dmPvSk" role="1B3o_S" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzz2">
    <property role="TrG5h" value="TableSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzz3" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzz4" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPzz5" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzz2" resolve="TableSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPzz6" role="11_B2D">
        <ref role="3uigEE" to="3o3z:~Table" resolve="Table" />
        <node concept="3qTvmN" id="5JQC2dmPzz7" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPzz8" role="11_B2D" />
        <node concept="3qTvmN" id="5JQC2dmPzz9" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzB_" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzBI" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzBJ" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Table} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzBK" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzBL" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzBM" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzBN" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzza" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzzb" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzzc" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzzd" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzze" role="3clF46">
        <property role="TrG5h" value="table" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzzf" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzzg" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Table" resolve="Table" />
          <node concept="3qTvmN" id="5JQC2dmPzzh" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzzi" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzzj" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzzk" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC5c" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPC5d" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzzc" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC5e" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzze" resolve="table" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzzo" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzzp" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzzq" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzzr" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzzs" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPzzt" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzzu" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzzw" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzzx" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzzy" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzzz" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzz$" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzz_" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzzA" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBP" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzzB" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzzC" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzzD" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzzE" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPzzF" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPzzG" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Table.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzzI" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzzJ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzzK" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzzL" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzzM" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzzN" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzzO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBR" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table is empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzzP" role="jymVt">
      <property role="TrG5h" value="hasSize" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzzQ" role="3clF46">
        <property role="TrG5h" value="expectedSize" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPzzR" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzzS" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzzT" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnXuga" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dnXugb" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dnXugc" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzzQ" resolve="expectedSize" />
              </node>
              <node concept="3cmrfG" id="5JQC2dnXugd" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dnXuge" role="37wK5m">
              <property role="Xl_RC" value="expectedSize(%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2dnXugf" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzzQ" resolve="expectedSize" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPz$1" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPz$0" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSize" />
            <node concept="10Oyi0" id="5JQC2dmPz$2" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPz$3" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPz$4" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz$5" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.size():int" resolve="size" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPz$6" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPz$7" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPz$8" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPz$0" resolve="actualSize" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPz$9" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPzzQ" resolve="expectedSize" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz$b" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz$c" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz$d" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPz$e" role="37wK5m">
                  <property role="Xl_RC" value="has a size of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz$f" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzzQ" resolve="expectedSize" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPz$g" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz$h" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$0" resolve="actualSize" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz$i" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz$j" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz$k" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBT" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not have the given size. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz$l" role="jymVt">
      <property role="TrG5h" value="contains" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz$m" role="3clF46">
        <property role="TrG5h" value="rowKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz$n" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz$o" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz$p" role="3clF46">
        <property role="TrG5h" value="columnKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz$q" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz$r" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz$s" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz$t" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz$u" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPz$v" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPz$w" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPz$x" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.contains(java.lang.Object,java.lang.Object):boolean" resolve="contains" />
                <node concept="37vLTw" id="5JQC2dmPz$y" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$m" resolve="rowKey" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz$z" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$p" resolve="columnKey" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz$_" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz$A" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz$B" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz$C" role="37wK5m">
                  <property role="Xl_RC" value="contains mapping for row/column" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz$D" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$m" resolve="rowKey" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz$E" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$p" resolve="columnKey" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz$F" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz$G" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz$H" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBV" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain a mapping for the given row key and column key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz$I" role="jymVt">
      <property role="TrG5h" value="doesNotContain" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz$J" role="3clF46">
        <property role="TrG5h" value="rowKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz$K" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz$L" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz$M" role="3clF46">
        <property role="TrG5h" value="columnKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz$N" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz$O" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz$P" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPz$Q" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPz$R" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPz$S" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPz$T" role="2OqNvi">
              <ref role="37wK5l" to="3o3z:~Table.contains(java.lang.Object,java.lang.Object):boolean" resolve="contains" />
              <node concept="37vLTw" id="5JQC2dmPz$U" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz$J" resolve="rowKey" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPz$V" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz$M" resolve="columnKey" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz$X" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz$Y" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz$Z" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz_0" role="37wK5m">
                  <property role="Xl_RC" value="does not contain mapping for row/column" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz_1" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$J" resolve="rowKey" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz_2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz$M" resolve="columnKey" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz_3" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz_4" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz_5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBX" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table contains a mapping for the given row key and column key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz_6" role="jymVt">
      <property role="TrG5h" value="containsCell" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz_7" role="3clF46">
        <property role="TrG5h" value="rowKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz_8" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz_9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz_a" role="3clF46">
        <property role="TrG5h" value="colKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz_b" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz_c" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz_d" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz_e" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz_f" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz_g" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPz_h" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPz_i" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPz_t" resolve="containsCell" />
            <node concept="2YIFZM" id="5JQC2dnWMp6" role="37wK5m">
              <ref role="1Pybhc" to="3o3z:~Tables" resolve="Tables" />
              <ref role="37wK5l" to="3o3z:~Tables.immutableCell(java.lang.Object,java.lang.Object,java.lang.Object):com.google.common.collect.Table$Cell" resolve="immutableCell" />
              <node concept="37vLTw" id="5JQC2dnWMp7" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_7" resolve="rowKey" />
              </node>
              <node concept="37vLTw" id="5JQC2dnWMp8" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_a" resolve="colKey" />
              </node>
              <node concept="37vLTw" id="5JQC2dnWMp9" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_d" resolve="value" />
              </node>
              <node concept="3uibUv" id="5JQC2dnWMpa" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dnWMpb" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dnWMpc" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz_q" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz_r" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz_s" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzBY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzBZ" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain the given cell. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz_t" role="jymVt">
      <property role="TrG5h" value="containsCell" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz_u" role="3clF46">
        <property role="TrG5h" value="cell" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPz_v" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Table$Cell" resolve="Table.Cell" />
          <node concept="3qTvmN" id="5JQC2dmPz_w" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPz_x" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPz_y" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPz_z" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPz_$" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnXQk6" role="3clFbG">
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <node concept="37vLTw" id="5JQC2dnXQzY" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPz_u" resolve="cell" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPz_B" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPz_C" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPz_D" role="3fr31v">
              <node concept="2OqwBi" id="5JQC2dmPz_E" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmPz_F" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPz_G" role="2OqNvi">
                  <ref role="37wK5l" to="3o3z:~Table.cellSet():java.util.Set" resolve="cellSet" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPz_H" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
                <node concept="37vLTw" id="5JQC2dmPz_I" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz_u" resolve="cell" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPz_K" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPz_L" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPz_M" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPz_N" role="37wK5m">
                  <property role="Xl_RC" value="contains cell" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPz_O" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPz_u" resolve="cell" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPz_P" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPz_Q" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPz_R" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzC0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzC1" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain the given cell. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPz_S" role="jymVt">
      <property role="TrG5h" value="doesNotContainCell" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPz_T" role="3clF46">
        <property role="TrG5h" value="rowKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz_U" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz_V" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz_W" role="3clF46">
        <property role="TrG5h" value="colKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPz_X" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPz_Y" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPz_Z" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzA0" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzA1" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzA2" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzA3" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPzA4" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzAf" resolve="doesNotContainCell" />
            <node concept="2YIFZM" id="5JQC2dnXCiB" role="37wK5m">
              <ref role="1Pybhc" to="3o3z:~Tables" resolve="Tables" />
              <ref role="37wK5l" to="3o3z:~Tables.immutableCell(java.lang.Object,java.lang.Object,java.lang.Object):com.google.common.collect.Table$Cell" resolve="immutableCell" />
              <node concept="37vLTw" id="5JQC2dnXCiC" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_T" resolve="rowKey" />
              </node>
              <node concept="37vLTw" id="5JQC2dnXCiD" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_W" resolve="colKey" />
              </node>
              <node concept="37vLTw" id="5JQC2dnXCiE" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPz_Z" resolve="value" />
              </node>
              <node concept="3uibUv" id="5JQC2dnXCiF" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dnXCiG" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
              <node concept="3uibUv" id="5JQC2dnXCiH" role="3PaCim">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzAc" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzAd" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzAe" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzC2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzC3" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table contains the given cell. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzAf" role="jymVt">
      <property role="TrG5h" value="doesNotContainCell" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzAg" role="3clF46">
        <property role="TrG5h" value="cell" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzAh" role="1tU5fm">
          <ref role="3uigEE" to="3o3z:~Table$Cell" resolve="Table.Cell" />
          <node concept="3qTvmN" id="5JQC2dmPzAi" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzAj" role="11_B2D" />
          <node concept="3qTvmN" id="5JQC2dmPzAk" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzAl" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzAm" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnX63y" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dnX63z" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzAg" resolve="cell" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPzAp" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPzAq" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzAr" role="2Oq$k0">
              <node concept="1rXfSq" id="5JQC2dmPzAs" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzAt" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.cellSet():java.util.Set" resolve="cellSet" />
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPzAu" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Set.contains(java.lang.Object):boolean" resolve="contains" />
              <node concept="37vLTw" id="5JQC2dmPzAv" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPzAg" resolve="cell" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzAx" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzAy" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzAz" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzA$" role="37wK5m">
                  <property role="Xl_RC" value="does not contain cell" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzA_" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzAg" resolve="cell" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzAA" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzAB" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzAC" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzC4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzC5" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table contains the given cell. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzAD" role="jymVt">
      <property role="TrG5h" value="containsRow" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzAE" role="3clF46">
        <property role="TrG5h" value="rowKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzAF" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzAG" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzAH" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzAI" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzAJ" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzAK" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPzAL" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzAM" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.containsRow(java.lang.Object):boolean" resolve="containsRow" />
                <node concept="37vLTw" id="5JQC2dmPzAN" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzAE" resolve="rowKey" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzAP" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzAQ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzAR" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzAS" role="37wK5m">
                  <property role="Xl_RC" value="contains row" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzAT" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzAE" resolve="rowKey" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzAU" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzAV" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzAW" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzC6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzC7" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain the given row key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzAX" role="jymVt">
      <property role="TrG5h" value="containsColumn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzAY" role="3clF46">
        <property role="TrG5h" value="columnKey" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzAZ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzB0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzB1" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzB2" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzB3" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzB4" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPzB5" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzB6" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.containsColumn(java.lang.Object):boolean" resolve="containsColumn" />
                <node concept="37vLTw" id="5JQC2dmPzB7" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzAY" resolve="columnKey" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzB9" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzBa" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzBb" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzBc" role="37wK5m">
                  <property role="Xl_RC" value="contains column" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzBd" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzAY" resolve="columnKey" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzBe" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzBf" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzBg" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzC8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzC9" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain the given column key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzBh" role="jymVt">
      <property role="TrG5h" value="containsValue" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzBi" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzBj" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzBk" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzBl" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzBm" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPzBn" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPzBo" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPzBp" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzBq" role="2OqNvi">
                <ref role="37wK5l" to="3o3z:~Table.containsValue(java.lang.Object):boolean" resolve="containsValue" />
                <node concept="37vLTw" id="5JQC2dmPzBr" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzBi" resolve="value" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzBt" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzBu" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzBv" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzBw" role="37wK5m">
                  <property role="Xl_RC" value="contains value" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPzBx" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzBi" resolve="value" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzBy" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzBz" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzB$" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzCa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzCb" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the table does not contain the given value. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwQf">
    <property role="TrG5h" value="BooleanSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPwQg" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPwQh" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPwQi" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPwQf" resolve="BooleanSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPwQj" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPwRp" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwRt" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwRu" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for boolean subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwRv" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwRw" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwRx" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwRy" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPwQk" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwQl" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwQm" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwQn" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwQo" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwQp" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwQq" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwQr" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC5X" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPC5Y" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwQm" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC5Z" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPwQo" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwQv" role="jymVt">
      <property role="TrG5h" value="isTrue" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwQw" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwQx" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwQy" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwQz" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwQ$" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPwQF" role="9aQIa">
            <node concept="3fqX7Q" id="5JQC2dmPwQG" role="3clFbw">
              <node concept="1rXfSq" id="5JQC2dmPwQH" role="3fr31v">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPwQJ" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPwQK" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPwQL" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPwQM" role="37wK5m">
                    <property role="Xl_RC" value="%s was expected to be true, but was false" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPwQN" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwRe" resolve="booleanSubject" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwQA" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwQB" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwQC" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPwQD" role="37wK5m">
                  <property role="Xl_RC" value="%s was expected to be true, but was null" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwQE" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwRe" resolve="booleanSubject" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwQO" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwQP" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwQQ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwRz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwR$" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is false or {@code null}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwQR" role="jymVt">
      <property role="TrG5h" value="isFalse" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwQS" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwQT" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwQU" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwQV" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwQW" role="3uHU7w" />
          </node>
          <node concept="3clFbJ" id="5JQC2dmPwR3" role="9aQIa">
            <node concept="1rXfSq" id="5JQC2dmPwR4" role="3clFbw">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="3clFbS" id="5JQC2dmPwR6" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPwR7" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPwR8" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                  <node concept="Xl_RD" id="5JQC2dmPwR9" role="37wK5m">
                    <property role="Xl_RC" value="%s was expected to be false, but was true" />
                  </node>
                  <node concept="1rXfSq" id="5JQC2dmPwRa" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwRe" resolve="booleanSubject" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwQY" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwQZ" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwR0" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPwR1" role="37wK5m">
                  <property role="Xl_RC" value="%s was expected to be false, but was null" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwR2" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwRe" resolve="booleanSubject" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwRb" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwRc" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwRd" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwR_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwRA" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is true or {@code null}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwRe" role="jymVt">
      <property role="TrG5h" value="booleanSubject" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwRf" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwRg" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmPwRm" role="3cqZAk">
            <node concept="3clFbC" id="5JQC2dmPwRh" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmPwRi" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPwRj" role="3uHU7w" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmPwRk" role="3K4E3e">
              <property role="Xl_RC" value="The subject" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwRl" role="3K4GZi">
              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwRn" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwRo" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPxsZ">
    <property role="TrG5h" value="AtomicLongMapSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPxt0" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPxt1" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
      <node concept="3uibUv" id="5JQC2dmPxt2" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPxsZ" resolve="AtomicLongMapSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPxt3" role="11_B2D">
        <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
        <node concept="3qTvmN" id="5JQC2dmPxt4" role="11_B2D" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPxwT" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPxx1" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxx2" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link AtomicLongMap} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxx3" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxx4" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPxx5" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPxx6" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPxt5" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPxt6" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPxt7" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxt8" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxt9" role="3clF46">
        <property role="TrG5h" value="map" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxta" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxtb" role="1tU5fm">
          <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
          <node concept="3qTvmN" id="5JQC2dmPxtc" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxtd" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC60" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPwlX" resolve="Subject" />
          <node concept="37vLTw" id="5JQC2dmPC61" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxt7" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC62" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPxt9" resolve="map" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxth" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxti" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPxtj" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxtk" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxtl" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxtm" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxtn" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxto" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPxtp" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnk" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPxtq" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxtk" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxtr" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxts" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxtt" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxx7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxx8" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link AtomicLongMap} does not define equality (i.e., it does not implement" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxx9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxa" role="1dT_Ay">
            <property role="1dT_AB" value="    equals()), so you probably don't want to call this method. Instead, perform your assertion" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxxb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxc" role="1dT_Ay">
            <property role="1dT_AB" value="    on the map view (e.g., assertThat(atomicLongMap.asMap()).isEqualTo(EXPECTED_MAP))." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxtu" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPxtv" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPxtw" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPxtx" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxty" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxtz" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxt$" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxt_" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPxtA" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnx" resolve="isNotEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPxtB" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxtx" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxtC" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxtD" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxtE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxe" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link AtomicLongMap} does not define equality (i.e., it does not implement" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxxf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxg" role="1dT_Ay">
            <property role="1dT_AB" value="    equals()), so you probably don't want to call this method. Instead, perform your assertion" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPxxh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxi" role="1dT_Ay">
            <property role="1dT_AB" value="    on the map view (e.g., assertThat(atomicLongMap.asMap()).isNotEqualTo(UNEXPECTED_MAP))." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxtF" role="jymVt">
      <property role="TrG5h" value="isEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxtG" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxtH" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxtI" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxtJ" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPxtK" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxtL" role="2OqNvi">
                <ref role="37wK5l" to="wyx4:~AtomicLongMap.isEmpty():boolean" resolve="isEmpty" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxtN" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxtO" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxtP" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxtQ" role="37wK5m">
                  <property role="Xl_RC" value="is empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxtR" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxtS" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxtT" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxk" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} is not empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxtU" role="jymVt">
      <property role="TrG5h" value="isNotEmpty" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPxtV" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxtW" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxtX" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPxtY" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPxtZ" role="2OqNvi">
              <ref role="37wK5l" to="wyx4:~AtomicLongMap.isEmpty():boolean" resolve="isEmpty" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxu1" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxu2" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxu3" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxu4" role="37wK5m">
                  <property role="Xl_RC" value="is not empty" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxu5" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxu6" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxu7" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxm" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} is empty. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxu8" role="jymVt">
      <property role="TrG5h" value="hasSize" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxu9" role="3clF46">
        <property role="TrG5h" value="expectedSize" />
        <property role="3TUv4t" value="false" />
        <node concept="10Oyi0" id="5JQC2dmPxua" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxub" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxuc" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmURr0" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,int):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dmURr1" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmURr2" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPxu9" resolve="expectedSize" />
              </node>
              <node concept="3cmrfG" id="5JQC2dmURr3" role="3uHU7w">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmURr4" role="37wK5m">
              <property role="Xl_RC" value="expectedSize (%s) must be &gt;= 0" />
            </node>
            <node concept="37vLTw" id="5JQC2dmURr5" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxu9" resolve="expectedSize" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxuk" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxuj" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSize" />
            <node concept="10Oyi0" id="5JQC2dmPxul" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPxum" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPxun" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxuo" role="2OqNvi">
                <ref role="37wK5l" to="wyx4:~AtomicLongMap.size():int" resolve="size" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxup" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPxuq" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxur" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxuj" resolve="actualSize" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxus" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxu9" resolve="expectedSize" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxuu" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxuv" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxuw" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPxux" role="37wK5m">
                  <property role="Xl_RC" value="has a size of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxuy" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxu9" resolve="expectedSize" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPxuz" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxu$" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxuj" resolve="actualSize" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxu_" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxuA" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxuB" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxo" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} does not have the given size. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxuC" role="jymVt">
      <property role="TrG5h" value="hasSum" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxuD" role="3clF46">
        <property role="TrG5h" value="expectedSum" />
        <property role="3TUv4t" value="false" />
        <node concept="3cpWsb" id="5JQC2dmPxuE" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxuF" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPxuH" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxuG" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualSum" />
            <node concept="3cpWsb" id="5JQC2dmPxuI" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPxuJ" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPxuK" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxuL" role="2OqNvi">
                <ref role="37wK5l" to="wyx4:~AtomicLongMap.sum():long" resolve="sum" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxuM" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPxuN" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxuO" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxuG" resolve="actualSum" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxuP" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxuD" resolve="expectedSum" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxuR" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxuS" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxuT" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                <node concept="Xl_RD" id="5JQC2dmPxuU" role="37wK5m">
                  <property role="Xl_RC" value="has a sum of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxuV" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxuD" resolve="expectedSum" />
                </node>
                <node concept="Xl_RD" id="5JQC2dmPxuW" role="37wK5m">
                  <property role="Xl_RC" value="is" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxuX" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxuG" resolve="actualSum" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxuY" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxuZ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxv0" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxq" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} does not have the given sum. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxv1" role="jymVt">
      <property role="TrG5h" value="containsKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxv2" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxv3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxv4" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxv5" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmUVqA" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dmUVqB" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxv2" resolve="key" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmUVqC" role="37wK5m">
              <property role="Xl_RC" value="AtomicLongMap does not support null keys" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxv9" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPxva" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPxvb" role="3fr31v">
              <node concept="1rXfSq" id="5JQC2dmPxvc" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPxvd" role="2OqNvi">
                <ref role="37wK5l" to="wyx4:~AtomicLongMap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
                <node concept="37vLTw" id="5JQC2dmPxve" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxv2" resolve="key" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxvg" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxvh" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxvi" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxvj" role="37wK5m">
                  <property role="Xl_RC" value="contains key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxvk" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxv2" resolve="key" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxvl" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxvm" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxvn" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxs" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} does not contain the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxvo" role="jymVt">
      <property role="TrG5h" value="doesNotContainKey" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxvp" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxvq" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPxvr" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPxvs" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmUZy5" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dmUZy6" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxvp" resolve="key" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmUZy7" role="37wK5m">
              <property role="Xl_RC" value="AtomicLongMap does not support null keys" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxvw" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPxvx" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPxvy" role="2Oq$k0">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="liA8E" id="5JQC2dmPxvz" role="2OqNvi">
              <ref role="37wK5l" to="wyx4:~AtomicLongMap.containsKey(java.lang.Object):boolean" resolve="containsKey" />
              <node concept="37vLTw" id="5JQC2dmPxv$" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPxvp" resolve="key" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxvA" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxvB" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxvC" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxvD" role="37wK5m">
                  <property role="Xl_RC" value="does not contain key" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxvE" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxvp" resolve="key" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxvF" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxvG" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxvH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxu" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} contains the given key. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxvI" role="jymVt">
      <property role="TrG5h" value="containsEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxvJ" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPxvK" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxvL" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="3cpWsb" id="5JQC2dmPxvM" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxvN" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmUYIZ" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmUZg9" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2dmUZpP" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPxvJ" resolve="key" />
            </node>
            <node concept="Xl_RD" id="5JQC2dmUZpQ" role="37wK5m">
              <property role="Xl_RC" value="AtomicLongMap does not support null keys" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPxvT" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPxvS" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actualValue" />
            <node concept="3cpWsb" id="5JQC2dmPxvU" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPxvV" role="33vP2m">
              <node concept="1eOMI4" id="5JQC2dmPxw0" role="2Oq$k0">
                <node concept="10QFUN" id="5JQC2dmPxvW" role="1eOMHV">
                  <node concept="1rXfSq" id="5JQC2dmPxvX" role="10QFUP">
                    <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPxvY" role="10QFUM">
                    <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
                    <node concept="3uibUv" id="5JQC2dmPxvZ" role="11_B2D">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPxw1" role="2OqNvi">
                <ref role="37wK5l" to="wyx4:~AtomicLongMap.get(java.lang.Object):long" resolve="get" />
                <node concept="37vLTw" id="5JQC2dmPxw2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPxvJ" resolve="key" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPxw3" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPxw4" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxw5" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxvS" resolve="actualValue" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPxw6" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPxvL" resolve="value" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPxw8" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPxw9" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPxwa" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPxwb" role="37wK5m">
                  <property role="Xl_RC" value="contains entry" />
                </node>
                <node concept="2YIFZM" id="5JQC2dmUPEb" role="37wK5m">
                  <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                  <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
                  <node concept="37vLTw" id="5JQC2dmUPEc" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxvJ" resolve="key" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmUPEd" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPxvL" resolve="value" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxwf" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxwg" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxwh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxw" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} does not contain the given entry. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPxwi" role="jymVt">
      <property role="TrG5h" value="doesNotContainEntry" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPxwj" role="3clF46">
        <property role="TrG5h" value="key" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPxwk" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPxwl" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPxwm" role="3clF46">
        <property role="TrG5h" value="value" />
        <property role="3TUv4t" value="false" />
        <node concept="3cpWsb" id="5JQC2dmPxwn" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPxwo" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPxwp" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPxwq" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPxwr" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPxwj" resolve="key" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPxws" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPxwu" role="3clFbx">
            <node concept="3cpWs8" id="5JQC2dmPxww" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPxwv" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="actualValue" />
                <node concept="3cpWsb" id="5JQC2dmPxwx" role="1tU5fm" />
                <node concept="2OqwBi" id="5JQC2dmPxwy" role="33vP2m">
                  <node concept="1eOMI4" id="5JQC2dmPxwB" role="2Oq$k0">
                    <node concept="10QFUN" id="5JQC2dmPxwz" role="1eOMHV">
                      <node concept="1rXfSq" id="5JQC2dmPxw$" role="10QFUP">
                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPxw_" role="10QFUM">
                        <ref role="3uigEE" to="wyx4:~AtomicLongMap" resolve="AtomicLongMap" />
                        <node concept="3uibUv" id="5JQC2dmPxwA" role="11_B2D">
                          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPxwC" role="2OqNvi">
                    <ref role="37wK5l" to="wyx4:~AtomicLongMap.get(java.lang.Object):long" resolve="get" />
                    <node concept="37vLTw" id="5JQC2dmPxwD" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPxwj" resolve="key" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPxwE" role="3cqZAp">
              <node concept="3clFbC" id="5JQC2dmPxwF" role="3clFbw">
                <node concept="37vLTw" id="5JQC2dmPxwG" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPxwv" resolve="actualValue" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPxwH" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPxwm" resolve="value" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPxwJ" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmPxwK" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPxwL" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmPxwM" role="37wK5m">
                      <property role="Xl_RC" value="does not contain entry" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2dmUSe_" role="37wK5m">
                      <ref role="1Pybhc" to="3o3z:~Maps" resolve="Maps" />
                      <ref role="37wK5l" to="3o3z:~Maps.immutableEntry(java.lang.Object,java.lang.Object):java.util.Map$Entry" resolve="immutableEntry" />
                      <node concept="37vLTw" id="5JQC2dmUSeA" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxwj" resolve="key" />
                      </node>
                      <node concept="37vLTw" id="5JQC2dmUSeB" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPxwm" resolve="value" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPxwQ" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPxwR" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPxwS" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPxxx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPxxy" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the {@link AtomicLongMap} contains the given entry. " />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzYZ">
    <property role="TrG5h" value="PrimitiveCharArraySubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzZ0" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzZ1" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPw1A" resolve="AbstractArraySubject" />
      <node concept="3uibUv" id="5JQC2dmPzZ2" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzYZ" resolve="PrimitiveCharArraySubject" />
      </node>
      <node concept="10Q1$e" id="5JQC2dmPzZ4" role="11_B2D">
        <node concept="10Pfzv" id="5JQC2dmPzZ3" role="10Q1$1" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmP$1n" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmP$1u" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$1v" role="1dT_Ay">
          <property role="1dT_AB" value=" A Subject to handle testing propositions for {@code char[]}." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$1w" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$1x" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmP$1y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmP$1z" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber (cgruber@israfil.net)" />
        </node>
      </node>
    </node>
    <node concept="3clFbW" id="5JQC2dmPzZ5" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzZ6" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzZ7" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzZ8" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzZ9" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzZa" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="10Q1$e" id="5JQC2dmPzZc" role="1tU5fm">
          <node concept="10Pfzv" id="5JQC2dmPzZb" role="10Q1$1" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzZd" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPC6L" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPw1J" resolve="AbstractArraySubject" />
          <node concept="37vLTw" id="5JQC2dmPC6M" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzZ7" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPC6N" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzZ9" resolve="o" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzZh" role="jymVt">
      <property role="TrG5h" value="underlyingType" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzZi" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzZj" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzZk" role="3cqZAp">
          <node concept="Xl_RD" id="5JQC2dmPzZl" role="3cqZAk">
            <property role="Xl_RC" value="char" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzZm" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzZn" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzZo" role="jymVt">
      <property role="TrG5h" value="listRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzZp" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzZq" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzZr" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2doE5Vu" role="3cqZAk">
            <ref role="1Pybhc" to="gxwn:~Chars" resolve="Chars" />
            <ref role="37wK5l" to="gxwn:~Chars.asList(char...):java.util.List" resolve="asList" />
            <node concept="1rXfSq" id="5JQC2doE5Vv" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPzZu" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzZv" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="5JQC2dmPzZw" role="11_B2D">
          <ref role="3uigEE" to="wyt6:~Character" resolve="Character" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzZx" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzZy" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzZz" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzZ$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doE7A3" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzZ_" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPzZB" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPzZA" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmPzZD" role="1tU5fm">
              <node concept="10Pfzv" id="5JQC2dmPzZC" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPzZE" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPzZF" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPzZG" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPzZH" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPzZA" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPzZI" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPzZz" resolve="expected" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzZK" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPzZL" role="3cqZAp" />
            <node concept="3SKdUt" id="5JQC2dmP$1F" role="3cqZAp">
              <node concept="1PaTwC" id="1fGNp1n8Trm" role="3ndbpf">
                <node concept="3oM_SD" id="1fGNp1n8Trn" role="1PaTwD">
                  <property role="3oM_SC" value="short-cut." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$0g" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$0h" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$0c" role="TDEfX">
              <node concept="3clFbF" id="5JQC2dmP$0d" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmP$0e" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPw3f" resolve="failWithBadType" />
                  <node concept="37vLTw" id="5JQC2dmP$0f" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzZz" resolve="expected" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$08" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5JQC2dmP$0a" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzZN" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmPzZP" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmPzZO" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmPzZR" role="1tU5fm">
                  <node concept="10Pfzv" id="5JQC2dmPzZQ" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmPzZS" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmPzZT" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmPzZz" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmPzZV" role="10QFUM">
                    <node concept="10Pfzv" id="5JQC2dmPzZU" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmPzZW" role="3cqZAp">
              <node concept="3fqX7Q" id="5JQC2dmPzZX" role="3clFbw">
                <node concept="2YIFZM" id="5JQC2dmPC7z" role="3fr31v">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(char[],char[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPC7$" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzZA" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPC7_" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPzZO" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$02" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$03" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$04" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                    <node concept="Xl_RD" id="5JQC2dmP$05" role="37wK5m">
                      <property role="Xl_RC" value="is equal to" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doE7Va" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Chars" resolve="Chars" />
                      <ref role="37wK5l" to="gxwn:~Chars.asList(char...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doE7Vb" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPzZO" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$0i" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$0j" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$0k" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$1$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1_" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$1A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1B" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$1C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1D" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$0l" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmP$0m" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmP$0n" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmP$0o" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
        <node concept="2AHcQZ" id="5JQC2doE9_J" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmP$0p" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmP$0r" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmP$0q" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="actual" />
            <node concept="10Q1$e" id="5JQC2dmP$0t" role="1tU5fm">
              <node concept="10Pfzv" id="5JQC2dmP$0s" role="10Q1$1" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmP$0u" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5JQC2dmP$0Y" role="3cqZAp">
          <node concept="TDmWw" id="5JQC2dmP$0Z" role="TEbGg">
            <node concept="3clFbS" id="5JQC2dmP$0X" role="TDEfX">
              <node concept="3SKdUt" id="5JQC2dmP$1N" role="3cqZAp">
                <node concept="1PaTwC" id="1fGNp1n8Tro" role="3ndbpf">
                  <node concept="3oM_SD" id="1fGNp1n8Trp" role="1PaTwD">
                    <property role="3oM_SC" value="If" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trq" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trr" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trs" role="1PaTwD">
                    <property role="3oM_SC" value="char[]" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trt" role="1PaTwD">
                    <property role="3oM_SC" value="then" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tru" role="1PaTwD">
                    <property role="3oM_SC" value="it's" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trv" role="1PaTwD">
                    <property role="3oM_SC" value="not" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trw" role="1PaTwD">
                    <property role="3oM_SC" value="equal" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trx" role="1PaTwD">
                    <property role="3oM_SC" value="and" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Try" role="1PaTwD">
                    <property role="3oM_SC" value="the" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Trz" role="1PaTwD">
                    <property role="3oM_SC" value="test" />
                  </node>
                  <node concept="3oM_SD" id="1fGNp1n8Tr$" role="1PaTwD">
                    <property role="3oM_SC" value="passes." />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="5JQC2dmP$0T" role="TDEfY">
              <property role="3TUv4t" value="false" />
              <property role="TrG5h" value="ignored" />
              <node concept="3uibUv" id="5JQC2dmP$0V" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~ClassCastException" resolve="ClassCastException" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmP$0w" role="SfCbr">
            <node concept="3cpWs8" id="5JQC2dmP$0y" role="3cqZAp">
              <node concept="3cpWsn" id="5JQC2dmP$0x" role="3cpWs9">
                <property role="3TUv4t" value="false" />
                <property role="TrG5h" value="expectedArray" />
                <node concept="10Q1$e" id="5JQC2dmP$0$" role="1tU5fm">
                  <node concept="10Pfzv" id="5JQC2dmP$0z" role="10Q1$1" />
                </node>
                <node concept="10QFUN" id="5JQC2dmP$0_" role="33vP2m">
                  <node concept="37vLTw" id="5JQC2dmP$0A" role="10QFUP">
                    <ref role="3cqZAo" node="5JQC2dmP$0n" resolve="expected" />
                  </node>
                  <node concept="10Q1$e" id="5JQC2dmP$0C" role="10QFUM">
                    <node concept="10Pfzv" id="5JQC2dmP$0B" role="10Q1$1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbJ" id="5JQC2dmP$0D" role="3cqZAp">
              <node concept="22lmx$" id="5JQC2dmP$0E" role="3clFbw">
                <node concept="3clFbC" id="5JQC2dmP$0F" role="3uHU7B">
                  <node concept="37vLTw" id="5JQC2dmP$0G" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmP$0q" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmP$0H" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmP$0n" resolve="expected" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5JQC2dmPC7C" role="3uHU7w">
                  <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                  <ref role="37wK5l" to="33ny:~Arrays.equals(char[],char[]):boolean" resolve="equals" />
                  <node concept="37vLTw" id="5JQC2dmPC7D" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$0q" resolve="actual" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPC7E" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmP$0x" resolve="expectedArray" />
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmP$0M" role="3clFbx">
                <node concept="3clFbF" id="5JQC2dmP$0N" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmP$0O" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                    <node concept="Xl_RD" id="5JQC2dmP$0P" role="37wK5m">
                      <property role="Xl_RC" value="%s unexpectedly equal to %s." />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmP$0Q" role="37wK5m">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                    <node concept="2YIFZM" id="5JQC2doE6CW" role="37wK5m">
                      <ref role="1Pybhc" to="gxwn:~Chars" resolve="Chars" />
                      <ref role="37wK5l" to="gxwn:~Chars.asList(char...):java.util.List" resolve="asList" />
                      <node concept="37vLTw" id="5JQC2doE6CX" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmP$0x" resolve="expectedArray" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$10" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmP$11" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmP$12" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmP$1G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1H" role="1dT_Ay">
            <property role="1dT_AB" value="A proposition that the actual array and {@code expected} are not arrays of the same length and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$1I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1J" role="1dT_Ay">
            <property role="1dT_AB" value="type, containing elements such that each element in {@code expected} is equal to each element" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmP$1K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmP$1L" role="1dT_Ay">
            <property role="1dT_AB" value="in the actual array, and in the same position." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmP$13" role="jymVt">
      <property role="TrG5h" value="asList" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmP$14" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmP$15" role="3cqZAp">
          <node concept="3K4zz7" id="5JQC2dmP$1k" role="3cqZAk">
            <node concept="3y3z36" id="5JQC2dmP$16" role="3K4Cdx">
              <node concept="1rXfSq" id="5JQC2dmP$17" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmP$18" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$19" role="3K4E3e">
              <node concept="2OqwBi" id="5JQC2dmP$1a" role="2Oq$k0">
                <node concept="1rXfSq" id="5JQC2dmP$1b" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
                </node>
                <node concept="liA8E" id="5JQC2dmP$1c" role="2OqNvi">
                  <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                  <node concept="1rXfSq" id="5JQC2dmP$1d" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPzZo" resolve="listRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmP$1e" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPwmq" resolve="named" />
                <node concept="1rXfSq" id="5JQC2dmP$1f" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwmj" resolve="internalCustomName" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmP$1g" role="3K4GZi">
              <node concept="1rXfSq" id="5JQC2dmP$1h" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuI" resolve="check" />
              </node>
              <node concept="liA8E" id="5JQC2dmP$1i" role="2OqNvi">
                <ref role="37wK5l" node="5JQC2dmPzTZ" resolve="that" />
                <node concept="1rXfSq" id="5JQC2dmP$1j" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPzZo" resolve="listRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmP$1l" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmP$1m" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPy3w" resolve="IterableSubject" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwlq">
    <property role="TrG5h" value="Subject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPwlr" role="1B3o_S" />
    <node concept="16euLQ" id="5JQC2dmPwls" role="16eVyc">
      <property role="TrG5h" value="S" />
      <node concept="3uibUv" id="5JQC2dmPwlt" role="3ztrMU">
        <ref role="3uigEE" node="5JQC2dmPwlq" resolve="Subject" />
        <node concept="16syzq" id="5JQC2dmPwlu" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwls" resolve="S" />
        </node>
        <node concept="16syzq" id="5JQC2dmPwlv" role="11_B2D">
          <ref role="16sUi3" node="5JQC2dmPwlw" resolve="T" />
        </node>
      </node>
    </node>
    <node concept="16euLQ" id="5JQC2dmPwlw" role="16eVyc">
      <property role="TrG5h" value="T" />
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPw$A" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPw$M" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$N" role="1dT_Ay">
          <property role="1dT_AB" value=" A {@code Subject} in {@code Truth} fits into the assertion fluent chain, taking the place of the" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$O" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$P" role="1dT_Ay">
          <property role="1dT_AB" value=" &quot;subject of the test&quot;. For instance, in {@code assertThat(&quot;foo&quot;).isNotNull()}, {@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$Q" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$R" role="1dT_Ay">
          <property role="1dT_AB" value=" Truth#assertThat(String)} returns a StringSubject which wraps the actual value itself, providing" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$S" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$T" role="1dT_Ay">
          <property role="1dT_AB" value=" a hook for methods which test propositions about the actual value." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$U" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$V" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$W" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$X" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Custom sub-types of Subject provide type-appropriate methods which can then provide more" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw$Y" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw$Z" role="1dT_Ay">
          <property role="1dT_AB" value=" suitable error messages than the traditional assertions may provide." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw_0" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw_1" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw_2" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw_3" role="1dT_Ay">
          <property role="1dT_AB" value=" @param &lt;S&gt; the self-type, allowing {@code this}-returning methods to avoid needing subclassing" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw_4" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw_5" role="1dT_Ay">
          <property role="1dT_AB" value=" @param &lt;T&gt; the type of the object being tested by this {@code Subject}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw_6" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw_7" role="1dT_Ay">
          <property role="1dT_AB" value=" @author David Saff" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPw_8" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPw_9" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Christian Gruber" />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPwlx" role="jymVt">
      <property role="TrG5h" value="IGNORE_STRATEGY" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPwly" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="2ShNRf" id="5JQC2dmPwlz" role="33vP2m">
        <node concept="YeOm9" id="5JQC2dmPwl$" role="2ShVmc">
          <node concept="1Y3b0j" id="5JQC2dmPwl_" role="YeSDq">
            <property role="1sVAO0" value="false" />
            <property role="1EXbeo" value="false" />
            <ref role="1Y3XeK" node="5JQC2dmP$8X" resolve="AbstractFailureStrategy" />
            <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
            <node concept="3clFb_" id="5JQC2dmPwlA" role="jymVt">
              <property role="TrG5h" value="fail" />
              <property role="DiZV1" value="false" />
              <property role="od$2w" value="false" />
              <node concept="2AHcQZ" id="5JQC2dmPwlB" role="2AJF6D">
                <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
              </node>
              <node concept="37vLTG" id="5JQC2dmPwlC" role="3clF46">
                <property role="TrG5h" value="message" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwlD" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="37vLTG" id="5JQC2dmPwlE" role="3clF46">
                <property role="TrG5h" value="cause" />
                <property role="3TUv4t" value="false" />
                <node concept="3uibUv" id="5JQC2dmPwlF" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwlG" role="3clF47" />
              <node concept="3Tm1VV" id="5JQC2dmPwlH" role="1B3o_S" />
              <node concept="3cqZAl" id="5JQC2dmPwlI" role="3clF45" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwlJ" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPwlK" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="failureStrategy" />
      <property role="3TUv4t" value="true" />
      <node concept="3uibUv" id="5JQC2dmPwlM" role="1tU5fm">
        <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwlN" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPwlO" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="actual" />
      <property role="3TUv4t" value="true" />
      <node concept="16syzq" id="5JQC2dmPwlQ" role="1tU5fm">
        <ref role="16sUi3" node="5JQC2dmPwlw" resolve="T" />
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwlR" role="1B3o_S" />
    </node>
    <node concept="312cEg" id="5JQC2dmPwlS" role="jymVt">
      <property role="34CwA1" value="false" />
      <property role="eg7rD" value="false" />
      <property role="TrG5h" value="customName" />
      <property role="3TUv4t" value="false" />
      <node concept="3uibUv" id="5JQC2dmPwlU" role="1tU5fm">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="10Nm6u" id="5JQC2dmPwlV" role="33vP2m" />
      <node concept="3Tm6S6" id="5JQC2dmPwlW" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPwlX" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPwlY" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPwlZ" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwm0" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwm1" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwm2" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="16syzq" id="5JQC2dmPwm3" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPwlw" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwm4" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwm5" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPwm6" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPwm7" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmPwm8" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmPwm9" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPwlK" resolve="failureStrategy" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2do04uO" role="37vLTx">
              <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
              <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object):java.lang.Object" resolve="checkNotNull" />
              <node concept="37vLTw" id="5JQC2do04uP" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwlZ" resolve="failureStrategy" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwmc" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPwmd" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPwme" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmPwmf" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmPwmg" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPwlO" resolve="actual" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPwmh" role="37vLTx">
              <ref role="3cqZAo" node="5JQC2dmPwm1" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwmi" role="1B3o_S" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPwmj" role="jymVt">
      <property role="TrG5h" value="internalCustomName" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwmk" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwml" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwmm" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwlS" resolve="customName" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwmn" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwmo" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwmp" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_a" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_b" role="1dT_Ay">
            <property role="1dT_AB" value="An internal method used to obtain the value set by {@link #named(String, Object...)}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwmq" role="jymVt">
      <property role="TrG5h" value="named" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwmr" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~SuppressWarnings" resolve="SuppressWarnings" />
        <node concept="2B6LJw" id="5JQC2dmPwms" role="2B76xF">
          <ref role="2B6OnR" to="wyt6:~SuppressWarnings.value()" resolve="value" />
          <node concept="Xl_RD" id="5JQC2dmPwmt" role="2B70Vg">
            <property role="Xl_RC" value="unchecked" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwmv" role="3clF46">
        <property role="TrG5h" value="format" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwmw" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwmx" role="3clF46">
        <property role="TrG5h" value="args" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPwmz" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwmy" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwm$" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwm_" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2do09km" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
            <node concept="37vLTw" id="5JQC2do09kn" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwmv" resolve="format" />
            </node>
            <node concept="Xl_RD" id="5JQC2do09ko" role="37wK5m">
              <property role="Xl_RC" value="Name passed to named() cannot be null." />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwmD" role="3cqZAp">
          <node concept="37vLTI" id="5JQC2dmPwmE" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPwmF" role="37vLTJ">
              <node concept="Xjq3P" id="5JQC2dmPwmG" role="2Oq$k0" />
              <node concept="2OwXpG" id="5JQC2dmPwmH" role="2OqNvi">
                <ref role="2Oxat5" node="5JQC2dmPwlS" resolve="customName" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmPC8x" role="37vLTx">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="37vLTw" id="5JQC2dmPC8y" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwmv" resolve="format" />
              </node>
              <node concept="37vLTw" id="5JQC2dmPC8z" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwmx" resolve="args" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwmL" role="3cqZAp">
          <node concept="10QFUN" id="5JQC2dmPwmM" role="3cqZAk">
            <node concept="Xjq3P" id="5JQC2dmPwmN" role="10QFUP" />
            <node concept="16syzq" id="5JQC2dmPwmO" role="10QFUM">
              <ref role="16sUi3" node="5JQC2dmPwls" resolve="S" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwmP" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmPwmQ" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPwls" resolve="S" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwmR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_c" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_d" role="1dT_Ay">
            <property role="1dT_AB" value=" Adds a prefix to the subject, when it is displayed in error messages. This is especially useful" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_e" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_f" role="1dT_Ay">
            <property role="1dT_AB" value=" in the context of types that have no helpful {@code toString()} representation, e.g. boolean." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_g" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_h" role="1dT_Ay">
            <property role="1dT_AB" value=" Writing {@code assertThat(foo).named(&quot;foo&quot;).isTrue();} then results in a more reasonable error" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_i" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_j" role="1dT_Ay">
            <property role="1dT_AB" value=" message." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_k" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_l" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_m" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_n" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;{@code named()} takes a format template and argument objects which will be substituted into" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_o" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_p" role="1dT_Ay">
            <property role="1dT_AB" value=" the template, similar to {@link String#format(String, Object...)}, the chief difference being" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_r" role="1dT_Ay">
            <property role="1dT_AB" value=" that extra parameters (for which there are no template variables) will be appended to the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_s" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_t" role="1dT_Ay">
            <property role="1dT_AB" value=" resulting string in brackets. Additionally, this only supports the {@code %s} template variable" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_u" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_v" role="1dT_Ay">
            <property role="1dT_AB" value=" type." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwmS" role="jymVt">
      <property role="TrG5h" value="isNull" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwmT" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwmU" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwmV" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwmW" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwmX" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwmZ" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwn0" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwn1" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwn2" role="37wK5m">
                  <property role="Xl_RC" value="is null" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwn3" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwn4" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwn5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_w" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_x" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not null. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwn6" role="jymVt">
      <property role="TrG5h" value="isNotNull" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwn7" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwn8" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwn9" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwna" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwnb" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwnd" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwne" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwnf" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzF" resolve="failWithoutActual" />
                <node concept="Xl_RD" id="5JQC2dmPwng" role="37wK5m">
                  <property role="Xl_RC" value="is a non-null reference" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwnh" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwni" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwnj" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_z" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is null. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwnk" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwnl" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwnm" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwnn" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwno" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwnp" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwnq" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnI" resolve="doEqualCheck" />
            <node concept="1rXfSq" id="5JQC2dmPwnr" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwns" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwnl" resolve="other" />
            </node>
            <node concept="3clFbT" id="5JQC2dmPwnt" role="37wK5m">
              <property role="3clFbU" value="true" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwnu" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwnv" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwnw" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw__" role="1dT_Ay">
            <property role="1dT_AB" value=" Fails if the subject is not equal to the given object. For the purposes of this comparison, two" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_A" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_B" role="1dT_Ay">
            <property role="1dT_AB" value=" objects are equal if any of the following is true:" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_C" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_D" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_E" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_F" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;ul&gt;" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_G" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_H" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;they are equal according to {@link Objects#equal}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_I" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_J" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;they are arrays and are considered equal by the appropriate {@link Arrays#equals}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_K" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_L" role="1dT_Ay">
            <property role="1dT_AB" value="       overload" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_M" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_N" role="1dT_Ay">
            <property role="1dT_AB" value="   &lt;li&gt;they are boxed integer types ({@code Byte}, {@code Short}, {@code Character}, {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_O" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_P" role="1dT_Ay">
            <property role="1dT_AB" value="       Integer}, or {@code Long}) and they are numerically equal when converted to {@code Long}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_Q" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_R" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;/ul&gt;" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwnx" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwny" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwnz" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwn$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwn_" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwnA" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwnB" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnI" resolve="doEqualCheck" />
            <node concept="1rXfSq" id="5JQC2dmPwnC" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwnD" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwny" resolve="other" />
            </node>
            <node concept="3clFbT" id="5JQC2dmPwnE" role="37wK5m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwnF" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwnG" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwnH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_S" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_T" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is equal to the given object. The meaning of equality is the same as for" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPw_U" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_V" role="1dT_Ay">
            <property role="1dT_AB" value="the {@link #isEqualTo} method." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwnI" role="jymVt">
      <property role="TrG5h" value="doEqualCheck" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwnJ" role="3clF46">
        <property role="TrG5h" value="rawSubject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwnK" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwnL" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwnM" role="3clF46">
        <property role="TrG5h" value="rawOther" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwnN" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwnO" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwnP" role="3clF46">
        <property role="TrG5h" value="expectEqual" />
        <property role="3TUv4t" value="false" />
        <node concept="10P_77" id="5JQC2dmPwnQ" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwnR" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwnT" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwnS" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="subject" />
            <node concept="3uibUv" id="5JQC2dmPwnU" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwnW" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwnV" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="other" />
            <node concept="3uibUv" id="5JQC2dmPwnX" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwnY" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPwnZ" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwo0" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwoI" resolve="isIntegralBoxedPrimitive" />
              <node concept="37vLTw" id="5JQC2dmPwo1" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwnJ" resolve="rawSubject" />
              </node>
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwo2" role="3uHU7w">
              <ref role="37wK5l" node="5JQC2dmPwoI" resolve="isIntegralBoxedPrimitive" />
              <node concept="37vLTw" id="5JQC2dmPwo3" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwnM" resolve="rawOther" />
              </node>
            </node>
          </node>
          <node concept="9aQIb" id="5JQC2dmPwog" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwoh" role="9aQI4">
              <node concept="3clFbF" id="5JQC2dmPwoi" role="3cqZAp">
                <node concept="37vLTI" id="5JQC2dmPwoj" role="3clFbG">
                  <node concept="37vLTw" id="5JQC2dmPwok" role="37vLTJ">
                    <ref role="3cqZAo" node="5JQC2dmPwnS" resolve="subject" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwol" role="37vLTx">
                    <ref role="3cqZAo" node="5JQC2dmPwnJ" resolve="rawSubject" />
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="5JQC2dmPwom" role="3cqZAp">
                <node concept="37vLTI" id="5JQC2dmPwon" role="3clFbG">
                  <node concept="37vLTw" id="5JQC2dmPwoo" role="37vLTJ">
                    <ref role="3cqZAo" node="5JQC2dmPwnV" resolve="other" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwop" role="37vLTx">
                    <ref role="3cqZAo" node="5JQC2dmPwnM" resolve="rawOther" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwo5" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwo6" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPwo7" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPwo8" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPwnS" resolve="subject" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwo9" role="37vLTx">
                  <ref role="37wK5l" node="5JQC2dmPwp9" resolve="integralValue" />
                  <node concept="37vLTw" id="5JQC2dmPwoa" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwnJ" resolve="rawSubject" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5JQC2dmPwob" role="3cqZAp">
              <node concept="37vLTI" id="5JQC2dmPwoc" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPwod" role="37vLTJ">
                  <ref role="3cqZAo" node="5JQC2dmPwnV" resolve="other" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwoe" role="37vLTx">
                  <ref role="37wK5l" node="5JQC2dmPwp9" resolve="integralValue" />
                  <node concept="37vLTw" id="5JQC2dmPwof" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwnM" resolve="rawOther" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwoq" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwor" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnZ6$H" role="3uHU7B">
              <ref role="1Pybhc" to="gyfg:~Objects" resolve="Objects" />
              <ref role="37wK5l" to="gyfg:~Objects.equal(java.lang.Object,java.lang.Object):boolean" resolve="equal" />
              <node concept="37vLTw" id="5JQC2dnZ6$I" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwnS" resolve="subject" />
              </node>
              <node concept="37vLTw" id="5JQC2dnZ6$J" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwnV" resolve="other" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPwov" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwnP" resolve="expectEqual" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwox" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwoy" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwoz" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwvu" resolve="failComparingToStrings" />
                <node concept="3K4zz7" id="5JQC2dmPwoB" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPwo$" role="3K4Cdx">
                    <ref role="3cqZAo" node="5JQC2dmPwnP" resolve="expectEqual" />
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPwo_" role="3K4E3e">
                    <property role="Xl_RC" value="is equal to" />
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPwoA" role="3K4GZi">
                    <property role="Xl_RC" value="is not equal to" />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPwoC" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwnS" resolve="subject" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwoD" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwnV" resolve="other" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwoE" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwnM" resolve="rawOther" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwoF" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwnP" resolve="expectEqual" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwoG" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwoH" role="3clF45" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwoI" role="jymVt">
      <property role="TrG5h" value="isIntegralBoxedPrimitive" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwoJ" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwoK" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwoL" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwoM" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwoN" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPwoO" role="3cqZAk">
            <node concept="22lmx$" id="5JQC2dmPwoP" role="3uHU7B">
              <node concept="22lmx$" id="5JQC2dmPwoQ" role="3uHU7B">
                <node concept="22lmx$" id="5JQC2dmPwoR" role="3uHU7B">
                  <node concept="2ZW3vV" id="5JQC2dmPwoU" role="3uHU7B">
                    <node concept="37vLTw" id="5JQC2dmPwoS" role="2ZW6bz">
                      <ref role="3cqZAo" node="5JQC2dmPwoJ" resolve="o" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPwoT" role="2ZW6by">
                      <ref role="3uigEE" to="wyt6:~Byte" resolve="Byte" />
                    </node>
                  </node>
                  <node concept="2ZW3vV" id="5JQC2dmPwoX" role="3uHU7w">
                    <node concept="37vLTw" id="5JQC2dmPwoV" role="2ZW6bz">
                      <ref role="3cqZAo" node="5JQC2dmPwoJ" resolve="o" />
                    </node>
                    <node concept="3uibUv" id="5JQC2dmPwoW" role="2ZW6by">
                      <ref role="3uigEE" to="wyt6:~Short" resolve="Short" />
                    </node>
                  </node>
                </node>
                <node concept="2ZW3vV" id="5JQC2dmPwp0" role="3uHU7w">
                  <node concept="37vLTw" id="5JQC2dmPwoY" role="2ZW6bz">
                    <ref role="3cqZAo" node="5JQC2dmPwoJ" resolve="o" />
                  </node>
                  <node concept="3uibUv" id="5JQC2dmPwoZ" role="2ZW6by">
                    <ref role="3uigEE" to="wyt6:~Character" resolve="Character" />
                  </node>
                </node>
              </node>
              <node concept="2ZW3vV" id="5JQC2dmPwp3" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmPwp1" role="2ZW6bz">
                  <ref role="3cqZAo" node="5JQC2dmPwoJ" resolve="o" />
                </node>
                <node concept="3uibUv" id="5JQC2dmPwp2" role="2ZW6by">
                  <ref role="3uigEE" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
            </node>
            <node concept="2ZW3vV" id="5JQC2dmPwp6" role="3uHU7w">
              <node concept="37vLTw" id="5JQC2dmPwp4" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmPwoJ" resolve="o" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPwp5" role="2ZW6by">
                <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwp7" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPwp8" role="3clF45" />
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwp9" role="jymVt">
      <property role="TrG5h" value="integralValue" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwpa" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwpb" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwpc" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwpd" role="3cqZAp">
          <node concept="2ZW3vV" id="5JQC2dmPwpg" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwpe" role="2ZW6bz">
              <ref role="3cqZAo" node="5JQC2dmPwpa" resolve="o" />
            </node>
            <node concept="3uibUv" id="5JQC2dmPwpf" role="2ZW6by">
              <ref role="3uigEE" to="wyt6:~Character" resolve="Character" />
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPwps" role="9aQIa">
            <node concept="2ZW3vV" id="5JQC2dmPwpv" role="3clFbw">
              <node concept="37vLTw" id="5JQC2dmPwpt" role="2ZW6bz">
                <ref role="3cqZAo" node="5JQC2dmPwpa" resolve="o" />
              </node>
              <node concept="3uibUv" id="5JQC2dmPwpu" role="2ZW6by">
                <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPwpD" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPwpE" role="9aQI4">
                <node concept="YS8fn" id="5JQC2dmPwpJ" role="3cqZAp">
                  <node concept="2ShNRf" id="5JQC2dmPC8B" role="YScLw">
                    <node concept="1pGfFk" id="5JQC2dmPCao" role="2ShVmc">
                      <ref role="37wK5l" to="wyt6:~AssertionError.&lt;init&gt;(java.lang.Object)" resolve="AssertionError" />
                      <node concept="3cpWs3" id="5JQC2dmPCap" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPCaq" role="3uHU7B">
                          <ref role="3cqZAo" node="5JQC2dmPwpa" resolve="o" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmPCar" role="3uHU7w">
                          <property role="Xl_RC" value=" must be either a Character or a Number." />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPwpx" role="3clFbx">
              <node concept="3cpWs6" id="5JQC2dmPwpy" role="3cqZAp">
                <node concept="2OqwBi" id="5JQC2dmPwpz" role="3cqZAk">
                  <node concept="1eOMI4" id="5JQC2dmPwpB" role="2Oq$k0">
                    <node concept="10QFUN" id="5JQC2dmPwp$" role="1eOMHV">
                      <node concept="37vLTw" id="5JQC2dmPwp_" role="10QFUP">
                        <ref role="3cqZAo" node="5JQC2dmPwpa" resolve="o" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPwpA" role="10QFUM">
                        <ref role="3uigEE" to="wyt6:~Number" resolve="Number" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwpC" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Number.longValue():long" resolve="longValue" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwpi" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwpj" role="3cqZAp">
              <node concept="10QFUN" id="5JQC2dmPwpk" role="3cqZAk">
                <node concept="2OqwBi" id="5JQC2dmPwpl" role="10QFUP">
                  <node concept="1eOMI4" id="5JQC2dmPwpp" role="2Oq$k0">
                    <node concept="10QFUN" id="5JQC2dmPwpm" role="1eOMHV">
                      <node concept="37vLTw" id="5JQC2dmPwpn" role="10QFUP">
                        <ref role="3cqZAo" node="5JQC2dmPwpa" resolve="o" />
                      </node>
                      <node concept="3uibUv" id="5JQC2dmPwpo" role="10QFUM">
                        <ref role="3uigEE" to="wyt6:~Character" resolve="Character" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwpq" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Character.charValue():char" resolve="charValue" />
                  </node>
                </node>
                <node concept="3cpWsb" id="5JQC2dmPwpr" role="10QFUM" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwpK" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwpL" role="3clF45">
        <ref role="3uigEE" to="wyt6:~Long" resolve="Long" />
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwpM" role="jymVt">
      <property role="TrG5h" value="isSameAs" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwpN" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwpO" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwpP" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwpQ" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwpR" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwpS" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwpT" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwpU" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwpN" resolve="other" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwpW" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwpX" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwpY" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwvu" resolve="failComparingToStrings" />
                <node concept="Xl_RD" id="5JQC2dmPwpZ" role="37wK5m">
                  <property role="Xl_RC" value="is the same instance as" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwq0" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwq1" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwpN" resolve="other" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwq2" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwpN" resolve="other" />
                </node>
                <node concept="3clFbT" id="5JQC2dmPwq3" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwq4" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwq5" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwq6" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_W" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_X" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not the same instance as the given object. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwq7" role="jymVt">
      <property role="TrG5h" value="isNotSameAs" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwq8" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwq9" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwqa" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwqb" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwqc" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwqd" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwqe" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwqf" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwq8" resolve="other" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwqh" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwqi" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwqj" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwqk" role="37wK5m">
                  <property role="Xl_RC" value="is not the same instance as" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwql" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwq8" resolve="other" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwqm" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwqn" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwqo" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPw_Y" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPw_Z" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is the same instance as the given object. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwqp" role="jymVt">
      <property role="TrG5h" value="isInstanceOf" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwqq" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwqr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPwqs" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwqt" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwqu" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwqv" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwqw" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwqq" resolve="clazz" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwqx" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwqz" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPwqA" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmPCas" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmPCaA" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~NullPointerException.&lt;init&gt;(java.lang.String)" resolve="NullPointerException" />
                  <node concept="Xl_RD" id="5JQC2dmPCaB" role="37wK5m">
                    <property role="Xl_RC" value="clazz" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwqB" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPwqC" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnYM$z" role="3fr31v">
              <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
              <ref role="37wK5l" node="5JQC2dmPxFF" resolve="isInstanceOfType" />
              <node concept="1rXfSq" id="5JQC2dnYM$$" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="37vLTw" id="5JQC2dnYM$_" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwqq" resolve="clazz" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwqH" role="3clFbx">
            <node concept="3clFbJ" id="5JQC2dmPwqI" role="3cqZAp">
              <node concept="3y3z36" id="5JQC2dmPwqJ" role="3clFbw">
                <node concept="1rXfSq" id="5JQC2dmPwqK" role="3uHU7B">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPwqL" role="3uHU7w" />
              </node>
              <node concept="9aQIb" id="5JQC2dmPwrj" role="9aQIa">
                <node concept="3clFbS" id="5JQC2dmPwrk" role="9aQI4">
                  <node concept="3clFbF" id="5JQC2dmPwrl" role="3cqZAp">
                    <node concept="1rXfSq" id="5JQC2dmPwrm" role="3clFbG">
                      <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                      <node concept="Xl_RD" id="5JQC2dmPwrn" role="37wK5m">
                        <property role="Xl_RC" value="is an instance of" />
                      </node>
                      <node concept="2OqwBi" id="5JQC2dmPCaJ" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPCaI" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwqq" resolve="clazz" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCaK" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbS" id="5JQC2dmPwqN" role="3clFbx">
                <node concept="3clFbJ" id="5JQC2dmPwqO" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwqP" role="3clFbw">
                    <ref role="37wK5l" node="5JQC2dmPw$r" resolve="classMetadataUnsupported" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwqR" role="3clFbx">
                    <node concept="YS8fn" id="5JQC2dmPwr8" role="3cqZAp">
                      <node concept="2ShNRf" id="5JQC2dmPCaL" role="YScLw">
                        <node concept="1pGfFk" id="5JQC2dmPCnp" role="2ShVmc">
                          <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                          <node concept="3cpWs3" id="5JQC2dmPCnq" role="37wK5m">
                            <node concept="3cpWs3" id="5JQC2dmPCnr" role="3uHU7B">
                              <node concept="3cpWs3" id="5JQC2dmPCns" role="3uHU7B">
                                <node concept="3cpWs3" id="5JQC2dmPCnt" role="3uHU7B">
                                  <node concept="3cpWs3" id="5JQC2dmPCnu" role="3uHU7B">
                                    <node concept="1rXfSq" id="5JQC2dmPCnv" role="3uHU7B">
                                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                                    </node>
                                    <node concept="Xl_RD" id="5JQC2dmPCnw" role="3uHU7w">
                                      <property role="Xl_RC" value=", an instance of " />
                                    </node>
                                  </node>
                                  <node concept="2OqwBi" id="5JQC2dmPCnx" role="3uHU7w">
                                    <node concept="2OqwBi" id="5JQC2dmPCny" role="2Oq$k0">
                                      <node concept="1rXfSq" id="5JQC2dmPCnz" role="2Oq$k0">
                                        <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                                      </node>
                                      <node concept="liA8E" id="5JQC2dmPCn$" role="2OqNvi">
                                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                      </node>
                                    </node>
                                    <node concept="liA8E" id="5JQC2dmPCn_" role="2OqNvi">
                                      <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                                    </node>
                                  </node>
                                </node>
                                <node concept="Xl_RD" id="5JQC2dmPCnA" role="3uHU7w">
                                  <property role="Xl_RC" value=", may or may not be an instance of " />
                                </node>
                              </node>
                              <node concept="2OqwBi" id="5JQC2dmPCDU" role="3uHU7w">
                                <node concept="37vLTw" id="5JQC2dmPCDT" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5JQC2dmPwqq" resolve="clazz" />
                                </node>
                                <node concept="liA8E" id="5JQC2dmPCDV" role="2OqNvi">
                                  <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                                </node>
                              </node>
                            </node>
                            <node concept="Xl_RD" id="5JQC2dmPCnC" role="3uHU7w">
                              <property role="Xl_RC" value=". Under -XdisableClassMetadata, we do not have enough information to tell." />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPwr9" role="3cqZAp">
                  <node concept="1rXfSq" id="5JQC2dmPwra" role="3clFbG">
                    <ref role="37wK5l" node="5JQC2dmPwyi" resolve="failWithBadResults" />
                    <node concept="Xl_RD" id="5JQC2dmPwrb" role="37wK5m">
                      <property role="Xl_RC" value="is an instance of" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPCqx" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPCqw" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPwqq" resolve="clazz" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPCqy" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPwrd" role="37wK5m">
                      <property role="Xl_RC" value="is an instance of" />
                    </node>
                    <node concept="2OqwBi" id="5JQC2dmPwre" role="37wK5m">
                      <node concept="2OqwBi" id="5JQC2dmPwrf" role="2Oq$k0">
                        <node concept="1rXfSq" id="5JQC2dmPwrg" role="2Oq$k0">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPwrh" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwri" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwrp" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwrq" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwrr" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwA0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA1" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is not an instance of the given class. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwrs" role="jymVt">
      <property role="TrG5h" value="isNotInstanceOf" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwrt" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwru" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
          <node concept="3qTvmN" id="5JQC2dmPwrv" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwrw" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwrx" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwry" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwrz" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwrt" resolve="clazz" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwr$" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwrA" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPwrD" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmPCqz" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmPCqH" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~NullPointerException.&lt;init&gt;(java.lang.String)" resolve="NullPointerException" />
                  <node concept="Xl_RD" id="5JQC2dmPCqI" role="37wK5m">
                    <property role="Xl_RC" value="clazz" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwrE" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwrF" role="3clFbw">
            <ref role="37wK5l" node="5JQC2dmPw$r" resolve="classMetadataUnsupported" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwrH" role="3clFbx">
            <node concept="YS8fn" id="5JQC2dmPwrK" role="3cqZAp">
              <node concept="2ShNRf" id="5JQC2dmPCqJ" role="YScLw">
                <node concept="1pGfFk" id="5JQC2dmPCqX" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                  <node concept="Xl_RD" id="5JQC2dmPCqY" role="37wK5m">
                    <property role="Xl_RC" value="isNotInstanceOf is not supported under -XdisableClassMetadata" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwrL" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwrM" role="3clFbw">
            <node concept="1rXfSq" id="5JQC2dmPwrN" role="3uHU7B">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwrO" role="3uHU7w" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwrQ" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwrR" role="3cqZAp" />
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwrS" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dnYRvN" role="3clFbw">
            <ref role="1Pybhc" node="5JQC2dmPxFx" resolve="Platform" />
            <ref role="37wK5l" node="5JQC2dmPxFF" resolve="isInstanceOfType" />
            <node concept="1rXfSq" id="5JQC2dnYRvO" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dnYRvP" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwrt" resolve="clazz" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwrX" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwrY" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwrZ" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPws0" role="37wK5m">
                  <property role="Xl_RC" value="%s expected not to be an instance of %s, but was." />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPws1" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPCr6" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPCr5" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwrt" resolve="clazz" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCr7" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPws3" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPws4" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPws5" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwA2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA3" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is an instance of the given class. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPws6" role="jymVt">
      <property role="TrG5h" value="isIn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPws7" role="3clF46">
        <property role="TrG5h" value="iterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPws8" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPws9" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwsa" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwsb" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPwsc" role="3clFbw">
            <node concept="2YIFZM" id="5JQC2dnZ1Bq" role="3fr31v">
              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
              <ref role="37wK5l" to="3o3z:~Iterables.contains(java.lang.Iterable,java.lang.Object):boolean" resolve="contains" />
              <node concept="37vLTw" id="5JQC2dnZ1Br" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPws7" resolve="iterable" />
              </node>
              <node concept="1rXfSq" id="5JQC2dnZ1Bs" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwsh" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwsi" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwsj" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwsk" role="37wK5m">
                  <property role="Xl_RC" value="is equal to any element in" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwsl" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPws7" resolve="iterable" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwsm" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwsn" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwso" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwA4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA5" role="1dT_Ay">
            <property role="1dT_AB" value="Fails unless the subject is equal to any element in the given iterable. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwsp" role="jymVt">
      <property role="TrG5h" value="isAnyOf" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwsq" role="3clF46">
        <property role="TrG5h" value="first" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwsr" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwss" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwst" role="3clF46">
        <property role="TrG5h" value="second" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwsu" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwsv" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwsw" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwsx" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPwsz" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwsy" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPws$" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwsA" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPws_" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="list" />
            <node concept="3uibUv" id="5JQC2dmPwsB" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="5JQC2dmPwsC" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2YIFZM" id="5JQC2dmQbxR" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
              <node concept="37vLTw" id="5JQC2dmQbxS" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwsq" resolve="first" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQbxT" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwst" resolve="second" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQbxU" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwsw" resolve="rest" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwsH" role="3cqZAp">
          <node concept="3fqX7Q" id="5JQC2dmPwsI" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPCrf" role="3fr31v">
              <node concept="37vLTw" id="5JQC2dmPCre" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPws_" resolve="list" />
              </node>
              <node concept="liA8E" id="5JQC2dmPCrg" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.contains(java.lang.Object):boolean" resolve="contains" />
                <node concept="1rXfSq" id="5JQC2dmPCrh" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwsM" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwsN" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwsO" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPwsP" role="37wK5m">
                  <property role="Xl_RC" value="is equal to any of" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwsQ" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPws_" resolve="list" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwsR" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwsS" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwsT" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwA6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA7" role="1dT_Ay">
            <property role="1dT_AB" value="Fails unless the subject is equal to any of the given elements. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwsU" role="jymVt">
      <property role="TrG5h" value="isNotIn" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwsV" role="3clF46">
        <property role="TrG5h" value="iterable" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwsW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Iterable" resolve="Iterable" />
          <node concept="3qTvmN" id="5JQC2dmPwsX" role="11_B2D" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwsY" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwt0" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwsZ" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="5JQC2dmPwt1" role="1tU5fm" />
            <node concept="2YIFZM" id="5JQC2dnZggj" role="33vP2m">
              <ref role="1Pybhc" to="3o3z:~Iterables" resolve="Iterables" />
              <ref role="37wK5l" to="3o3z:~Iterables.indexOf(java.lang.Iterable,com.google.common.base.Predicate):int" resolve="indexOf" />
              <node concept="37vLTw" id="5JQC2dnZggk" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwsV" resolve="iterable" />
              </node>
              <node concept="2YIFZM" id="5JQC2dnZggl" role="37wK5m">
                <ref role="1Pybhc" to="gyfg:~Predicates" resolve="Predicates" />
                <ref role="37wK5l" to="gyfg:~Predicates.equalTo(java.lang.Object):com.google.common.base.Predicate" resolve="equalTo" />
                <node concept="1rXfSq" id="5JQC2dnZggm" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="3uibUv" id="5JQC2dnZggn" role="3PaCim">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwt7" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwt8" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwt9" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwsZ" resolve="index" />
            </node>
            <node concept="1ZRNhn" id="5JQC2dmPwta" role="3uHU7w">
              <node concept="3cmrfG" id="5JQC2dmPwtb" role="2$L3a6">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwtd" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwte" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwtf" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPwtg" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s is not in %s. It was found at index %s" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPwth" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwti" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwsV" resolve="iterable" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwtj" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwsZ" resolve="index" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwtk" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwtl" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwtm" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwA8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA9" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is equal to any element in the given iterable. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwtn" role="jymVt">
      <property role="TrG5h" value="isNoneOf" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwto" role="3clF46">
        <property role="TrG5h" value="first" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwtp" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwtq" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwtr" role="3clF46">
        <property role="TrG5h" value="second" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwts" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPwtt" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwtu" role="3clF46">
        <property role="TrG5h" value="rest" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPwtv" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="8X2XB" id="5JQC2dmPwtx" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwtw" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwty" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwtz" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwt$" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwsU" resolve="isNotIn" />
            <node concept="2YIFZM" id="5JQC2dmQbxV" role="37wK5m">
              <ref role="1Pybhc" node="5JQC2dmPw9i" resolve="SubjectUtils" />
              <ref role="37wK5l" node="5JQC2dmPw9q" resolve="accumulate" />
              <node concept="37vLTw" id="5JQC2dmQbxW" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwto" resolve="first" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQbxX" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwtr" resolve="second" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQbxY" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwtu" resolve="rest" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPwtD" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwtE" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwtF" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAb" role="1dT_Ay">
            <property role="1dT_AB" value="Fails if the subject is equal to any of the given elements. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwtG" role="jymVt">
      <property role="TrG5h" value="getSubject" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwtH" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwtI" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwtJ" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwtK" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwlO" resolve="actual" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwtL" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmPwtM" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPwlw" resolve="T" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwtN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAd" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Prefer {@code #actual()} for direct access to the subject. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwtO" role="jymVt">
      <property role="TrG5h" value="actual" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwtP" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwtQ" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwtR" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPwtG" resolve="getSubject" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwtS" role="1B3o_S" />
      <node concept="16syzq" id="5JQC2dmPwtT" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPwlw" resolve="T" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwtU" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAf" role="1dT_Ay">
            <property role="1dT_AB" value="Returns the unedited, unformatted raw actual value. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwtV" role="jymVt">
      <property role="TrG5h" value="getDisplaySubject" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwtW" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwtX" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwtZ" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwtY" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="formatted" />
            <node concept="3uibUv" id="5JQC2dmPwu0" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwu1" role="33vP2m">
              <ref role="37wK5l" node="5JQC2dmPwuA" resolve="actualCustomStringRepresentation" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwu2" role="3cqZAp">
          <node concept="3y3z36" id="5JQC2dmPwu3" role="3clFbw">
            <node concept="37vLTw" id="5JQC2dmPwu4" role="3uHU7B">
              <ref role="3cqZAo" node="5JQC2dmPwlS" resolve="customName" />
            </node>
            <node concept="10Nm6u" id="5JQC2dmPwu5" role="3uHU7w" />
          </node>
          <node concept="9aQIb" id="5JQC2dmPwuk" role="9aQIa">
            <node concept="3clFbS" id="5JQC2dmPwul" role="9aQI4">
              <node concept="3cpWs6" id="5JQC2dmPwum" role="3cqZAp">
                <node concept="3cpWs3" id="5JQC2dmPwun" role="3cqZAk">
                  <node concept="3cpWs3" id="5JQC2dmPwuo" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmPwup" role="3uHU7B">
                      <property role="Xl_RC" value="&lt;" />
                    </node>
                    <node concept="37vLTw" id="5JQC2dmPwuq" role="3uHU7w">
                      <ref role="3cqZAo" node="5JQC2dmPwtY" resolve="formatted" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPwur" role="3uHU7w">
                    <property role="Xl_RC" value="&gt;" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwu7" role="3clFbx">
            <node concept="3cpWs6" id="5JQC2dmPwu8" role="3cqZAp">
              <node concept="3cpWs3" id="5JQC2dmPwu9" role="3cqZAk">
                <node concept="37vLTw" id="5JQC2dmPwua" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPwlS" resolve="customName" />
                </node>
                <node concept="1eOMI4" id="5JQC2dmPwuj" role="3uHU7w">
                  <node concept="3K4zz7" id="5JQC2dmPwui" role="1eOMHV">
                    <node concept="2OqwBi" id="5JQC2dmPCrv" role="3K4Cdx">
                      <node concept="37vLTw" id="5JQC2dmPCru" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPwtY" resolve="formatted" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPCrw" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.isEmpty():boolean" resolve="isEmpty" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5JQC2dmPwuc" role="3K4E3e">
                      <property role="Xl_RC" value="" />
                    </node>
                    <node concept="3cpWs3" id="5JQC2dmPwud" role="3K4GZi">
                      <node concept="3cpWs3" id="5JQC2dmPwue" role="3uHU7B">
                        <node concept="Xl_RD" id="5JQC2dmPwuf" role="3uHU7B">
                          <property role="Xl_RC" value=" (&lt;" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmPwug" role="3uHU7w">
                          <ref role="3cqZAo" node="5JQC2dmPwtY" resolve="formatted" />
                        </node>
                      </node>
                      <node concept="Xl_RD" id="5JQC2dmPwuh" role="3uHU7w">
                        <property role="Xl_RC" value="&gt;)" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwus" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwut" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwuu" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAh" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Prefer {@code #actualAsString()} for display-formatted access to the subject. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwuv" role="jymVt">
      <property role="TrG5h" value="actualAsString" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwuw" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwux" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwuy" role="3cqZAk">
            <ref role="37wK5l" node="5JQC2dmPwtV" resolve="getDisplaySubject" />
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwuz" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwu$" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwu_" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAj" role="1dT_Ay">
            <property role="1dT_AB" value="Returns a string representation of the actual value. This will either be the toString() of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAl" role="1dT_Ay">
            <property role="1dT_AB" value="value or a prefixed &quot;name&quot; along with the string representation." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwuA" role="jymVt">
      <property role="TrG5h" value="actualCustomStringRepresentation" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwuB" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwuC" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmPCr$" role="3cqZAk">
            <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
            <ref role="37wK5l" to="wyt6:~String.valueOf(java.lang.Object):java.lang.String" resolve="valueOf" />
            <node concept="1rXfSq" id="5JQC2dmPCr_" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwuF" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwuG" role="3clF45">
        <ref role="3uigEE" to="wyt6:~String" resolve="String" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwuH" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAn" role="1dT_Ay">
            <property role="1dT_AB" value=" Supplies the direct string representation of the actual value to other methods which may prefix" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAp" role="1dT_Ay">
            <property role="1dT_AB" value=" or otherwise position it in an error message. This should only be overridden to provide an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAr" role="1dT_Ay">
            <property role="1dT_AB" value=" improved string representation of the value under test, as it would appear in any given error" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAt" role="1dT_Ay">
            <property role="1dT_AB" value=" message, and should not be used for additional prefixing." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAv" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAx" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;Subjects should override this with care." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAz" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwA$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwA_" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;By default, this returns {@code String.ValueOf(getActualValue())}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwuI" role="jymVt">
      <property role="TrG5h" value="check" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwuJ" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwuK" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPCrG" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPCsb" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
              <node concept="37vLTw" id="5JQC2dmPCsc" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwuN" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwuO" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwuP" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAB" role="1dT_Ay">
            <property role="1dT_AB" value="A convenience for implementers of {@link Subject} subclasses to use other truth {@code Subject}" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAD" role="1dT_Ay">
            <property role="1dT_AB" value="wrappers within their own propositional logic." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwuQ" role="jymVt">
      <property role="TrG5h" value="ignoreCheck" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPwuR" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPwuS" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPCsg" role="3cqZAk">
            <node concept="1pGfFk" id="5JQC2dmPCsG" role="2ShVmc">
              <ref role="37wK5l" node="5JQC2dmPzQW" resolve="TestVerb" />
              <node concept="37vLTw" id="5JQC2dmPCsH" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwlx" resolve="IGNORE_STRATEGY" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwuV" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPwuW" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzQS" resolve="TestVerb" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwuX" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAF" role="1dT_Ay">
            <property role="1dT_AB" value="A convenience for implementers of {@link Subject} subclasses that use other truth {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAH" role="1dT_Ay">
            <property role="1dT_AB" value="Subject} wrappers within their own propositional logic &lt;i&gt;and&lt;/i&gt; sometimes need to" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAJ" role="1dT_Ay">
            <property role="1dT_AB" value="short-circuit those subjects because the assertion chain has already failed. In such cases it" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAL" role="1dT_Ay">
            <property role="1dT_AB" value="may still be necessary to return a {@code Subject} instance even though any subsequent" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAN" role="1dT_Ay">
            <property role="1dT_AB" value="assertions are meaningless. Use this method to return subjects that will never report failures." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwuY" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwuZ" role="3clF46">
        <property role="TrG5h" value="proposition" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwv0" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwv1" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwv2" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCsP" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCsO" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCsQ" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="3cpWs3" id="5JQC2dmPCsR" role="37wK5m">
                <node concept="3cpWs3" id="5JQC2dmPCsS" role="3uHU7B">
                  <node concept="3cpWs3" id="5JQC2dmPCsT" role="3uHU7B">
                    <node concept="Xl_RD" id="5JQC2dmPCsU" role="3uHU7B">
                      <property role="Xl_RC" value="Not true that " />
                    </node>
                    <node concept="1rXfSq" id="5JQC2dmPCsV" role="3uHU7w">
                      <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="5JQC2dmPCsW" role="3uHU7w">
                    <property role="Xl_RC" value=" " />
                  </node>
                </node>
                <node concept="37vLTw" id="5JQC2dmPCsX" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPwuZ" resolve="proposition" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwvb" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwvc" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwvd" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAP" role="1dT_Ay">
            <property role="1dT_AB" value=" Reports a failure constructing a message from a simple verb." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAR" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAT" role="1dT_Ay">
            <property role="1dT_AB" value=" @param proposition the proposition being asserted" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwve" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwvf" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwvg" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwvh" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwvi" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwvj" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwvk" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwvl" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwvu" resolve="failComparingToStrings" />
            <node concept="37vLTw" id="5JQC2dmPwvm" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwvf" resolve="verb" />
            </node>
            <node concept="1rXfSq" id="5JQC2dmPwvn" role="37wK5m">
              <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwvo" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwvh" resolve="other" />
            </node>
            <node concept="37vLTw" id="5JQC2dmPwvp" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwvh" resolve="other" />
            </node>
            <node concept="3clFbT" id="5JQC2dmPwvq" role="37wK5m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwvr" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwvs" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwvt" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwAU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAV" role="1dT_Ay">
            <property role="1dT_AB" value=" Assembles a failure message and passes such to the FailureStrategy. Also performs" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAX" role="1dT_Ay">
            <property role="1dT_AB" value=" disambiguation if the subject and {@code other} have the same toString()'s." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwAY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwAZ" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwB0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB1" role="1dT_Ay">
            <property role="1dT_AB" value=" @param verb the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwB2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB3" role="1dT_Ay">
            <property role="1dT_AB" value=" @param other the value against which the subject is compared" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwvu" role="jymVt">
      <property role="TrG5h" value="failComparingToStrings" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwvv" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwvw" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwvx" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwvy" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwvz" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwv$" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwv_" role="3clF46">
        <property role="TrG5h" value="displayOther" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwvA" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwvB" role="3clF46">
        <property role="TrG5h" value="compareToStrings" />
        <property role="3TUv4t" value="false" />
        <node concept="10P_77" id="5JQC2dmPwvC" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPwvD" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwvF" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwvE" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="message" />
            <node concept="3uibUv" id="5JQC2dmPwvG" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwvH" role="33vP2m">
              <node concept="2OqwBi" id="5JQC2dmPwvI" role="2Oq$k0">
                <node concept="2ShNRf" id="5JQC2dmPCt4" role="2Oq$k0">
                  <node concept="1pGfFk" id="5JQC2dmPCti" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;(java.lang.String)" resolve="StringBuilder" />
                    <node concept="Xl_RD" id="5JQC2dmPCtj" role="37wK5m">
                      <property role="Xl_RC" value="Not true that " />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPwvL" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="1rXfSq" id="5JQC2dmPwvM" role="37wK5m">
                    <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwvN" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                <node concept="Xl_RD" id="5JQC2dmPwvO" role="37wK5m">
                  <property role="Xl_RC" value=" " />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwvQ" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwvP" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="neitherNull" />
            <node concept="10P_77" id="5JQC2dmPwvR" role="1tU5fm" />
            <node concept="1Wc70l" id="5JQC2dmPwvS" role="33vP2m">
              <node concept="1eOMI4" id="5JQC2dmPwvW" role="3uHU7B">
                <node concept="3y3z36" id="5JQC2dmPwvT" role="1eOMHV">
                  <node concept="37vLTw" id="5JQC2dmPwvU" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPwvz" resolve="other" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPwvV" role="3uHU7w" />
                </node>
              </node>
              <node concept="1eOMI4" id="5JQC2dmPww0" role="3uHU7w">
                <node concept="3y3z36" id="5JQC2dmPwvX" role="1eOMHV">
                  <node concept="37vLTw" id="5JQC2dmPwvY" role="3uHU7B">
                    <ref role="3cqZAo" node="5JQC2dmPwvx" resolve="subject" />
                  </node>
                  <node concept="10Nm6u" id="5JQC2dmPwvZ" role="3uHU7w" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPww2" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPww1" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="sameToStrings" />
            <node concept="10P_77" id="5JQC2dmPww3" role="1tU5fm" />
            <node concept="2OqwBi" id="5JQC2dmPww4" role="33vP2m">
              <node concept="1rXfSq" id="5JQC2dmPww5" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwuA" resolve="actualCustomStringRepresentation" />
              </node>
              <node concept="liA8E" id="5JQC2dmPww6" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                <node concept="2YIFZM" id="5JQC2dmPCtn" role="37wK5m">
                  <ref role="1Pybhc" to="wyt6:~String" resolve="String" />
                  <ref role="37wK5l" to="wyt6:~String.valueOf(java.lang.Object):java.lang.String" resolve="valueOf" />
                  <node concept="37vLTw" id="5JQC2dmPCto" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwvz" resolve="other" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwwa" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPww9" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="needsClassDisambiguation" />
            <node concept="10P_77" id="5JQC2dmPwwb" role="1tU5fm" />
            <node concept="1Wc70l" id="5JQC2dmPwwc" role="33vP2m">
              <node concept="1Wc70l" id="5JQC2dmPwwd" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmPwwe" role="3uHU7B">
                  <ref role="3cqZAo" node="5JQC2dmPwvP" resolve="neitherNull" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPwwf" role="3uHU7w">
                  <ref role="3cqZAo" node="5JQC2dmPww1" resolve="sameToStrings" />
                </node>
              </node>
              <node concept="3fqX7Q" id="5JQC2dmPwwg" role="3uHU7w">
                <node concept="2OqwBi" id="5JQC2dmPwwh" role="3fr31v">
                  <node concept="2OqwBi" id="5JQC2dmPCtt" role="2Oq$k0">
                    <node concept="37vLTw" id="5JQC2dmPCts" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwvx" resolve="subject" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCtu" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwwj" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Object.equals(java.lang.Object):boolean" resolve="equals" />
                    <node concept="2OqwBi" id="5JQC2dmPCtz" role="37wK5m">
                      <node concept="37vLTw" id="5JQC2dmPCty" role="2Oq$k0">
                        <ref role="3cqZAo" node="5JQC2dmPwvz" resolve="other" />
                      </node>
                      <node concept="liA8E" id="5JQC2dmPCt$" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwwl" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwwm" role="3clFbw">
            <ref role="3cqZAo" node="5JQC2dmPww9" resolve="needsClassDisambiguation" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwwo" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwwp" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPwwq" role="3clFbG">
                <node concept="2OqwBi" id="5JQC2dmPwwr" role="2Oq$k0">
                  <node concept="2OqwBi" id="5JQC2dmPCtD" role="2Oq$k0">
                    <node concept="37vLTw" id="5JQC2dmPCtC" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwvE" resolve="message" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCtE" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                      <node concept="Xl_RD" id="5JQC2dmPCtF" role="37wK5m">
                        <property role="Xl_RC" value="(" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwwu" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                    <node concept="2OqwBi" id="5JQC2dmPwwv" role="37wK5m">
                      <node concept="2OqwBi" id="5JQC2dmPCtK" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPCtJ" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwvx" resolve="subject" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCtL" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwwx" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPwwy" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="Xl_RD" id="5JQC2dmPwwz" role="37wK5m">
                    <property role="Xl_RC" value=") " />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPww$" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPww_" role="3clFbG">
            <node concept="2OqwBi" id="5JQC2dmPwwA" role="2Oq$k0">
              <node concept="2OqwBi" id="5JQC2dmPwwB" role="2Oq$k0">
                <node concept="2OqwBi" id="5JQC2dmPCtQ" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPCtP" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwvE" resolve="message" />
                  </node>
                  <node concept="liA8E" id="5JQC2dmPCtR" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                    <node concept="37vLTw" id="5JQC2dmPCtS" role="37wK5m">
                      <ref role="3cqZAo" node="5JQC2dmPwvv" resolve="verb" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPwwE" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="Xl_RD" id="5JQC2dmPwwF" role="37wK5m">
                    <property role="Xl_RC" value=" &lt;" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwwG" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.Object):java.lang.StringBuilder" resolve="append" />
                <node concept="37vLTw" id="5JQC2dmPwwH" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwv_" resolve="displayOther" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5JQC2dmPwwI" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
              <node concept="Xl_RD" id="5JQC2dmPwwJ" role="37wK5m">
                <property role="Xl_RC" value="&gt;" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwwK" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwwL" role="3clFbw">
            <ref role="3cqZAo" node="5JQC2dmPww9" resolve="needsClassDisambiguation" />
          </node>
          <node concept="3clFbS" id="5JQC2dmPwwN" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwwO" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPwwP" role="3clFbG">
                <node concept="2OqwBi" id="5JQC2dmPwwQ" role="2Oq$k0">
                  <node concept="2OqwBi" id="5JQC2dmPCtX" role="2Oq$k0">
                    <node concept="37vLTw" id="5JQC2dmPCtW" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwvE" resolve="message" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCtY" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                      <node concept="Xl_RD" id="5JQC2dmPCtZ" role="37wK5m">
                        <property role="Xl_RC" value=" (" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5JQC2dmPwwT" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                    <node concept="2OqwBi" id="5JQC2dmPwwU" role="37wK5m">
                      <node concept="2OqwBi" id="5JQC2dmPCu4" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPCu3" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwvz" resolve="other" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCu5" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwwW" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Class.getName():java.lang.String" resolve="getName" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPwwX" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="Xl_RD" id="5JQC2dmPwwY" role="37wK5m">
                    <property role="Xl_RC" value=")" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5JQC2dmPwwZ" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPwx0" role="3clFbw">
            <node concept="1Wc70l" id="5JQC2dmPwx1" role="3uHU7B">
              <node concept="3fqX7Q" id="5JQC2dmPwx2" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmPwx3" role="3fr31v">
                  <ref role="3cqZAo" node="5JQC2dmPww9" resolve="needsClassDisambiguation" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmPwx4" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPww1" resolve="sameToStrings" />
              </node>
            </node>
            <node concept="37vLTw" id="5JQC2dmPwx5" role="3uHU7w">
              <ref role="3cqZAo" node="5JQC2dmPwvB" resolve="compareToStrings" />
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwx7" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwx8" role="3cqZAp">
              <node concept="2OqwBi" id="5JQC2dmPCua" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPCu9" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwvE" resolve="message" />
                </node>
                <node concept="liA8E" id="5JQC2dmPCub" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                  <node concept="Xl_RD" id="5JQC2dmPCuc" role="37wK5m">
                    <property role="Xl_RC" value=" (although their toString() representations are the same)" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwxb" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCuh" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCug" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCui" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="2OqwBi" id="5JQC2dmPCHf" role="37wK5m">
                <node concept="37vLTw" id="5JQC2dmPCHe" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwvE" resolve="message" />
                </node>
                <node concept="liA8E" id="5JQC2dmPCHg" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPwxe" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwxf" role="3clF45" />
    </node>
    <node concept="3clFb_" id="5JQC2dmPwxg" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwxh" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwxi" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwxj" role="3clF46">
        <property role="TrG5h" value="messageParts" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPwxl" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwxk" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwxm" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPwxn" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPwxo" role="3clFbw">
            <node concept="2OqwBi" id="5JQC2dmPCuo" role="3uHU7B">
              <node concept="37vLTw" id="5JQC2dmPCun" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPwxj" resolve="messageParts" />
              </node>
              <node concept="1Rwk04" id="5JQC2dmQb_6" role="2OqNvi" />
            </node>
            <node concept="3cmrfG" id="5JQC2dmPwxq" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3clFbJ" id="5JQC2dmPwxw" role="9aQIa">
            <node concept="3clFbC" id="5JQC2dmPwxx" role="3clFbw">
              <node concept="2OqwBi" id="5JQC2dmPCuu" role="3uHU7B">
                <node concept="37vLTw" id="5JQC2dmPCut" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwxj" resolve="messageParts" />
                </node>
                <node concept="1Rwk04" id="5JQC2dmQb_7" role="2OqNvi" />
              </node>
              <node concept="3cmrfG" id="5JQC2dmPwxz" role="3uHU7w">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
            <node concept="9aQIb" id="5JQC2dmPwxG" role="9aQIa">
              <node concept="3clFbS" id="5JQC2dmPwxH" role="9aQI4">
                <node concept="3cpWs8" id="5JQC2dmPwxJ" role="3cqZAp">
                  <node concept="3cpWsn" id="5JQC2dmPwxI" role="3cpWs9">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="message" />
                    <node concept="3uibUv" id="5JQC2dmPwxK" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~StringBuilder" resolve="StringBuilder" />
                    </node>
                    <node concept="2ShNRf" id="5JQC2dmPCuw" role="33vP2m">
                      <node concept="1pGfFk" id="5JQC2dmPCuI" role="2ShVmc">
                        <ref role="37wK5l" to="wyt6:~StringBuilder.&lt;init&gt;(java.lang.String)" resolve="StringBuilder" />
                        <node concept="Xl_RD" id="5JQC2dmPCuJ" role="37wK5m">
                          <property role="Xl_RC" value="Not true that " />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPwxN" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPwxO" role="3clFbG">
                    <node concept="2OqwBi" id="5JQC2dmPwxP" role="2Oq$k0">
                      <node concept="2OqwBi" id="5JQC2dmPCuO" role="2Oq$k0">
                        <node concept="37vLTw" id="5JQC2dmPCuN" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwxI" resolve="message" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCuP" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                          <node concept="1rXfSq" id="5JQC2dmPCuQ" role="37wK5m">
                            <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                          </node>
                        </node>
                      </node>
                      <node concept="liA8E" id="5JQC2dmPwxS" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                        <node concept="Xl_RD" id="5JQC2dmPwxT" role="37wK5m">
                          <property role="Xl_RC" value=" " />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5JQC2dmPwxU" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                      <node concept="37vLTw" id="5JQC2dmPwxV" role="37wK5m">
                        <ref role="3cqZAo" node="5JQC2dmPwxh" resolve="verb" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1DcWWT" id="5JQC2dmPwxW" role="3cqZAp">
                  <node concept="37vLTw" id="5JQC2dmPwyb" role="1DdaDG">
                    <ref role="3cqZAo" node="5JQC2dmPwxj" resolve="messageParts" />
                  </node>
                  <node concept="3cpWsn" id="5JQC2dmPwy8" role="1Duv9x">
                    <property role="3TUv4t" value="false" />
                    <property role="TrG5h" value="part" />
                    <node concept="3uibUv" id="5JQC2dmPwya" role="1tU5fm">
                      <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                    </node>
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPwxY" role="2LFqv$">
                    <node concept="3clFbF" id="5JQC2dmPwxZ" role="3cqZAp">
                      <node concept="2OqwBi" id="5JQC2dmPwy0" role="3clFbG">
                        <node concept="2OqwBi" id="5JQC2dmPwy1" role="2Oq$k0">
                          <node concept="2OqwBi" id="5JQC2dmPCv1" role="2Oq$k0">
                            <node concept="37vLTw" id="5JQC2dmPCv0" role="2Oq$k0">
                              <ref role="3cqZAo" node="5JQC2dmPwxI" resolve="message" />
                            </node>
                            <node concept="liA8E" id="5JQC2dmPCv2" role="2OqNvi">
                              <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                              <node concept="Xl_RD" id="5JQC2dmPCv3" role="37wK5m">
                                <property role="Xl_RC" value=" &lt;" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="5JQC2dmPwy4" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.Object):java.lang.StringBuilder" resolve="append" />
                            <node concept="37vLTw" id="5JQC2dmPwy5" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPwy8" resolve="part" />
                            </node>
                          </node>
                        </node>
                        <node concept="liA8E" id="5JQC2dmPwy6" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~StringBuilder.append(java.lang.String):java.lang.StringBuilder" resolve="append" />
                          <node concept="Xl_RD" id="5JQC2dmPwy7" role="37wK5m">
                            <property role="Xl_RC" value="&gt;" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3clFbF" id="5JQC2dmPwyc" role="3cqZAp">
                  <node concept="2OqwBi" id="5JQC2dmPCv8" role="3clFbG">
                    <node concept="37vLTw" id="5JQC2dmPCv7" role="2Oq$k0">
                      <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
                    </node>
                    <node concept="liA8E" id="5JQC2dmPCv9" role="2OqNvi">
                      <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
                      <node concept="2OqwBi" id="5JQC2dmPCGM" role="37wK5m">
                        <node concept="37vLTw" id="5JQC2dmPCGL" role="2Oq$k0">
                          <ref role="3cqZAo" node="5JQC2dmPwxI" resolve="message" />
                        </node>
                        <node concept="liA8E" id="5JQC2dmPCGN" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~StringBuilder.toString():java.lang.String" resolve="toString" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="5JQC2dmPwx_" role="3clFbx">
              <node concept="3clFbF" id="5JQC2dmPwxA" role="3cqZAp">
                <node concept="1rXfSq" id="5JQC2dmPwxB" role="3clFbG">
                  <ref role="37wK5l" node="5JQC2dmPwve" resolve="fail" />
                  <node concept="37vLTw" id="5JQC2dmPwxC" role="37wK5m">
                    <ref role="3cqZAo" node="5JQC2dmPwxh" resolve="verb" />
                  </node>
                  <node concept="AH0OO" id="5JQC2dmPwxD" role="37wK5m">
                    <node concept="37vLTw" id="5JQC2dmPwxE" role="AHHXb">
                      <ref role="3cqZAo" node="5JQC2dmPwxj" resolve="messageParts" />
                    </node>
                    <node concept="3cmrfG" id="5JQC2dmPwxF" role="AHEQo">
                      <property role="3cmrfH" value="0" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwxs" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPwxt" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPwxu" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="37vLTw" id="5JQC2dmPwxv" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwxh" resolve="verb" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwyf" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwyg" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwyh" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwB4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB5" role="1dT_Ay">
            <property role="1dT_AB" value=" Assembles a failure message and passes such to the FailureStrategy" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwB6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB7" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwB8" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB9" role="1dT_Ay">
            <property role="1dT_AB" value=" @param verb the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBa" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBb" role="1dT_Ay">
            <property role="1dT_AB" value=" @param messageParts the expectations against which the subject is compared" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwyi" role="jymVt">
      <property role="TrG5h" value="failWithBadResults" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwyj" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyk" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwyl" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwym" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwyn" role="3clF46">
        <property role="TrG5h" value="failVerb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyo" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwyp" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyq" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwyr" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwyt" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwys" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="message" />
            <node concept="3uibUv" id="5JQC2dmPwyu" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQbxZ" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="Xl_RD" id="5JQC2dmQby0" role="37wK5m">
                <property role="Xl_RC" value="Not true that %s %s &lt;%s&gt;. It %s &lt;%s&gt;" />
              </node>
              <node concept="1rXfSq" id="5JQC2dmQby1" role="37wK5m">
                <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQby2" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyj" resolve="verb" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQby3" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyl" resolve="expected" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQby4" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyn" resolve="failVerb" />
              </node>
              <node concept="3K4zz7" id="5JQC2dmQby5" role="37wK5m">
                <node concept="1eOMI4" id="5JQC2dmQby6" role="3K4Cdx">
                  <node concept="3clFbC" id="5JQC2dmQby7" role="1eOMHV">
                    <node concept="37vLTw" id="5JQC2dmQby8" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPwyp" resolve="actual" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmQby9" role="3uHU7w" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmQbya" role="3K4E3e">
                  <property role="Xl_RC" value="null reference" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbyb" role="3K4GZi">
                  <ref role="3cqZAo" node="5JQC2dmPwyp" resolve="actual" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwyG" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCvf" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCve" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCvg" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="37vLTw" id="5JQC2dmPCvh" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwys" resolve="message" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwyJ" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwyK" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwyL" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwBc" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBd" role="1dT_Ay">
            <property role="1dT_AB" value=" Assembles a failure message and passes it to the FailureStrategy" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBe" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBf" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBg" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBh" role="1dT_Ay">
            <property role="1dT_AB" value=" @param verb the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBi" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBj" role="1dT_Ay">
            <property role="1dT_AB" value=" @param expected the expectations against which the subject is compared" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBk" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBl" role="1dT_Ay">
            <property role="1dT_AB" value=" @param failVerb the failure of the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBm" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBn" role="1dT_Ay">
            <property role="1dT_AB" value=" @param actual the actual value the subject was compared against" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwyM" role="jymVt">
      <property role="TrG5h" value="failWithCustomSubject" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwyN" role="3clF46">
        <property role="TrG5h" value="verb" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyO" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwyP" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyQ" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwyR" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwyS" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwyT" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwyV" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwyU" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="message" />
            <node concept="3uibUv" id="5JQC2dmPwyW" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="2YIFZM" id="5JQC2dmQbyc" role="33vP2m">
              <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
              <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
              <node concept="Xl_RD" id="5JQC2dmQbyd" role="37wK5m">
                <property role="Xl_RC" value="Not true that &lt;%s&gt; %s &lt;%s&gt;" />
              </node>
              <node concept="3K4zz7" id="5JQC2dmQbye" role="37wK5m">
                <node concept="1eOMI4" id="5JQC2dmQbyf" role="3K4Cdx">
                  <node concept="3clFbC" id="5JQC2dmQbyg" role="1eOMHV">
                    <node concept="37vLTw" id="5JQC2dmQbyh" role="3uHU7B">
                      <ref role="3cqZAo" node="5JQC2dmPwyR" resolve="actual" />
                    </node>
                    <node concept="10Nm6u" id="5JQC2dmQbyi" role="3uHU7w" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmQbyj" role="3K4E3e">
                  <property role="Xl_RC" value="null reference" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbyk" role="3K4GZi">
                  <ref role="3cqZAo" node="5JQC2dmPwyR" resolve="actual" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmQbyl" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyN" resolve="verb" />
              </node>
              <node concept="37vLTw" id="5JQC2dmQbym" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyP" resolve="expected" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwz8" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCvm" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCvl" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCvn" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="37vLTw" id="5JQC2dmPCvo" role="37wK5m">
                <ref role="3cqZAo" node="5JQC2dmPwyU" resolve="message" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwzb" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwzc" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwzd" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwBo" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBp" role="1dT_Ay">
            <property role="1dT_AB" value=" Assembles a failure message with an alternative representation of the wrapped subject and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBq" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBr" role="1dT_Ay">
            <property role="1dT_AB" value=" passes it to the FailureStrategy" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBs" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBt" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBu" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBv" role="1dT_Ay">
            <property role="1dT_AB" value=" @param verb the proposition being asserted" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBw" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBx" role="1dT_Ay">
            <property role="1dT_AB" value=" @param expected the expected value of the proposition" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBy" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBz" role="1dT_Ay">
            <property role="1dT_AB" value=" @param actual the custom representation of the subject to be reported in the failure." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwze" role="jymVt">
      <property role="TrG5h" value="failWithoutSubject" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPwzf" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPwzg" role="3clF46">
        <property role="TrG5h" value="proposition" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwzh" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwzi" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwzk" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwzj" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="strSubject" />
            <node concept="3uibUv" id="5JQC2dmPwzl" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~String" resolve="String" />
            </node>
            <node concept="3K4zz7" id="5JQC2dmPwzx" role="33vP2m">
              <node concept="3clFbC" id="5JQC2dmPwzm" role="3K4Cdx">
                <node concept="2OqwBi" id="5JQC2dmPwzn" role="3uHU7B">
                  <node concept="Xjq3P" id="5JQC2dmPwzo" role="2Oq$k0" />
                  <node concept="2OwXpG" id="5JQC2dmPwzp" role="2OqNvi">
                    <ref role="2Oxat5" node="5JQC2dmPwlS" resolve="customName" />
                  </node>
                </node>
                <node concept="10Nm6u" id="5JQC2dmPwzq" role="3uHU7w" />
              </node>
              <node concept="Xl_RD" id="5JQC2dmPwzr" role="3K4E3e">
                <property role="Xl_RC" value="the subject" />
              </node>
              <node concept="3cpWs3" id="5JQC2dmPwzs" role="3K4GZi">
                <node concept="3cpWs3" id="5JQC2dmPwzt" role="3uHU7B">
                  <node concept="Xl_RD" id="5JQC2dmPwzu" role="3uHU7B">
                    <property role="Xl_RC" value="\&quot;" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwzv" role="3uHU7w">
                    <ref role="3cqZAo" node="5JQC2dmPwlS" resolve="customName" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5JQC2dmPwzw" role="3uHU7w">
                  <property role="Xl_RC" value="\&quot;" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwzy" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCvt" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCvs" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCvu" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="2YIFZM" id="5JQC2dmQbyn" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="Xl_RD" id="5JQC2dmQbyo" role="37wK5m">
                  <property role="Xl_RC" value="Not true that %s %s" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbyp" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwzj" resolve="strSubject" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbyq" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwzg" resolve="proposition" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwzC" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwzD" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwzE" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwB$" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwB_" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #failWithoutActual(String)} " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwzF" role="jymVt">
      <property role="TrG5h" value="failWithoutActual" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwzG" role="3clF46">
        <property role="TrG5h" value="proposition" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwzH" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwzI" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwzJ" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPwzK" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwze" resolve="failWithoutSubject" />
            <node concept="37vLTw" id="5JQC2dmPwzL" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPwzG" resolve="proposition" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPwzM" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwzN" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwzO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwBA" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBB" role="1dT_Ay">
            <property role="1dT_AB" value=" Assembles a failure message without a given subject and passes it to the FailureStrategy" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBC" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBD" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBF" role="1dT_Ay">
            <property role="1dT_AB" value=" @param proposition the proposition being asserted" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwzP" role="jymVt">
      <property role="TrG5h" value="failWithRawMessage" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwzQ" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwzR" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwzS" role="3clF46">
        <property role="TrG5h" value="parameters" />
        <property role="3TUv4t" value="false" />
        <node concept="8X2XB" id="5JQC2dmPwzU" role="1tU5fm">
          <node concept="3uibUv" id="5JQC2dmPwzT" role="8Xvag">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwzV" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPwzW" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCvH" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCvG" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwlK" resolve="failureStrategy" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCvI" role="2OqNvi">
              <ref role="37wK5l" node="5JQC2dmPwSJ" resolve="fail" />
              <node concept="2YIFZM" id="5JQC2dmQbyr" role="37wK5m">
                <ref role="1Pybhc" node="5JQC2dmP$rw" resolve="StringUtil" />
                <ref role="37wK5l" node="5JQC2dmP$rW" resolve="format" />
                <node concept="37vLTw" id="5JQC2dmQbys" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwzQ" resolve="message" />
                </node>
                <node concept="37vLTw" id="5JQC2dmQbyt" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwzS" resolve="parameters" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tmbuc" id="5JQC2dmPw$1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPw$2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw$3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwBG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBH" role="1dT_Ay">
            <property role="1dT_AB" value=" Passes through a failure message verbatim. Used for {@link Subject} subclasses which need to" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBJ" role="1dT_Ay">
            <property role="1dT_AB" value=" provide alternate language for more fit-to-purpose error messages." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBL" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBN" role="1dT_Ay">
            <property role="1dT_AB" value=" @param message the message template to be passed to the failure. Note, this method only" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBP" role="1dT_Ay">
            <property role="1dT_AB" value="     guarantees to process {@code %s} tokens. It is not guaranteed to be compatible with {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBR" role="1dT_Ay">
            <property role="1dT_AB" value="     String.format()}. Any other formatting desired (such as floats or scientific notation)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBT" role="1dT_Ay">
            <property role="1dT_AB" value="     should be performed before the method call and the formatted value passed in as a string." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBV" role="1dT_Ay">
            <property role="1dT_AB" value=" @param parameters the object parameters which will be applied to the message template." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw$4" role="jymVt">
      <property role="TrG5h" value="equals" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw$5" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPw$6" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPw$7" role="3clF46">
        <property role="TrG5h" value="o" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPw$8" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPw$9" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPw$a" role="3clF47">
        <node concept="YS8fn" id="5JQC2dmPw$d" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPCvS" role="YScLw">
            <node concept="1pGfFk" id="5JQC2dmPCw6" role="2ShVmc">
              <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
              <node concept="Xl_RD" id="5JQC2dmPCw7" role="37wK5m">
                <property role="Xl_RC" value="If you meant to test object equality, use .isEqualTo(other) instead." />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw$e" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPw$f" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw$g" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwBW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBX" role="1dT_Ay">
            <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwBY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwBZ" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported on Truth subjects. If you meant to" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwC0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwC1" role="1dT_Ay">
            <property role="1dT_AB" value="    test object equality between an expected and the actual value, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwC2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwC3" role="1dT_Ay">
            <property role="1dT_AB" value="    #isEqualTo(Object)} instead." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPw$h" role="jymVt">
      <property role="TrG5h" value="hashCode" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPw$i" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPw$j" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPw$k" role="3clF47">
        <node concept="YS8fn" id="5JQC2dmPw$n" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPCw8" role="YScLw">
            <node concept="1pGfFk" id="5JQC2dmPCwm" role="2ShVmc">
              <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
              <node concept="Xl_RD" id="5JQC2dmPCwn" role="37wK5m">
                <property role="Xl_RC" value="Subject.hashCode() is not supported." />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPw$o" role="1B3o_S" />
      <node concept="10Oyi0" id="5JQC2dmPw$p" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPw$q" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwC4" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwC5" role="1dT_Ay">
            <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwC6" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwC7" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported on Truth subjects." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPw$r" role="jymVt">
      <property role="TrG5h" value="classMetadataUnsupported" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPw$s" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPw$t" role="3cqZAp">
          <node concept="3clFbC" id="5JQC2dmPw$u" role="3cqZAk">
            <node concept="2OqwBi" id="5JQC2dmPw$v" role="3uHU7B">
              <node concept="3VsKOn" id="5JQC2dmPw$x" role="2Oq$k0">
                <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
              </node>
              <node concept="liA8E" id="5JQC2dmPw$y" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Class.getSuperclass():java.lang.Class" resolve="getSuperclass" />
              </node>
            </node>
            <node concept="10Nm6u" id="5JQC2dmPw$z" role="3uHU7w" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPw$$" role="1B3o_S" />
      <node concept="10P_77" id="5JQC2dmPw$_" role="3clF45" />
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPzId">
    <property role="TrG5h" value="DoubleSubject" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="false" />
    <property role="1EXbeo" value="true" />
    <node concept="3Tm1VV" id="5JQC2dmPzIe" role="1B3o_S" />
    <node concept="3uibUv" id="5JQC2dmPzIO" role="1zkMxy">
      <ref role="3uigEE" node="5JQC2dmPzvD" resolve="ComparableSubject" />
      <node concept="3uibUv" id="5JQC2dmPzIP" role="11_B2D">
        <ref role="3uigEE" node="5JQC2dmPzId" resolve="DoubleSubject" />
      </node>
      <node concept="3uibUv" id="5JQC2dmPzIQ" role="11_B2D">
        <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
      </node>
    </node>
    <node concept="3UR2Jj" id="5JQC2dmPzNq" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPzNz" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzN$" role="1dT_Ay">
          <property role="1dT_AB" value=" Propositions for {@link Double} subjects." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzN_" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzNA" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPzNB" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPzNC" role="1dT_Ay">
          <property role="1dT_AB" value=" @author Kurt Alfred Kluever" />
        </node>
      </node>
    </node>
    <node concept="Wx3nA" id="5JQC2dmPzIR" role="jymVt">
      <property role="TrG5h" value="NEG_ZERO_BITS" />
      <property role="3TUv4t" value="true" />
      <node concept="3cpWsb" id="5JQC2dmPzIS" role="1tU5fm" />
      <node concept="2YIFZM" id="5JQC2dmQbyu" role="33vP2m">
        <ref role="1Pybhc" to="wyt6:~Double" resolve="Double" />
        <ref role="37wK5l" to="wyt6:~Double.doubleToLongBits(double):long" resolve="doubleToLongBits" />
        <node concept="1ZRNhn" id="5JQC2dmQbyv" role="37wK5m">
          <node concept="3b6qkQ" id="5JQC2dmQbyw" role="2$L3a6">
            <property role="$nhwW" value="0.0" />
          </node>
        </node>
      </node>
      <node concept="3Tm6S6" id="5JQC2dmPzIW" role="1B3o_S" />
    </node>
    <node concept="3clFbW" id="5JQC2dmPzIX" role="jymVt">
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3cqZAl" id="5JQC2dmPzIY" role="3clF45" />
      <node concept="37vLTG" id="5JQC2dmPzIZ" role="3clF46">
        <property role="TrG5h" value="failureStrategy" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzJ0" role="1tU5fm">
          <ref role="3uigEE" node="5JQC2dmPwSH" resolve="FailureStrategy" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPzJ1" role="3clF46">
        <property role="TrG5h" value="subject" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzJ2" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzJ3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzJ4" role="3clF47">
        <node concept="XkiVB" id="5JQC2dmPCwo" role="3cqZAp">
          <ref role="37wK5l" node="5JQC2dmPzvO" resolve="ComparableSubject" />
          <node concept="37vLTw" id="5JQC2dmPCwp" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzIZ" resolve="failureStrategy" />
          </node>
          <node concept="37vLTw" id="5JQC2dmPCwq" role="37wK5m">
            <ref role="3cqZAo" node="5JQC2dmPzJ1" resolve="subject" />
          </node>
        </node>
      </node>
    </node>
    <node concept="312cEu" id="5JQC2dmPzIf" role="jymVt">
      <property role="TrG5h" value="TolerantDoubleComparison" />
      <property role="2bfB8j" value="false" />
      <property role="1sVAO0" value="true" />
      <property role="1EXbeo" value="false" />
      <node concept="3Tm1VV" id="5JQC2dmPzIg" role="1B3o_S" />
      <node concept="3UR2Jj" id="5JQC2dmPzIN" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzND" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzNE" role="1dT_Ay">
            <property role="1dT_AB" value="A partially specified proposition about an approximate relationship to a {@code double} subject" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzNF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzNG" role="1dT_Ay">
            <property role="1dT_AB" value="using a tolerance." />
          </node>
        </node>
      </node>
      <node concept="3clFbW" id="5JQC2dmPzIh" role="jymVt">
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="3cqZAl" id="5JQC2dmPzIi" role="3clF45" />
        <node concept="3clFbS" id="5JQC2dmPzIj" role="3clF47" />
        <node concept="3Tm6S6" id="5JQC2dmPzIk" role="1B3o_S" />
      </node>
      <node concept="3clFb_" id="5JQC2dmPzIl" role="jymVt">
        <property role="TrG5h" value="of" />
        <property role="1EzhhJ" value="true" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="37vLTG" id="5JQC2dmPzIm" role="3clF46">
          <property role="TrG5h" value="expectedDouble" />
          <property role="3TUv4t" value="false" />
          <node concept="10P55v" id="5JQC2dmPzIn" role="1tU5fm" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzIo" role="3clF47" />
        <node concept="3Tm1VV" id="5JQC2dmPzIp" role="1B3o_S" />
        <node concept="3cqZAl" id="5JQC2dmPzIq" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPzIr" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzNH" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNI" role="1dT_Ay">
              <property role="1dT_AB" value="Fails if the subject was expected to be within the tolerance of the given value but was not" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzNJ" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNK" role="1dT_Ay">
              <property role="1dT_AB" value="&lt;i&gt;or&lt;/i&gt; if it was expected &lt;i&gt;not&lt;/i&gt; to be within the tolerance but was. The subject and" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzNL" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNM" role="1dT_Ay">
              <property role="1dT_AB" value="tolerance are specified earlier in the fluent call chain." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzIs" role="jymVt">
        <property role="TrG5h" value="equals" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzIt" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPzIu" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="37vLTG" id="5JQC2dmPzIv" role="3clF46">
          <property role="TrG5h" value="o" />
          <property role="3TUv4t" value="false" />
          <node concept="2AHcQZ" id="5JQC2dmPzIw" role="2AJF6D">
            <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
          </node>
          <node concept="3uibUv" id="5JQC2dmPzIx" role="1tU5fm">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
        <node concept="3clFbS" id="5JQC2dmPzIy" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzI_" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPCwr" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPCwD" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPCwE" role="37wK5m">
                  <property role="Xl_RC" value="If you meant to compare doubles, use .of(double) instead." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzIA" role="1B3o_S" />
        <node concept="10P_77" id="5JQC2dmPzIB" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPzIC" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzNN" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNO" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzNP" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNQ" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#equals(Object)} is not supported on TolerantDoubleComparison. If" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzNR" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNS" role="1dT_Ay">
              <property role="1dT_AB" value="    you meant to compare doubles, use {@link #of(double)} instead." />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFb_" id="5JQC2dmPzID" role="jymVt">
        <property role="TrG5h" value="hashCode" />
        <property role="DiZV1" value="false" />
        <property role="od$2w" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzIE" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
        </node>
        <node concept="2AHcQZ" id="5JQC2dmPzIF" role="2AJF6D">
          <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
        </node>
        <node concept="3clFbS" id="5JQC2dmPzIG" role="3clF47">
          <node concept="YS8fn" id="5JQC2dmPzIJ" role="3cqZAp">
            <node concept="2ShNRf" id="5JQC2dmPCwF" role="YScLw">
              <node concept="1pGfFk" id="5JQC2dmPCwT" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;(java.lang.String)" resolve="UnsupportedOperationException" />
                <node concept="Xl_RD" id="5JQC2dmPCwU" role="37wK5m">
                  <property role="Xl_RC" value="Subject.hashCode() is not supported." />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3Tm1VV" id="5JQC2dmPzIK" role="1B3o_S" />
        <node concept="10Oyi0" id="5JQC2dmPzIL" role="3clF45" />
        <node concept="P$JXv" id="5JQC2dmPzIM" role="lGtFl">
          <node concept="TZ5HA" id="5JQC2dmPzNT" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNU" role="1dT_Ay">
              <property role="1dT_AB" value="@throws UnsupportedOperationException always" />
            </node>
          </node>
          <node concept="TZ5HA" id="5JQC2dmPzNV" role="TZ5H$">
            <node concept="1dT_AC" id="5JQC2dmPzNW" role="1dT_Ay">
              <property role="1dT_AB" value="@deprecated {@link Object#hashCode()} is not supported on TolerantDoubleComparison" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzJ8" role="jymVt">
      <property role="TrG5h" value="isWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzJ9" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10P55v" id="5JQC2dmPzJa" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzJb" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzJc" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPzJd" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPzJe" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPzJf" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPzIf" resolve="DoubleSubject.TolerantDoubleComparison" />
                <ref role="37wK5l" node="5JQC2dmPzIh" resolve="DoubleSubject.TolerantDoubleComparison" />
                <node concept="3clFb_" id="5JQC2dmPzJg" role="jymVt">
                  <property role="TrG5h" value="of" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPzJh" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPzJi" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="10P55v" id="5JQC2dmPzJj" role="1tU5fm" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPzJk" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPzJm" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPzJl" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="3uibUv" id="5JQC2dmPzJn" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPzJo" role="33vP2m">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmXLUB" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmXUaJ" role="3clFbG">
                        <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                        <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
                        <node concept="37vLTw" id="5JQC2dmYarX" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJl" resolve="actual" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmYarY" role="37wK5m">
                          <property role="Xl_RC" value="actual value cannot be null. tolerance=%s expected=%s" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmYarZ" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJ9" resolve="tolerance" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmYas0" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJi" resolve="expected" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPzJv" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPzJw" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPzL4" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmPzJx" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJ9" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPzJy" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPzJz" role="3clFbw">
                        <node concept="2YIFZM" id="5JQC2dmQbyx" role="3fr31v">
                          <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                          <ref role="37wK5l" node="5JQC2dmPwOj" resolve="equalWithinTolerance" />
                          <node concept="37vLTw" id="5JQC2dmQbyy" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzJl" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQbyz" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzJi" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQby$" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzJ9" resolve="tolerance" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPzJD" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPzJE" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPzJF" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPzJG" role="37wK5m">
                              <property role="Xl_RC" value="%s and &lt;%s&gt; should have been finite values within &lt;%s&gt; of each other" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPzJH" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzJI" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzJi" resolve="expected" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzJJ" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzJ9" resolve="tolerance" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPzJK" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPzJL" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzJM" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzJN" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzIf" resolve="DoubleSubject.TolerantDoubleComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzJO" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzNX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzNY" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject is a finite number within the given tolerance of an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzNZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO0" role="1dT_Ay">
            <property role="1dT_AB" value=" expected value that will be provided in the next call in the fluent chain." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzO1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO2" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzO3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO4" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if either the subject or the object is {@link Double#POSITIVE_INFINITY}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzO5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO6" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}. To check for those values, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzO7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO8" role="1dT_Ay">
            <property role="1dT_AB" value=" #isPositiveInfinity}, {@link #isNegativeInfinity}, {@link #isNaN}, or (with more generality)" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzO9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOa" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link #isEqualTo}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOc" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOe" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will pass if both values are zero, even if one is {@code 0.0} and the other is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOg" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code -0.0}. Use {@code #isEqualTo} to assert that a value is exactly {@code 0.0} or that it" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOi" role="1dT_Ay">
            <property role="1dT_AB" value=" is exactly {@code -0.0}." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOk" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOm" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;You can use a tolerance of {@code 0.0} to assert the exact equality of finite doubles, but" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOo" role="1dT_Ay">
            <property role="1dT_AB" value=" often {@link #isEqualTo} is preferable (note the different behaviours around non-finite values" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOq" role="1dT_Ay">
            <property role="1dT_AB" value=" and {@code -0.0}). See the documentation on {@link #isEqualTo} for advice on when exact" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOs" role="1dT_Ay">
            <property role="1dT_AB" value=" equality assertions are appropriate." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOu" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOw" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an inclusive upper bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOy" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzO$" role="1dT_Ay">
            <property role="1dT_AB" value="     Double#NaN}, {@link Double#POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzJP" role="jymVt">
      <property role="TrG5h" value="isNotWithin" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzJQ" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="true" />
        <node concept="10P55v" id="5JQC2dmPzJR" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzJS" role="3clF47">
        <node concept="3cpWs6" id="5JQC2dmPzJT" role="3cqZAp">
          <node concept="2ShNRf" id="5JQC2dmPzJU" role="3cqZAk">
            <node concept="YeOm9" id="5JQC2dmPzJV" role="2ShVmc">
              <node concept="1Y3b0j" id="5JQC2dmPzJW" role="YeSDq">
                <property role="1sVAO0" value="false" />
                <property role="1EXbeo" value="false" />
                <ref role="1Y3XeK" node="5JQC2dmPzIf" resolve="DoubleSubject.TolerantDoubleComparison" />
                <ref role="37wK5l" node="5JQC2dmPzIh" resolve="DoubleSubject.TolerantDoubleComparison" />
                <node concept="3clFb_" id="5JQC2dmPzJX" role="jymVt">
                  <property role="TrG5h" value="of" />
                  <property role="DiZV1" value="false" />
                  <property role="od$2w" value="false" />
                  <node concept="2AHcQZ" id="5JQC2dmPzJY" role="2AJF6D">
                    <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
                  </node>
                  <node concept="37vLTG" id="5JQC2dmPzJZ" role="3clF46">
                    <property role="TrG5h" value="expected" />
                    <property role="3TUv4t" value="false" />
                    <node concept="10P55v" id="5JQC2dmPzK0" role="1tU5fm" />
                  </node>
                  <node concept="3clFbS" id="5JQC2dmPzK1" role="3clF47">
                    <node concept="3cpWs8" id="5JQC2dmPzK3" role="3cqZAp">
                      <node concept="3cpWsn" id="5JQC2dmPzK2" role="3cpWs9">
                        <property role="3TUv4t" value="false" />
                        <property role="TrG5h" value="actual" />
                        <node concept="3uibUv" id="5JQC2dmPzK4" role="1tU5fm">
                          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
                        </node>
                        <node concept="1rXfSq" id="5JQC2dmPzK5" role="33vP2m">
                          <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmYNSq" role="3cqZAp">
                      <node concept="2YIFZM" id="5JQC2dmZ4Vo" role="3clFbG">
                        <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
                        <ref role="37wK5l" to="gyfg:~Preconditions.checkNotNull(java.lang.Object,java.lang.String,java.lang.Object...):java.lang.Object" resolve="checkNotNull" />
                        <node concept="37vLTw" id="5JQC2dmZdS8" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzK2" resolve="actual" />
                        </node>
                        <node concept="Xl_RD" id="5JQC2dmZdS9" role="37wK5m">
                          <property role="Xl_RC" value="actual value cannot be null. tolerance=%s expected=%s" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmZdSa" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJQ" resolve="tolerance" />
                        </node>
                        <node concept="37vLTw" id="5JQC2dmZdSb" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJZ" resolve="expected" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbF" id="5JQC2dmPzKc" role="3cqZAp">
                      <node concept="1rXfSq" id="5JQC2dmPzKd" role="3clFbG">
                        <ref role="37wK5l" node="5JQC2dmPzL4" resolve="checkTolerance" />
                        <node concept="37vLTw" id="5JQC2dmPzKe" role="37wK5m">
                          <ref role="3cqZAo" node="5JQC2dmPzJQ" resolve="tolerance" />
                        </node>
                      </node>
                    </node>
                    <node concept="3clFbJ" id="5JQC2dmPzKf" role="3cqZAp">
                      <node concept="3fqX7Q" id="5JQC2dmPzKg" role="3clFbw">
                        <node concept="2YIFZM" id="5JQC2dmQby_" role="3fr31v">
                          <ref role="1Pybhc" node="5JQC2dmPwOd" resolve="MathUtil" />
                          <ref role="37wK5l" node="5JQC2dmPwOW" resolve="notEqualWithinTolerance" />
                          <node concept="37vLTw" id="5JQC2dmQbyA" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzK2" resolve="actual" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQbyB" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzJZ" resolve="expected" />
                          </node>
                          <node concept="37vLTw" id="5JQC2dmQbyC" role="37wK5m">
                            <ref role="3cqZAo" node="5JQC2dmPzJQ" resolve="tolerance" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbS" id="5JQC2dmPzKm" role="3clFbx">
                        <node concept="3clFbF" id="5JQC2dmPzKn" role="3cqZAp">
                          <node concept="1rXfSq" id="5JQC2dmPzKo" role="3clFbG">
                            <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                            <node concept="Xl_RD" id="5JQC2dmPzKp" role="37wK5m">
                              <property role="Xl_RC" value="%s and &lt;%s&gt; should have been finite values not within &lt;%s&gt; of each other" />
                            </node>
                            <node concept="1rXfSq" id="5JQC2dmPzKq" role="37wK5m">
                              <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzKr" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzJZ" resolve="expected" />
                            </node>
                            <node concept="37vLTw" id="5JQC2dmPzKs" role="37wK5m">
                              <ref role="3cqZAo" node="5JQC2dmPzJQ" resolve="tolerance" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3Tm1VV" id="5JQC2dmPzKt" role="1B3o_S" />
                  <node concept="3cqZAl" id="5JQC2dmPzKu" role="3clF45" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzKv" role="1B3o_S" />
      <node concept="3uibUv" id="5JQC2dmPzKw" role="3clF45">
        <ref role="3uigEE" node="5JQC2dmPzIf" resolve="DoubleSubject.TolerantDoubleComparison" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPzKx" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzO_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOA" role="1dT_Ay">
            <property role="1dT_AB" value=" Prepares for a check that the subject is a finite number not within the given tolerance of an" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOC" role="1dT_Ay">
            <property role="1dT_AB" value=" expected value that will be provided in the next call in the fluent chain." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOE" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOG" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if either the subject or the object is {@link Double#POSITIVE_INFINITY}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOI" role="1dT_Ay">
            <property role="1dT_AB" value=" {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}. See {@link #isFinite}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOK" role="1dT_Ay">
            <property role="1dT_AB" value=" #isNotNaN}, or {@link #isNotEqualTo} for checks with other behaviours." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOM" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzON" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOO" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;The check will fail if both values are zero, even if one is {@code 0.0} and the other is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOQ" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code -0.0}. Use {@code #isNotEqualTo} for a test which fails for a value of exactly zero with" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOS" role="1dT_Ay">
            <property role="1dT_AB" value=" one sign but passes for zero with the opposite sign." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOU" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOW" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;You can use a tolerance of {@code 0.0} to assert the exact non-equality of finite doubles," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzOY" role="1dT_Ay">
            <property role="1dT_AB" value=" but sometimes {@link #isNotEqualTo} is preferable (note the different behaviours around" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzOZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP0" role="1dT_Ay">
            <property role="1dT_AB" value=" non-finite values and {@code -0.0})." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzP1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP2" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzP3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP4" role="1dT_Ay">
            <property role="1dT_AB" value=" @param tolerance an exclusive lower bound on the difference between the subject and object" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzP5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP6" role="1dT_Ay">
            <property role="1dT_AB" value="     allowed by the check, which must be a non-negative finite value, i.e. not {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzP7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP8" role="1dT_Ay">
            <property role="1dT_AB" value="     Double.NaN}, {@code Double.POSITIVE_INFINITY}, or negative, including {@code -0.0}" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzKy" role="jymVt">
      <property role="TrG5h" value="isEqualTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzKz" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzK$" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzK_" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzKA" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzKB" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPzKC" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnk" resolve="isEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPzKD" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzKz" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzKE" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzKF" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzKG" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzP9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPa" role="1dT_Ay">
            <property role="1dT_AB" value=" Asserts that the subject is exactly equal to the given value, with equality defined as by" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPb" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPc" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code Double#equals}. This method is &lt;i&gt;not&lt;/i&gt; recommended when the code under test is doing" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPd" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPe" role="1dT_Ay">
            <property role="1dT_AB" value=" any kind of arithmetic: use {@link #isWithin} with a suitable tolerance in that case. (Remember" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPf" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPg" role="1dT_Ay">
            <property role="1dT_AB" value=" that the exact result of floating point arithmetic is sensitive to apparently trivial changes" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPh" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPi" role="1dT_Ay">
            <property role="1dT_AB" value=" such as replacing {@code (a + b) + c} with {@code a + (b + c)}, and that unless {@code" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPj" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPk" role="1dT_Ay">
            <property role="1dT_AB" value=" strictfp} is in force even the result of {@code (a + b) + c} is sensitive to the JVM's choice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPl" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPm" role="1dT_Ay">
            <property role="1dT_AB" value=" of precision for the intermediate result.) This method is recommended when the code under test" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPn" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPo" role="1dT_Ay">
            <property role="1dT_AB" value=" is specified as either copying a value without modification from its input or returning a" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPp" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPq" role="1dT_Ay">
            <property role="1dT_AB" value=" well-defined literal or constant value." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPr" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPs" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPt" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPu" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The assertion {@code isEqualTo(0.0)} fails for an input of {@code -0.0}, and" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPv" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPw" role="1dT_Ay">
            <property role="1dT_AB" value=" vice versa. For an assertion that passes for either {@code 0.0} or {@code -0.0}, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPx" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPy" role="1dT_Ay">
            <property role="1dT_AB" value=" #isZero}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzKH" role="jymVt">
      <property role="TrG5h" value="isNotEqualTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzKI" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="2AHcQZ" id="5JQC2dmPzKJ" role="2AJF6D">
          <ref role="2AI5Lk" to="mhfm:~Nullable" resolve="Nullable" />
        </node>
        <node concept="3uibUv" id="5JQC2dmPzKK" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzKL" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzKM" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPzKN" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPwnx" resolve="isNotEqualTo" />
            <node concept="37vLTw" id="5JQC2dmPzKO" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzKI" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzKP" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzKQ" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzKR" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPz" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzP$" role="1dT_Ay">
            <property role="1dT_AB" value=" Asserts that the subject is not exactly equal to the given value, with equality defined as by" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzP_" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPA" role="1dT_Ay">
            <property role="1dT_AB" value=" {@code Double#equals}. See {@link #isEqualTo} for advice on when exact equality is recommended." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPB" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPC" role="1dT_Ay">
            <property role="1dT_AB" value=" Use {@link #isNotWithin} for an assertion with a tolerance." />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPD" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPE" role="1dT_Ay">
            <property role="1dT_AB" value="" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPF" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPG" role="1dT_Ay">
            <property role="1dT_AB" value=" &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The assertion {@code isNotEqualTo(0.0)} passes for {@code -0.0}, and vice" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPH" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPI" role="1dT_Ay">
            <property role="1dT_AB" value=" versa. For an assertion that fails for either {@code 0.0} or {@code -0.0}, use {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPJ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPK" role="1dT_Ay">
            <property role="1dT_AB" value=" #isNonZero}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzKS" role="jymVt">
      <property role="TrG5h" value="isEquivalentAccordingToCompareTo" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="2AHcQZ" id="5JQC2dmPzKT" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Override" resolve="Override" />
      </node>
      <node concept="2AHcQZ" id="5JQC2dmPzKU" role="2AJF6D">
        <ref role="2AI5Lk" to="wyt6:~Deprecated" resolve="Deprecated" />
      </node>
      <node concept="37vLTG" id="5JQC2dmPzKV" role="3clF46">
        <property role="TrG5h" value="other" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPzKW" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Double" resolve="Double" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPzKX" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzKY" role="3cqZAp">
          <node concept="3nyPlj" id="5JQC2dmPzKZ" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzwz" resolve="isEquivalentAccordingToCompareTo" />
            <node concept="37vLTw" id="5JQC2dmPzL0" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzKV" resolve="other" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzL1" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzL2" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzL3" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPL" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPM" role="1dT_Ay">
            <property role="1dT_AB" value="@deprecated Use {@link #isWithin} or {@link #isEqualTo} instead (see documentation for advice)." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPzL4" role="jymVt">
      <property role="TrG5h" value="checkTolerance" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPzL5" role="3clF46">
        <property role="TrG5h" value="tolerance" />
        <property role="3TUv4t" value="false" />
        <node concept="10P55v" id="5JQC2dmPzL6" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5JQC2dmPzL7" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzL8" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmYF_S" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="3fqX7Q" id="5JQC2dmYF_T" role="37wK5m">
              <node concept="2YIFZM" id="5JQC2dmYF_U" role="3fr31v">
                <ref role="1Pybhc" to="wyt6:~Double" resolve="Double" />
                <ref role="37wK5l" to="wyt6:~Double.isNaN(double):boolean" resolve="isNaN" />
                <node concept="37vLTw" id="5JQC2dmYF_V" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
                </node>
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmYF_W" role="37wK5m">
              <property role="Xl_RC" value="tolerance cannot be NaN" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzLe" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmZ4Vs" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="2d3UOw" id="5JQC2dmZ4Vt" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmZ4Vu" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
              </node>
              <node concept="3b6qkQ" id="5JQC2dmZ4Vv" role="3uHU7w">
                <property role="$nhwW" value="0.0" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmZ4Vw" role="37wK5m">
              <property role="Xl_RC" value="tolerance (%s) cannot be negative" />
            </node>
            <node concept="37vLTw" id="5JQC2dmZ4Vx" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzLl" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmYW4k" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object):void" resolve="checkArgument" />
            <node concept="3y3z36" id="5JQC2dmYW4l" role="37wK5m">
              <node concept="2YIFZM" id="5JQC2dmYW4m" role="3uHU7B">
                <ref role="1Pybhc" to="wyt6:~Double" resolve="Double" />
                <ref role="37wK5l" to="wyt6:~Double.doubleToLongBits(double):long" resolve="doubleToLongBits" />
                <node concept="37vLTw" id="5JQC2dmYW4n" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
                </node>
              </node>
              <node concept="37vLTw" id="5JQC2dmYW4o" role="3uHU7w">
                <ref role="3cqZAo" node="5JQC2dmPzIR" resolve="NEG_ZERO_BITS" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmYW4p" role="37wK5m">
              <property role="Xl_RC" value="tolerance (%s) cannot be negative" />
            </node>
            <node concept="37vLTw" id="5JQC2dmYW4q" role="37wK5m">
              <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPzLt" role="3cqZAp">
          <node concept="2YIFZM" id="5JQC2dmXUaN" role="3clFbG">
            <ref role="1Pybhc" to="gyfg:~Preconditions" resolve="Preconditions" />
            <ref role="37wK5l" to="gyfg:~Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object...):void" resolve="checkArgument" />
            <node concept="3y3z36" id="5JQC2dmXUaO" role="37wK5m">
              <node concept="37vLTw" id="5JQC2dmXUaP" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPzL5" resolve="tolerance" />
              </node>
              <node concept="10M0yZ" id="5JQC2dmXUaQ" role="3uHU7w">
                <ref role="1PxDUh" to="wyt6:~Double" resolve="Double" />
                <ref role="3cqZAo" to="wyt6:~Double.POSITIVE_INFINITY" resolve="POSITIVE_INFINITY" />
              </node>
            </node>
            <node concept="Xl_RD" id="5JQC2dmXUaR" role="37wK5m">
              <property role="Xl_RC" value="tolerance cannot be POSITIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3cqZAl" id="5JQC2dmPzLz" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzL$" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPN" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPO" role="1dT_Ay">
            <property role="1dT_AB" value="Ensures that the given tolerance is a non-negative finite value, i.e. not {@code Double.NaN}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPP" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPQ" role="1dT_Ay">
            <property role="1dT_AB" value="{@code Double.POSITIVE_INFINITY}, or negative, including {@code -0.0}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzL_" role="jymVt">
      <property role="TrG5h" value="isZero" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzLA" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzLB" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzLC" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPzLD" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzLE" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzLF" role="3uHU7w" />
            </node>
            <node concept="3y3z36" id="5JQC2dmPzLG" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPzLH" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPzLI" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzLJ" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Double.doubleValue():double" resolve="doubleValue" />
                </node>
              </node>
              <node concept="3b6qkQ" id="5JQC2dmPzLK" role="3uHU7w">
                <property role="$nhwW" value="0.0" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzLM" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzLN" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzLO" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzLP" role="37wK5m">
                  <property role="Xl_RC" value="is zero" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzLQ" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzLR" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzLS" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPR" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPS" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is zero (i.e. it is either {@code 0.0} or {@code -0.0}). " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzLT" role="jymVt">
      <property role="TrG5h" value="isNonZero" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzLU" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzLV" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzLW" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPzLX" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzLY" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzLZ" role="3uHU7w" />
            </node>
            <node concept="3clFbC" id="5JQC2dmPzM0" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPzM1" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPzM2" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzM3" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Double.doubleValue():double" resolve="doubleValue" />
                </node>
              </node>
              <node concept="3b6qkQ" id="5JQC2dmPzM4" role="3uHU7w">
                <property role="$nhwW" value="0.0" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzM6" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzM7" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzM8" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzM9" role="37wK5m">
                  <property role="Xl_RC" value="is non-zero" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzMa" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzMb" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzMc" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPT" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPU" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is a non-null value other than zero (i.e. it is not {@code 0.0}," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzPV" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPW" role="1dT_Ay">
            <property role="1dT_AB" value="{@code -0.0} or {@code null})." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzMd" role="jymVt">
      <property role="TrG5h" value="isPositiveInfinity" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzMe" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzMf" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPzMg" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzKy" resolve="isEqualTo" />
            <node concept="10M0yZ" id="5JQC2dmQbyG" role="37wK5m">
              <ref role="1PxDUh" to="wyt6:~Double" resolve="Double" />
              <ref role="3cqZAo" to="wyt6:~Double.POSITIVE_INFINITY" resolve="POSITIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzMi" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzMj" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzMk" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPX" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzPY" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Double#POSITIVE_INFINITY}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzMl" role="jymVt">
      <property role="TrG5h" value="isNegativeInfinity" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzMm" role="3clF47">
        <node concept="3clFbF" id="5JQC2dmPzMn" role="3cqZAp">
          <node concept="1rXfSq" id="5JQC2dmPzMo" role="3clFbG">
            <ref role="37wK5l" node="5JQC2dmPzKy" resolve="isEqualTo" />
            <node concept="10M0yZ" id="5JQC2dmQbyH" role="37wK5m">
              <ref role="1PxDUh" to="wyt6:~Double" resolve="Double" />
              <ref role="3cqZAo" to="wyt6:~Double.NEGATIVE_INFINITY" resolve="NEGATIVE_INFINITY" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzMq" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzMr" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzMs" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzPZ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQ0" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Double#NEGATIVE_INFINITY}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzMt" role="jymVt">
      <property role="TrG5h" value="isNaN" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzMu" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzMv" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzMw" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPzMx" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzMy" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzMz" role="3uHU7w" />
            </node>
            <node concept="3fqX7Q" id="5JQC2dmPzM$" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPzM_" role="3fr31v">
                <node concept="1rXfSq" id="5JQC2dmPzMA" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzMB" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Double.isNaN():boolean" resolve="isNaN" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzMD" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzME" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzMF" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwxg" resolve="fail" />
                <node concept="Xl_RD" id="5JQC2dmPzMG" role="37wK5m">
                  <property role="Xl_RC" value="is NaN" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzMH" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzMI" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzMJ" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzQ1" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQ2" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is {@link Double#NaN}. " />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzMK" role="jymVt">
      <property role="TrG5h" value="isFinite" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzML" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzMM" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzMN" role="3clFbw">
            <node concept="22lmx$" id="5JQC2dmPzMO" role="3uHU7B">
              <node concept="3clFbC" id="5JQC2dmPzMP" role="3uHU7B">
                <node concept="1rXfSq" id="5JQC2dmPzMQ" role="3uHU7B">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="10Nm6u" id="5JQC2dmPzMR" role="3uHU7w" />
              </node>
              <node concept="2OqwBi" id="5JQC2dmPzMS" role="3uHU7w">
                <node concept="1rXfSq" id="5JQC2dmPzMT" role="2Oq$k0">
                  <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
                </node>
                <node concept="liA8E" id="5JQC2dmPzMU" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Double.isNaN():boolean" resolve="isNaN" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPzMV" role="3uHU7w">
              <node concept="1rXfSq" id="5JQC2dmPzMW" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzMX" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Double.isInfinite():boolean" resolve="isInfinite" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzMZ" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzN0" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzN1" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPzN2" role="37wK5m">
                  <property role="Xl_RC" value="%s should have been finite" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzN3" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzN4" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzN5" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzN6" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzQ3" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQ4" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is finite, i.e. not {@link Double#POSITIVE_INFINITY}, {@link" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzQ5" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQ6" role="1dT_Ay">
            <property role="1dT_AB" value="Double#NEGATIVE_INFINITY}, or {@link Double#NaN}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPzN7" role="jymVt">
      <property role="TrG5h" value="isNotNaN" />
      <property role="DiZV1" value="true" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="5JQC2dmPzN8" role="3clF47">
        <node concept="3clFbJ" id="5JQC2dmPzN9" role="3cqZAp">
          <node concept="22lmx$" id="5JQC2dmPzNa" role="3clFbw">
            <node concept="3clFbC" id="5JQC2dmPzNb" role="3uHU7B">
              <node concept="1rXfSq" id="5JQC2dmPzNc" role="3uHU7B">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="10Nm6u" id="5JQC2dmPzNd" role="3uHU7w" />
            </node>
            <node concept="2OqwBi" id="5JQC2dmPzNe" role="3uHU7w">
              <node concept="1rXfSq" id="5JQC2dmPzNf" role="2Oq$k0">
                <ref role="37wK5l" node="5JQC2dmPwtO" resolve="actual" />
              </node>
              <node concept="liA8E" id="5JQC2dmPzNg" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Double.isNaN():boolean" resolve="isNaN" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPzNi" role="3clFbx">
            <node concept="3clFbF" id="5JQC2dmPzNj" role="3cqZAp">
              <node concept="1rXfSq" id="5JQC2dmPzNk" role="3clFbG">
                <ref role="37wK5l" node="5JQC2dmPwzP" resolve="failWithRawMessage" />
                <node concept="Xl_RD" id="5JQC2dmPzNl" role="37wK5m">
                  <property role="Xl_RC" value="%s should not have been NaN" />
                </node>
                <node concept="1rXfSq" id="5JQC2dmPzNm" role="37wK5m">
                  <ref role="37wK5l" node="5JQC2dmPwuv" resolve="actualAsString" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5JQC2dmPzNn" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPzNo" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPzNp" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPzQ7" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQ8" role="1dT_Ay">
            <property role="1dT_AB" value="Asserts that the subject is a non-null value other than {@link Double#NaN} (but it may be" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPzQ9" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPzQa" role="1dT_Ay">
            <property role="1dT_AB" value="{@link Double#POSITIVE_INFINITY} or {@link Double#NEGATIVE_INFINITY})." />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5JQC2dmPwSH">
    <property role="TrG5h" value="FailureStrategy" />
    <property role="2bfB8j" value="true" />
    <property role="1sVAO0" value="true" />
    <property role="1EXbeo" value="false" />
    <node concept="3Tm1VV" id="5JQC2dmPwSI" role="1B3o_S" />
    <node concept="3UR2Jj" id="5JQC2dmPwU2" role="lGtFl">
      <node concept="TZ5HA" id="5JQC2dmPwU6" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwU7" role="1dT_Ay">
          <property role="1dT_AB" value=" A {@code FailureStrategy} defines how assertion failures are handled. In {@link Truth}, failures" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwU8" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwU9" role="1dT_Ay">
          <property role="1dT_AB" value=" {@linkplain Truth#THROW_ASSERTION_ERROR throw AssertionErrors}; other assertion entry-points like" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUa" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUb" role="1dT_Ay">
          <property role="1dT_AB" value=" {@link Expect} and {@link TruthJUnit#assume} have different failure behavior." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUc" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUd" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUe" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUf" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;It should generally be unnecessary for Truth SPI developers to define their own {@code" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUg" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUh" role="1dT_Ay">
          <property role="1dT_AB" value=" FailureStrategy} implementations. When you really do need to create your own strategy prefer to" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUi" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUj" role="1dT_Ay">
          <property role="1dT_AB" value=" extend {@link AbstractFailureStrategy} rather than this class directly." />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUk" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUl" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUm" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUn" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;p&gt;Alternatives to creating a custom {@code FailureStrategy} implementation:" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUo" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUp" role="1dT_Ay">
          <property role="1dT_AB" value="" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUq" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUr" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;ul&gt;" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUs" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUt" role="1dT_Ay">
          <property role="1dT_AB" value="   &lt;li&gt;For unit tests of a custom subject and assert on the failure behavior use {@link" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUu" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUv" role="1dT_Ay">
          <property role="1dT_AB" value="       ExpectFailure}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUw" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUx" role="1dT_Ay">
          <property role="1dT_AB" value="   &lt;li&gt;To create subjects of other types within your own subject (e.g. for chained assertions) use" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUy" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUz" role="1dT_Ay">
          <property role="1dT_AB" value="       {@link Subject#check}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwU$" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwU_" role="1dT_Ay">
          <property role="1dT_AB" value="   &lt;li&gt;To return a no-op subject after a previous assertion has failed (e.g. for chained" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUA" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUB" role="1dT_Ay">
          <property role="1dT_AB" value="       assertions) use {@link Subject#ignoreCheck}" />
        </node>
      </node>
      <node concept="TZ5HA" id="5JQC2dmPwUC" role="TZ5H$">
        <node concept="1dT_AC" id="5JQC2dmPwUD" role="1dT_Ay">
          <property role="1dT_AB" value=" &lt;/ul&gt;" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwSJ" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwSK" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwSL" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwSM" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPwSN" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwSO" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwSP" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwUE" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUF" role="1dT_Ay">
            <property role="1dT_AB" value="Report an assertion failure with a text message. This method should generally delegate to" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUG" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUH" role="1dT_Ay">
            <property role="1dT_AB" value="{@link #fail(String, Throwable)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwSQ" role="jymVt">
      <property role="TrG5h" value="fail" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwSR" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwSS" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwST" role="3clF46">
        <property role="TrG5h" value="cause" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwSU" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwSV" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPwSW" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwSX" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwSY" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwUI" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUJ" role="1dT_Ay">
            <property role="1dT_AB" value="Report an assertion failure with a text message and a throwable that indicates the cause of the" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUK" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUL" role="1dT_Ay">
            <property role="1dT_AB" value="failure. This will be reported as the cause of the exception raised by this method (if one is" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUM" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUN" role="1dT_Ay">
            <property role="1dT_AB" value="thrown) or otherwise recorded by the strategy as the underlying cause of the failure." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwSZ" role="jymVt">
      <property role="TrG5h" value="failComparing" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwT0" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwT1" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwT2" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwT3" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwT4" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwT5" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwT6" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPwT7" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwT8" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwT9" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwUO" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUP" role="1dT_Ay">
            <property role="1dT_AB" value="Convenience method to report string-comparison failures with more detail (e.g. character" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUQ" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUR" role="1dT_Ay">
            <property role="1dT_AB" value="differences). This method should generally delegate to {@link #failComparing(String," />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUS" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUT" role="1dT_Ay">
            <property role="1dT_AB" value="CharSequence, CharSequence, Throwable)}." />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="5JQC2dmPwTa" role="jymVt">
      <property role="TrG5h" value="failComparing" />
      <property role="1EzhhJ" value="true" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="37vLTG" id="5JQC2dmPwTb" role="3clF46">
        <property role="TrG5h" value="message" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwTc" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~String" resolve="String" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwTd" role="3clF46">
        <property role="TrG5h" value="expected" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwTe" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwTf" role="3clF46">
        <property role="TrG5h" value="actual" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwTg" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~CharSequence" resolve="CharSequence" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwTh" role="3clF46">
        <property role="TrG5h" value="cause" />
        <property role="3TUv4t" value="false" />
        <node concept="3uibUv" id="5JQC2dmPwTi" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwTj" role="3clF47" />
      <node concept="3Tm1VV" id="5JQC2dmPwTk" role="1B3o_S" />
      <node concept="3cqZAl" id="5JQC2dmPwTl" role="3clF45" />
      <node concept="P$JXv" id="5JQC2dmPwTm" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwUU" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUV" role="1dT_Ay">
            <property role="1dT_AB" value="Convenience method to report string-comparison failures with more detail (e.g. character" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUW" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUX" role="1dT_Ay">
            <property role="1dT_AB" value="differences), along with a throwable that indicates the cause of the failure. This will be" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwUY" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwUZ" role="1dT_Ay">
            <property role="1dT_AB" value="reported as the cause of the exception raised by this method (if one is thrown) or otherwise" />
          </node>
        </node>
        <node concept="TZ5HA" id="5JQC2dmPwV0" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwV1" role="1dT_Ay">
            <property role="1dT_AB" value="recorded by the strategy as the underlying cause of the failure." />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5JQC2dmPwTn" role="jymVt">
      <property role="TrG5h" value="stripTruthStackFrames" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="16euLQ" id="5JQC2dmPwTo" role="16eVyc">
        <property role="TrG5h" value="T" />
        <node concept="3uibUv" id="5JQC2dmPwTp" role="3ztrMU">
          <ref role="3uigEE" to="wyt6:~Throwable" resolve="Throwable" />
        </node>
      </node>
      <node concept="37vLTG" id="5JQC2dmPwTq" role="3clF46">
        <property role="TrG5h" value="throwable" />
        <property role="3TUv4t" value="false" />
        <node concept="16syzq" id="5JQC2dmPwTr" role="1tU5fm">
          <ref role="16sUi3" node="5JQC2dmPwTo" resolve="T" />
        </node>
      </node>
      <node concept="3clFbS" id="5JQC2dmPwTs" role="3clF47">
        <node concept="3cpWs8" id="5JQC2dmPwTu" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwTt" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="stackTrace" />
            <node concept="10Q1$e" id="5JQC2dmPwTw" role="1tU5fm">
              <node concept="3uibUv" id="5JQC2dmPwTv" role="10Q1$1">
                <ref role="3uigEE" to="wyt6:~StackTraceElement" resolve="StackTraceElement" />
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPCxU" role="33vP2m">
              <node concept="37vLTw" id="5JQC2dmPCxT" role="2Oq$k0">
                <ref role="3cqZAo" node="5JQC2dmPwTq" resolve="throwable" />
              </node>
              <node concept="liA8E" id="5JQC2dmPCxV" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Throwable.getStackTrace():java.lang.StackTraceElement[]" resolve="getStackTrace" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5JQC2dmPwTz" role="3cqZAp">
          <node concept="3cpWsn" id="5JQC2dmPwTy" role="3cpWs9">
            <property role="3TUv4t" value="false" />
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5JQC2dmPwT$" role="1tU5fm" />
            <node concept="3cmrfG" id="5JQC2dmPwT_" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2$JKZl" id="5JQC2dmPwTR" role="3cqZAp">
          <node concept="1Wc70l" id="5JQC2dmPwTA" role="2$JKZa">
            <node concept="3eOVzh" id="5JQC2dmPwTB" role="3uHU7B">
              <node concept="37vLTw" id="5JQC2dmPwTC" role="3uHU7B">
                <ref role="3cqZAo" node="5JQC2dmPwTy" resolve="i" />
              </node>
              <node concept="2OqwBi" id="5JQC2dmPCxY" role="3uHU7w">
                <node concept="37vLTw" id="5JQC2dmPCxX" role="2Oq$k0">
                  <ref role="3cqZAo" node="5JQC2dmPwTt" resolve="stackTrace" />
                </node>
                <node concept="1Rwk04" id="5JQC2dmQb_8" role="2OqNvi" />
              </node>
            </node>
            <node concept="2OqwBi" id="5JQC2dmPwTE" role="3uHU7w">
              <node concept="2OqwBi" id="5JQC2dmPwTF" role="2Oq$k0">
                <node concept="AH0OO" id="5JQC2dmPwTG" role="2Oq$k0">
                  <node concept="37vLTw" id="5JQC2dmPwTH" role="AHHXb">
                    <ref role="3cqZAo" node="5JQC2dmPwTt" resolve="stackTrace" />
                  </node>
                  <node concept="37vLTw" id="5JQC2dmPwTI" role="AHEQo">
                    <ref role="3cqZAo" node="5JQC2dmPwTy" resolve="i" />
                  </node>
                </node>
                <node concept="liA8E" id="5JQC2dmPwTJ" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~StackTraceElement.getClassName():java.lang.String" resolve="getClassName" />
                </node>
              </node>
              <node concept="liA8E" id="5JQC2dmPwTK" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.startsWith(java.lang.String):boolean" resolve="startsWith" />
                <node concept="Xl_RD" id="5JQC2dmPwTL" role="37wK5m">
                  <property role="Xl_RC" value="com.google.common.truth" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="5JQC2dmPwTN" role="2LFqv$">
            <node concept="3clFbF" id="5JQC2dmPwTO" role="3cqZAp">
              <node concept="3uNrnE" id="5JQC2dmPwTP" role="3clFbG">
                <node concept="37vLTw" id="5JQC2dmPwTQ" role="2$L3a6">
                  <ref role="3cqZAo" node="5JQC2dmPwTy" resolve="i" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5JQC2dmPwTS" role="3cqZAp">
          <node concept="2OqwBi" id="5JQC2dmPCy2" role="3clFbG">
            <node concept="37vLTw" id="5JQC2dmPCy1" role="2Oq$k0">
              <ref role="3cqZAo" node="5JQC2dmPwTq" resolve="throwable" />
            </node>
            <node concept="liA8E" id="5JQC2dmPCy3" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Throwable.setStackTrace(java.lang.StackTraceElement[]):void" resolve="setStackTrace" />
              <node concept="2YIFZM" id="5JQC2dmPCyn" role="37wK5m">
                <ref role="1Pybhc" to="33ny:~Arrays" resolve="Arrays" />
                <ref role="37wK5l" to="33ny:~Arrays.copyOfRange(boolean[],int,int):boolean[]" resolve="copyOfRange" />
                <node concept="37vLTw" id="5JQC2dmPCyo" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwTt" resolve="stackTrace" />
                </node>
                <node concept="37vLTw" id="5JQC2dmPCyp" role="37wK5m">
                  <ref role="3cqZAo" node="5JQC2dmPwTy" resolve="i" />
                </node>
                <node concept="2OqwBi" id="5JQC2dmPCKd" role="37wK5m">
                  <node concept="37vLTw" id="5JQC2dmPCKc" role="2Oq$k0">
                    <ref role="3cqZAo" node="5JQC2dmPwTt" resolve="stackTrace" />
                  </node>
                  <node concept="1Rwk04" id="5JQC2dmQb_9" role="2OqNvi" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5JQC2dmPwTY" role="3cqZAp">
          <node concept="37vLTw" id="5JQC2dmPwTZ" role="3cqZAk">
            <ref role="3cqZAo" node="5JQC2dmPwTq" resolve="throwable" />
          </node>
        </node>
      </node>
      <node concept="16syzq" id="5JQC2dmPwU0" role="3clF45">
        <ref role="16sUi3" node="5JQC2dmPwTo" resolve="T" />
      </node>
      <node concept="P$JXv" id="5JQC2dmPwU1" role="lGtFl">
        <node concept="TZ5HA" id="5JQC2dmPwV2" role="TZ5H$">
          <node concept="1dT_AC" id="5JQC2dmPwV3" role="1dT_Ay">
            <property role="1dT_AB" value="Strips stack frames from the throwable that have a class starting with com.google.common.truth." />
          </node>
        </node>
      </node>
    </node>
  </node>
</model>

